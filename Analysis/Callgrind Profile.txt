--------------------------------------------------------------------------------
Profile data file 'callgrind.out.5757' (creator: callgrind-3.10.1)
--------------------------------------------------------------------------------
I1 cache: 
D1 cache: 
LL cache: 
Timerange: Basic block 0 - 7273931080
Trigger: Program termination
Profiled target:  ./mesh_reconstruction ../../data/shape_completion_results/cellphone_poisson_008/0_1_6/completion_cf.binvox ../../data/shape_completion_results/cellphone_poisson_008/0_1_6/partial_cf.pcd tmp.ply 1 (PID 5757, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
            Ir 
--------------------------------------------------------------------------------
32,690,130,705  PROGRAM TOTALS

--------------------------------------------------------------------------------
           Ir  file:function
--------------------------------------------------------------------------------
4,997,187,379  /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp:doStep(int, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/optimize/liboptimize_lib.so]

1,002,968,256  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]
  617,211,236  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]
  546,573,987  /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getsqdist(boost::shared_ptr<grid>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/distance_fields/libdfields_lib.so]

  540,899,053  /home/davidwatkins/post_processing/mesh_reconstruction/binvoxToPCL/binvoxToPcl.cpp:binvoxToPCL(std::string, int) [/home/davidwatkins/post_processing/mesh_reconstruction/build/binvoxToPCL/libbinvoxToPcl_lib.so]
  424,332,722  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]
  386,094,046  /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp:runQP(boost::shared_ptr<qp_args>, std::vector<int, std::allocator<int> > const&, bool) [/home/davidwatkins/post_processing/mesh_reconstruction/build/optimize/liboptimize_lib.so]
  327,893,467  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::y_z(float**, int, int) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]  250,742,063  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::z(float*, int) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]  156,385,329  /build/eglibc-oGUzwX/eglibc-2.19/elf/dl-lookup.c:do_lookup_x [/lib/x86_64-linux-gnu/ld-2.19.so]


  149,651,354  /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:fastPerim(boost::shared_ptr<grid>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/distance_fields/libdfields_lib.so]
   74,133,222  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:getGridCells(boost::shared_ptr<grid>, boost::shared_ptr<grid>, std::vector<Eigen::Matrix<float, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<float, 3, 1, 0, 3, 1> > > const&, float, float, bool) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]

   70,711,679  /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:_int_free [/lib/x86_64-linux-gnu/libc-2.19.so]

   65,793,629  /build/eglibc-oGUzwX/eglibc-2.19/elf/dl-lookup.c:_dl_lookup_symbol_x [/lib/x86_64-linux-gnu/ld-2.19.so]
   64,641,275  /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getFeatureMap(boost::shared_ptr<grid>, boost::shared_ptr<grid>, std::vector<Eigen::Matrix<float, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<float, 3, 1, 0, 3, 1> > > const&, float) [/home/davidwatkins/post_processing/mesh_reconstruction/build/distance_fields/libdfields_lib.so]
   61,379,024  /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:_int_malloc [/lib/x86_64-linux-gnu/libc-2.19.so]

   47,741,955  /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:isSurface(boost::shared_ptr<grid>, Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/distance_fields/libdfields_lib.so]

   41,907,122  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::ind2sub(int) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]


   39,044,006  /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:malloc [/lib/x86_64-linux-gnu/libc-2.19.so]


   33,146,674  /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.cpp:getHMat(boost::shared_ptr<grid>, boost::shared_ptr<grid>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/optimize/liboptimize_lib.so]   30,190,326  /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getCovariance(boost::shared_ptr<grid>, Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/distance_fields/libdfields_lib.so]
   26,916,358  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(grid&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]
   25,062,786  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.h:GRIDCELL::GRIDCELL(GRIDCELL const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]


   23,727,600  /home/davidwatkins/post_processing/mesh_reconstruction/binvoxToPCL/binvoxToPcl.cpp:get_index(binvox const&, int, int, int) [/home/davidwatkins/post_processing/mesh_reconstruction/build/binvoxToPCL/libbinvoxToPcl_lib.so]   18,403,289  /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-machine.h:_dl_relocate_object
   16,530,712  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]
   15,439,751  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:findIndexes(boost::shared_ptr<grid>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]   14,394,738  /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:free [/lib/x86_64-linux-gnu/libc-2.19.so]

   13,986,893  /home/davidwatkins/post_processing/mesh_reconstruction/narrow_band/narrowBand.cpp:dilate_grid(boost::shared_ptr<grid>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/narrow_band/libnarrowBand_lib.so]
   13,907,745  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:isFeature(GRIDCELL&, std::vector<Eigen::Matrix<float, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<float, 3, 1, 0, 3, 1> > > const&, float, float) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]


   12,519,807  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >, boost::shared_ptr<pcl::VoxelGrid<pcl::InterestPoint> >) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]
   12,318,509  /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/../strcmp.S:strcmp'2 [/lib/x86_64-linux-gnu/ld-2.19.so]
   11,045,723  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:getIndexMap(boost::shared_ptr<grid>, std::vector<int, std::allocator<int> > const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]
   10,443,444  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::sub2ind(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]


   10,373,514  ???:std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [/home/davidwatkins/post_processing/mesh_reconstruction/build/mesh_reconstruction]

    9,957,044  /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getCentroid(boost::shared_ptr<grid>, std::vector<int, std::allocator<int> > const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/distance_fields/libdfields_lib.so]


    9,674,443  /home/davidwatkins/post_processing/mesh_reconstruction/narrow_band/narrowBand.cpp:erode_grid(boost::shared_ptr<grid>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/narrow_band/libnarrowBand_lib.so]


    9,365,464  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator()(int) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]


    8,900,796  /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getSurfaceNeighbors(boost::shared_ptr<grid>, Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/distance_fields/libdfields_lib.so]
    8,466,290  /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.cpp:getub(boost::shared_ptr<grid>, boost::shared_ptr<grid>, std::vector<int, std::allocator<int> > const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/optimize/liboptimize_lib.so]
    7,940,537  /build/eglibc-oGUzwX/eglibc-2.19/stdio-common/printf_fp.c:__printf_fp [/lib/x86_64-linux-gnu/libc-2.19.so]
    7,892,178  /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getNeighbors(boost::shared_ptr<grid>, Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/distance_fields/libdfields_lib.so]
    7,407,714  /build/eglibc-oGUzwX/eglibc-2.19/elf/do-rel.h:_dl_relocate_object
    7,257,576  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:flipEdges(std::vector<GRIDCELL, std::allocator<GRIDCELL> >&, boost::shared_ptr<grid>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]


    6,810,114  /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.cpp:getlb(boost::shared_ptr<grid>, boost::shared_ptr<grid>, std::vector<int, std::allocator<int> > const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/optimize/liboptimize_lib.so]
    6,801,628  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:Polygonise(GRIDCELL&, float, std::vector<Eigen::Matrix<float, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<float, 3, 1, 0, 3, 1> > > const&, bool) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]
    6,766,569  /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp:optimize(boost::shared_ptr<grid>, boost::shared_ptr<grid>, bool) [/home/davidwatkins/post_processing/mesh_reconstruction/build/optimize/liboptimize_lib.so]

    6,736,699  /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp:getPr(boost::shared_ptr<Eigen::SparseMatrix<float, 0, int> >) [/home/davidwatkins/post_processing/mesh_reconstruction/build/optimize/liboptimize_lib.so]
    6,495,273  /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp:getIr(boost::shared_ptr<Eigen::SparseMatrix<float, 0, int> >) [/home/davidwatkins/post_processing/mesh_reconstruction/build/optimize/liboptimize_lib.so]    6,276,145  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ() [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]

    6,245,878  /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:__memmove_ssse3_back [/lib/x86_64-linux-gnu/libc-2.19.so]
    5,936,492  /home/davidwatkins/post_processing/mesh_reconstruction/narrow_band/narrowBand.cpp:createBands(boost::shared_ptr<grid>, float) [/home/davidwatkins/post_processing/mesh_reconstruction/build/narrow_band/libnarrowBand_lib.so]


    5,829,574  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:sameEdge(std::vector<XYZ, std::allocator<XYZ> >, std::vector<XYZ, std::allocator<XYZ> >) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]


    5,468,464  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:getBinaryVolume(boost::shared_ptr<grid>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]
    5,463,580  /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getsqrt(boost::shared_ptr<grid>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/distance_fields/libdfields_lib.so]

    5,214,212  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:mcubes(boost::shared_ptr<grid>, boost::shared_ptr<grid>, std::vector<Eigen::Matrix<float, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<float, 3, 1, 0, 3, 1> > > const&, float, float, float, char const*, bool) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]


    5,087,983  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]


    4,952,320  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.h:GRIDCELL::GRIDCELL() [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]


    4,913,053  /build/eglibc-oGUzwX/eglibc-2.19/elf/dl-lookup.c:check_match.9481 [/lib/x86_64-linux-gnu/ld-2.19.so]
    4,420,023  /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getSurface(boost::shared_ptr<grid>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/distance_fields/libdfields_lib.so]    3,926,474  /build/eglibc-oGUzwX/eglibc-2.19/elf/dl-misc.c:_dl_name_match_p [/lib/x86_64-linux-gnu/ld-2.19.so]
    3,799,474  /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.cpp:primeQP(boost::shared_ptr<grid>, boost::shared_ptr<grid>, boost::shared_ptr<bands>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/optimize/liboptimize_lib.so]


    3,767,680  ???:std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [/home/davidwatkins/post_processing/mesh_reconstruction/build/mesh_reconstruction]


    3,745,263  /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.cpp:getFeatureIndexes(boost::shared_ptr<grid>, boost::shared_ptr<grid>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/optimize/liboptimize_lib.so]    3,590,230  /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp:getJc(boost::shared_ptr<Eigen::SparseMatrix<float, 0, int> >) [/home/davidwatkins/post_processing/mesh_reconstruction/build/optimize/liboptimize_lib.so]

    3,425,654  /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/memset.S:memset [/lib/x86_64-linux-gnu/libc-2.19.so]

    3,349,913  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::fillGrid(int) [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]


    3,229,440  ???:std::vector<int, std::allocator<int> >::~vector() [/home/davidwatkins/post_processing/mesh_reconstruction/build/mesh_reconstruction]

    3,190,574  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:getVec(GRIDCELL const&, std::vector<XYZ, std::allocator<XYZ> > const&, std::vector<Eigen::Matrix<float, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<float, 3, 1, 0, 3, 1> > > const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]    3,027,192  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:pointHashmap::hashXYZ(XYZ const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]
    2,934,265  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.h:GRIDCELL::~GRIDCELL() [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]

    2,885,395  /build/eglibc-oGUzwX/eglibc-2.19/stdio-common/vfprintf.c:vfprintf [/lib/x86_64-linux-gnu/libc-2.19.so]


    2,586,158  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:getEdges(std::vector<TRIANGLE, std::allocator<TRIANGLE> > const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]


    2,554,523  /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/../strcmp.S:strcmp [/lib/x86_64-linux-gnu/ld-2.19.so]

    2,481,204  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:operator<(XYZ const&, XYZ const&) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]

    2,414,555  /build/eglibc-oGUzwX/eglibc-2.19/stdio-common/printf_fp.c:hack_digit.13665 [/lib/x86_64-linux-gnu/libc-2.19.so]


    2,228,663  /build/eglibc-oGUzwX/eglibc-2.19/stdlib/cxa_finalize.c:__cxa_finalize [/lib/x86_64-linux-gnu/libc-2.19.so]


    2,016,651  /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/memcpy-sse2-unaligned.S:__memcpy_sse2_unaligned [/lib/x86_64-linux-gnu/libc-2.19.so]

    1,741,924  /build/eglibc-oGUzwX/eglibc-2.19/stdlib/../sysdeps/x86_64/mul_1.S:__mpn_mul_1 [/lib/x86_64-linux-gnu/libc-2.19.so]


    1,530,000  /home/davidwatkins/post_processing/mesh_reconstruction/binvoxToPCL/binvoxToPcl.cpp:read_binvox(binvox*, std::string) [/home/davidwatkins/post_processing/mesh_reconstruction/build/binvoxToPCL/libbinvoxToPcl_lib.so]

    1,493,412  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]
    1,484,928  /build/eglibc-oGUzwX/eglibc-2.19/stdlib/../stdlib/strtol_l.c:____strtoul_l_internal [/lib/x86_64-linux-gnu/libc-2.19.so]


    1,433,858  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::deallocGrid() [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]
    1,404,332  /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::allocGrid() [/home/davidwatkins/post_processing/mesh_reconstruction/build/grid/libgrid_lib.so]

    1,387,325  /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/generic/dl-hash.h:do_lookup_x


    1,362,742  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:getSamplePoints(GRIDCELL const&, float, int) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]
    1,359,327  /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:malloc_consolidate [/lib/x86_64-linux-gnu/libc-2.19.so]


    1,316,733  /home/davidwatkins/post_processing/mesh_reconstruction/voxelize/voxelize.cpp:getResolution(boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >) [/home/davidwatkins/post_processing/mesh_reconstruction/build/voxelize/libvoxelize_lib.so]


    1,311,297  /home/davidwatkins/post_processing/mesh_reconstruction/voxelize/voxelize.cpp:modifyStrengths(boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >, boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >, boost::shared_ptr<pcl::octree::OctreePointCloudSearch<pcl::InterestPoint, pcl::octree::OctreeContainerPointIndices, pcl::octree::OctreeContainerEmpty> >) [/home/davidwatkins/post_processing/mesh_reconstruction/build/voxelize/libvoxelize_lib.so]
    1,211,040  ???:std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [/home/davidwatkins/post_processing/mesh_reconstruction/build/mesh_reconstruction]
    1,162,539  /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.cpp:pointHashmap::pointHashmap(std::vector<TRIANGLE, std::allocator<TRIANGLE> >, boost::shared_ptr<grid>) [/home/davidwatkins/post_processing/mesh_reconstruction/build/marching_cubes/libmcubes_lib.so]
      976,558  /home/davidwatkins/post_processing/mesh_reconstruction/confidence_pcl/assign_confidence.cpp:assign_confidence(boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >, boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >, Confidencor*) [/home/davidwatkins/post_processing/mesh_reconstruction/build/confidence_pcl/libassignConfidence_lib.so]


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 52 ----------------------------------------
        .          boost::unordered::detail::ptr_bucket
        .      {
        .          typedef boost::unordered::detail::ptr_bucket bucket_base;
        .          typedef ptr_node<T>* node_pointer;
        .          typedef ptr_bucket* link_pointer;
        .  
        .          std::size_t hash_;
        .  
   13,632          ptr_node() :
        .              bucket_base(),
   37,496              hash_(0)
    1,716  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


    6,816          {}
        .  
   13,632          void init(node_pointer)
        .          {
    6,816          }
        .  
        .      private:
        .          ptr_node& operator=(ptr_node const&);
        .      };
        .  
        .      // If the allocator uses raw pointers use ptr_node
        .      // Otherwise use node.
        .  
-- line 75 ----------------------------------------
-- line 162 ----------------------------------------
        .          typedef boost::unordered::detail::table_impl<types> table;
        .          typedef boost::unordered::detail::map_extractor<key_type, value_type>
        .              extractor;
        .  
        .          typedef boost::unordered::detail::pick_policy::type policy;
        .      };
        .  
        .      template <typename Types>
       14      struct table_impl : boost::unordered::detail::table<Types>
    1,226  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .      {
        .          typedef boost::unordered::detail::table<Types> table;
        .          typedef typename table::value_type value_type;
        .          typedef typename table::bucket bucket;
        .          typedef typename table::policy policy;
        .          typedef typename table::node_pointer node_pointer;
        .          typedef typename table::node_allocator node_allocator;
        .          typedef typename table::node_allocator_traits node_allocator_traits;
-- line 178 ----------------------------------------
-- line 185 ----------------------------------------
        .          typedef typename table::extractor extractor;
        .          typedef typename table::iterator iterator;
        .          typedef typename table::c_iterator c_iterator;
        .  
        .          typedef std::pair<iterator, bool> emplace_return;
        .  
        .          // Constructors
        .  
        8          table_impl(std::size_t n,
        .                  hasher const& hf,
        .                  key_equal const& eq,
        .                  node_allocator const& a)
       13            : table(n, hf, eq, a)
    1,482  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        2          {}
        .  
        .          table_impl(table_impl const& x)
        .            : table(x, node_allocator_traits::
        .                  select_on_container_copy_construction(x.node_alloc()))
        .          {
        .              this->init(x);
        .          }
        .  
-- line 206 ----------------------------------------
-- line 222 ----------------------------------------
        .            : table(x, a, m)
        .          {
        .              this->move_init(x);
        .          }
        .  
        .          // Accessors
        .  
        .          template <class Key, class Pred>
  453,390          iterator find_node_impl(
        .                  std::size_t key_hash,
        .                  Key const& k,
        .                  Pred const& eq) const
        .          {
  453,394              std::size_t bucket_index = this->hash_to_bucket(key_hash);
    1,330  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  453,394              iterator n = this->begin(bucket_index);
    1,242  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  
   23,272              for (;;)
        .              {
  270,974                  if (!n.node_) return n;
        .  
  253,854                  std::size_t node_hash = n.node_->hash_;
  253,854                  if (key_hash == node_hash)
        .                  {
1,101,134                      if (eq(k, this->get_key(*n)))

    1,980  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


  115,908                          return n;
        .                  }
        .                  else
        .                  {
  266,640                      if (this->hash_to_bucket(node_hash) != bucket_index)

   20,352                          return iterator();

        .                  }
        .  
   93,092                  ++n;

    1,162  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .              }
  129,540          }
        .  
        .          std::size_t count(key_type const& k) const
        .          {
        .              return this->find_node(k).node_ ? 1 : 0;
        .          }
        .  
  122,724          value_type& at(key_type const& k) const
        .          {
   81,816              if (this->size_) {
  143,178                  iterator it = this->find_node(k);

  163,632                  if (it.node_) return *it;

        .              }
        .  
        .              boost::throw_exception(
        .                  std::out_of_range("Unable to find key in unordered_map."));
   81,816          }
        .  
        .          std::pair<iterator, iterator>
        .              equal_range(key_type const& k) const
        .          {
        .              iterator n = this->find_node(k);
        .              iterator n2 = n;
        .              if (n2.node_) ++n2;
        .              return std::make_pair(n, n2);
-- line 280 ----------------------------------------
-- line 294 ----------------------------------------
        .                      return false;
        .              }
        .      
        .              return true;
        .          }
        .  
        .          // Emplace/Insert
        .  
   20,448          inline iterator add_node(
        .                  node_constructor& a,
        .                  std::size_t key_hash)
        .          {
   17,044              node_pointer n = a.release();
    1,178  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   10,224              n->hash_ = key_hash;
        .      
   44,308              bucket_pointer b = this->get_bucket(this->hash_to_bucket(key_hash));
    1,325  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


        .  
   13,632              if (!b->next_)
        .              {
    8,544                  link_pointer start_node = this->get_previous_start();
    1,354  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .                  
    6,832                  if (start_node->next_) {
    1,707                      this->get_bucket(this->hash_to_bucket(
    3,414                          static_cast<node_pointer>(start_node->next_)->hash_)
   40,968                      )->next_ = n;


        .                  }
        .  
    5,124                  b->next_ = start_node;
    6,832                  n->next_ = start_node->next_;
   13,664                  start_node->next_ = n;
        .              }
        .              else
        .              {
    8,500                  n->next_ = b->next_->next_;
   13,600                  b->next_->next_ = n;
        .              }
        .  
   17,040              ++this->size_;
   37,492              return iterator(n);
    1,290  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    6,816          }
        .  
   20,448          value_type& operator[](key_type const& k)
        .          {
        .              typedef typename value_type::second_type mapped_type;
        .      
   23,856              std::size_t key_hash = this->hash(k);

   27,268              iterator pos = this->find_node(key_hash, k);
    1,306  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .      
   10,224              if (pos.node_) return *pos;
        .      
        .              // Create the node before rehashing in case it throws an
        .              // exception (need strong safety in such a case).
   34,088              node_constructor a(this->node_alloc());


    2,436  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
   44,312              a.construct_with_value(BOOST_UNORDERED_EMPLACE_ARGS3(

    4,716  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

        .                  boost::unordered::piecewise_construct,
        .                  boost::make_tuple(k),
   23,864                  boost::make_tuple()));

    2,103  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

        .      
   27,268              this->reserve_for_insert(this->size_ + 1);

    1,346  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   64,764              return *add_node(a, key_hash);


    3,974  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)

   13,632          }
        .  
        .  #if defined(BOOST_NO_CXX11_RVALUE_REFERENCES)
        .  #   if defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)
        .          emplace_return emplace(boost::unordered::detail::emplace_args1<
        .                  boost::unordered::detail::please_ignore_this_overload> const&)
        .          {
        .              BOOST_ASSERT(false);
        .              return emplace_return(this->begin(), false);
-- line 362 ----------------------------------------
-- line 583 ----------------------------------------
        .                  ++dst.size_;
        .                  ++n;
        .  
        .                  prev = place_in_bucket(dst, prev);
        .              }
        .          }
        .  
        .          // strong otherwise exception safety
       40          void rehash_impl(std::size_t num_buckets)
        .          {
       32              BOOST_ASSERT(this->buckets_);
        .  
       48              this->create_buckets(num_buckets);

       40              link_pointer prev = this->get_previous_start();

   16,360              while (prev->next_)
   28,564                  prev = place_in_bucket(*this, prev);
    1,650  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

       16          }
        .  
        .          // Iterate through the nodes placing them in the correct buckets.
        .          // pre: prev->next_ is not null.
   20,400          static link_pointer place_in_bucket(table& dst, link_pointer prev)
        .          {
   36,720              node_pointer n = static_cast<node_pointer>(prev->next_);
   57,120              bucket_pointer b = dst.get_bucket(dst.hash_to_bucket(n->hash_));


        .  
   16,320              if (!b->next_) {
    9,558                  b->next_ = prev;
   19,116                  return n;
        .              }
        .              else {
    3,576                  prev->next_ = n->next_;
    4,470                  n->next_ = b->next_->next_;
    7,152                  b->next_->next_ = n;
      894                  return prev;
        .              }
    8,160          }
        .      };
        .  }}}
        .  
        .  #endif

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 153 ----------------------------------------
        .  {
        .    __builtin_ia32_storeupd (__P, __A);
        .  }
        .  
        .  /* Stores the lower DPFP value.  */
        .  extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_store_sd (double *__P, __m128d __A)
        .  {
    2,884    *__P = __builtin_ia32_vec_ext_v2df (__A, 0);
        .  }
        .  
        .  extern __inline double __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_cvtsd_f64 (__m128d __A)
        .  {
        .    return __builtin_ia32_vec_ext_v2df (__A, 0);
        .  }
        .  
-- line 169 ----------------------------------------
-- line 172 ----------------------------------------
        .  {
        .    _mm_store_sd (__P, __A);
        .  }
        .  
        .  /* Stores the upper DPFP value.  */
        .  extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_storeh_pd (double *__P, __m128d __A)
        .  {
    2,884    *__P = __builtin_ia32_vec_ext_v2df (__A, 1);
        .  }
        .  
        .  /* Store the lower DPFP value across two words.
        .     The address must be 16-byte aligned.  */
        .  extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_store1_pd (double *__P, __m128d __A)
        .  {
        .    _mm_store_pd (__P, __builtin_ia32_shufpd (__A, __A, _MM_SHUFFLE2 (0,0)));
-- line 188 ----------------------------------------
-- line 199 ----------------------------------------
        .  _mm_storer_pd (double *__P, __m128d __A)
        .  {
        .    _mm_store_pd (__P, __builtin_ia32_shufpd (__A, __A, _MM_SHUFFLE2 (0,1)));
        .  }
        .  
        .  extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_cvtsi128_si32 (__m128i __A)
        .  {
  438,372    return __builtin_ia32_vec_ext_v4si ((__v4si)__A, 0);
        .  }
        .  
        .  #ifdef __x86_64__
        .  /* Intel intrinsic.  */
        .  extern __inline long long __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_cvtsi128_si64 (__m128i __A)
        .  {
        .    return __builtin_ia32_vec_ext_v2di ((__v2di)__A, 0);
-- line 215 ----------------------------------------
-- line 577 ----------------------------------------
        .  _mm_set_epi64 (__m64 __q1,  __m64 __q0)
        .  {
        .    return _mm_set_epi64x ((long long)__q1, (long long)__q0);
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_set_epi32 (int __q3, int __q2, int __q1, int __q0)
        .  {
1,210,432    return __extension__ (__m128i)(__v4si){ __q0, __q1, __q2, __q3 };
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_set_epi16 (short __q7, short __q6, short __q5, short __q4,
        .  	       short __q3, short __q2, short __q1, short __q0)
        .  {
        .    return __extension__ (__m128i)(__v8hi){
        .      __q0, __q1, __q2, __q3, __q4, __q5, __q6, __q7 };
-- line 593 ----------------------------------------
-- line 670 ----------------------------------------
        .  		       __q07, __q06, __q05, __q04, __q03, __q02, __q01, __q00);
        .  }
        .  
        .  /* Create a vector with element 0 as *P and the rest zero.  */
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_load_si128 (__m128i const *__P)
        .  {
  438,372    return *__P;
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_loadu_si128 (__m128i const *__P)
        .  {
        .    return (__m128i) __builtin_ia32_loaddqu ((char const *)__P);
        .  }
        .  
-- line 686 ----------------------------------------
-- line 688 ----------------------------------------
        .  _mm_loadl_epi64 (__m128i const *__P)
        .  {
        .    return _mm_set_epi64 ((__m64)0LL, *(__m64 *)__P);
        .  }
        .  
        .  extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_store_si128 (__m128i *__P, __m128i __B)
        .  {
  210,750    *__P = __B;
        .  }
        .  
        .  extern __inline void __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_storeu_si128 (__m128i *__P, __m128i __B)
        .  {
        .    __builtin_ia32_storedqu ((char *)__P, (__v16qi)__B);
        .  }
        .  
-- line 704 ----------------------------------------
-- line 953 ----------------------------------------
        .  _mm_unpackhi_epi32 (__m128i __A, __m128i __B)
        .  {
        .    return (__m128i)__builtin_ia32_punpckhdq128 ((__v4si)__A, (__v4si)__B);
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_unpackhi_epi64 (__m128i __A, __m128i __B)
        .  {
  146,124    return (__m128i)__builtin_ia32_punpckhqdq128 ((__v2di)__A, (__v2di)__B);
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_unpacklo_epi8 (__m128i __A, __m128i __B)
        .  {
        .    return (__m128i)__builtin_ia32_punpcklbw128 ((__v16qi)__A, (__v16qi)__B);
        .  }
        .  
-- line 969 ----------------------------------------
-- line 995 ----------------------------------------
        .  _mm_add_epi16 (__m128i __A, __m128i __B)
        .  {
        .    return (__m128i)__builtin_ia32_paddw128 ((__v8hi)__A, (__v8hi)__B);
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_add_epi32 (__m128i __A, __m128i __B)
        .  {
  219,186    return (__m128i)__builtin_ia32_paddd128 ((__v4si)__A, (__v4si)__B);
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_add_epi64 (__m128i __A, __m128i __B)
        .  {
        .    return (__m128i)__builtin_ia32_paddq128 ((__v2di)__A, (__v2di)__B);
        .  }
        .  
-- line 1011 ----------------------------------------
-- line 1043 ----------------------------------------
        .  _mm_sub_epi16 (__m128i __A, __m128i __B)
        .  {
        .    return (__m128i)__builtin_ia32_psubw128 ((__v8hi)__A, (__v8hi)__B);
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_sub_epi32 (__m128i __A, __m128i __B)
        .  {
  219,186    return (__m128i)__builtin_ia32_psubd128 ((__v4si)__A, (__v4si)__B);
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_sub_epi64 (__m128i __A, __m128i __B)
        .  {
        .    return (__m128i)__builtin_ia32_psubq128 ((__v2di)__A, (__v2di)__B);
        .  }
        .  
-- line 1059 ----------------------------------------
-- line 1103 ----------------------------------------
        .  _mm_mul_su32 (__m64 __A, __m64 __B)
        .  {
        .    return (__m64)__builtin_ia32_pmuludq ((__v2si)__A, (__v2si)__B);
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_mul_epu32 (__m128i __A, __m128i __B)
        .  {
  584,496    return (__m128i)__builtin_ia32_pmuludq128 ((__v4si)__A, (__v4si)__B);
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_slli_epi16 (__m128i __A, int __B)
        .  {
        .    return (__m128i)__builtin_ia32_psllwi128 ((__v8hi)__A, __B);
        .  }
        .  
-- line 1119 ----------------------------------------
-- line 1505 ----------------------------------------
        .  _mm_castpd_si128(__m128d __A)
        .  {
        .    return (__m128i) __A;
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_castps_pd(__m128 __A)
        .  {
      721    return (__m128d) __A;
        .  }
        .  
        .  extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_castps_si128(__m128 __A)
        .  {
   73,062    return (__m128i) __A;
        .  }
        .  
        .  extern __inline __m128 __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_castsi128_ps(__m128i __A)
        .  {
  147,023    return (__m128) __A;
        .  }
        .  
        .  extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))
        .  _mm_castsi128_pd(__m128i __A)
        .  {
        .    return (__m128d) __A;
        .  }
        .  
-- line 1533 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
         Ir 

-- line 26 ----------------------------------------
          .    *
          .    * This class defines the \c operator() \c const function and friends, which can be used to read specific
          .    * entries of a matrix or array.
          .    * 
          .    * \sa DenseCoeffsBase<Derived, WriteAccessors>, DenseCoeffsBase<Derived, DirectAccessors>,
          .    *     \ref TopicClassHierarchy
          .    */
          .  template<typename Derived>
 10,260,684  class DenseCoeffsBase<Derived,ReadOnlyAccessors> : public EigenBase<Derived>
        946  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .  {
          .    public:
          .      typedef typename internal::traits<Derived>::StorageKind StorageKind;
          .      typedef typename internal::traits<Derived>::Index Index;
          .      typedef typename internal::traits<Derived>::Scalar Scalar;
          .      typedef typename internal::packet_traits<Scalar>::type PacketScalar;
          .  
          .      // Explanation for this CoeffReturnType typedef.
-- line 42 ----------------------------------------
-- line 56 ----------------------------------------
          .                       >::type PacketReturnType;
          .  
          .      typedef EigenBase<Derived> Base;
          .      using Base::rows;
          .      using Base::cols;
          .      using Base::size;
          .      using Base::derived;
          .  
     25,515      EIGEN_STRONG_INLINE Index rowIndexByOuterInner(Index outer, Index inner) const
          .      {
          .        return int(Derived::RowsAtCompileTime) == 1 ? 0
          .            : int(Derived::ColsAtCompileTime) == 1 ? inner
          .            : int(Derived::Flags)&RowMajorBit ? outer
      5,103            : inner;
     10,206      }
          .  
     25,515      EIGEN_STRONG_INLINE Index colIndexByOuterInner(Index outer, Index inner) const
          .      {
          .        return int(Derived::ColsAtCompileTime) == 1 ? 0
          .            : int(Derived::RowsAtCompileTime) == 1 ? inner
          .            : int(Derived::Flags)&RowMajorBit ? inner
      5,103            : outer;
     10,206      }
          .  
          .      /** Short version: don't use this function, use
          .        * \link operator()(Index,Index) const \endlink instead.
          .        *
          .        * Long version: this function is similar to
          .        * \link operator()(Index,Index) const \endlink, but without the assertion.
          .        * Use this for limiting the performance cost of debugging code when doing
          .        * repeated coefficient access. Only use this when it is guaranteed that the
          .        * parameters \a row and \a col are in range.
          .        *
          .        * If EIGEN_INTERNAL_DEBUGGING is defined, an assertion will be made, making this
          .        * function equivalent to \link operator()(Index,Index) const \endlink.
          .        *
          .        * \sa operator()(Index,Index) const, coeffRef(Index,Index), coeff(Index) const
          .        */
     37,062      EIGEN_STRONG_INLINE CoeffReturnType coeff(Index row, Index col) const
          .      {
          .        eigen_internal_assert(row >= 0 && row < rows()
          .                          && col >= 0 && col < cols());
     61,770        return derived().coeff(row, col);


     12,354      }
          .  
          .      EIGEN_STRONG_INLINE CoeffReturnType coeffByOuterInner(Index outer, Index inner) const
          .      {
          .        return coeff(rowIndexByOuterInner(outer, inner),
          .                     colIndexByOuterInner(outer, inner));
          .      }
          .  
          .      /** \returns the coefficient at given the given row and column.
-- line 107 ----------------------------------------
-- line 126 ----------------------------------------
          .        *
          .        * If EIGEN_INTERNAL_DEBUGGING is defined, an assertion will be made, making this
          .        * function equivalent to \link operator[](Index) const \endlink.
          .        *
          .        * \sa operator[](Index) const, coeffRef(Index), coeff(Index,Index) const
          .        */
          .  
          .      EIGEN_STRONG_INLINE CoeffReturnType
      3,735      coeff(Index index) const
          .      {
          .        eigen_internal_assert(index >= 0 && index < size());
      6,723        return derived().coeff(index);


      1,494      }
          .  
          .  
          .      /** \returns the coefficient at given index.
          .        *
          .        * This method is allowed only for vector expressions, and for matrix expressions having the LinearAccessBit.
          .        *
          .        * \sa operator[](Index), operator()(Index,Index) const, x() const, y() const,
          .        * z() const, w() const
          .        */
          .  
          .      EIGEN_STRONG_INLINE CoeffReturnType
    124,545      operator[](Index index) const
          .      {
          .        #ifndef EIGEN2_SUPPORT
          .        EIGEN_STATIC_ASSERT(Derived::IsVectorAtCompileTime,
          .                            THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD)
          .        #endif
    199,272        eigen_assert(index >= 0 && index < size());

    224,181        return derived().coeff(index);


     49,818      }
          .  
          .      /** \returns the coefficient at given index.
          .        *
          .        * This is synonymous to operator[](Index) const.
          .        *
          .        * This method is allowed only for vector expressions, and for matrix expressions having the LinearAccessBit.
          .        *
          .        * \sa operator[](Index), operator()(Index,Index) const, x() const, y() const,
          .        * z() const, w() const
          .        */
          .  
          .      EIGEN_STRONG_INLINE CoeffReturnType
      3,140      operator()(Index index) const
          .      {
      5,024        eigen_assert(index >= 0 && index < size());

      5,652        return derived().coeff(index);


      1,256      }
          .  
          .      /** equivalent to operator[](0).  */
          .  
          .      EIGEN_STRONG_INLINE CoeffReturnType
          .      x() const { return (*this)[0]; }
          .  
          .      /** equivalent to operator[](1).  */
          .  
-- line 183 ----------------------------------------
-- line 266 ----------------------------------------
          .    *
          .    * This class defines the non-const \c operator() function and friends, which can be used to write specific
          .    * entries of a matrix or array. This class inherits DenseCoeffsBase<Derived, ReadOnlyAccessors> which
          .    * defines the const variant for reading specific entries.
          .    * 
          .    * \sa DenseCoeffsBase<Derived, DirectAccessors>, \ref TopicClassHierarchy
          .    */
          .  template<typename Derived>
  9,936,298  class DenseCoeffsBase<Derived, WriteAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>

      1,266  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .  {
          .    public:
          .  
          .      typedef DenseCoeffsBase<Derived, ReadOnlyAccessors> Base;
          .  
          .      typedef typename internal::traits<Derived>::StorageKind StorageKind;
          .      typedef typename internal::traits<Derived>::Index Index;
          .      typedef typename internal::traits<Derived>::Scalar Scalar;
-- line 282 ----------------------------------------
-- line 306 ----------------------------------------
          .        * repeated coefficient access. Only use this when it is guaranteed that the
          .        * parameters \a row and \a col are in range.
          .        *
          .        * If EIGEN_INTERNAL_DEBUGGING is defined, an assertion will be made, making this
          .        * function equivalent to \link operator()(Index,Index) \endlink.
          .        *
          .        * \sa operator()(Index,Index), coeff(Index, Index) const, coeffRef(Index)
          .        */
      4,482      EIGEN_STRONG_INLINE Scalar& coeffRef(Index row, Index col)
          .      {
          .        eigen_internal_assert(row >= 0 && row < rows()
          .                          && col >= 0 && col < cols());
      7,470        return derived().coeffRef(row, col);


      1,494      }
          .  
          .      EIGEN_STRONG_INLINE Scalar&
          .      coeffRefByOuterInner(Index outer, Index inner)
          .      {
          .        return coeffRef(rowIndexByOuterInner(outer, inner),
          .                        colIndexByOuterInner(outer, inner));
          .      }
          .  
          .      /** \returns a reference to the coefficient at given the given row and column.
          .        *
          .        * \sa operator[](Index)
          .        */
          .  
          .      EIGEN_STRONG_INLINE Scalar&
     23,598      operator()(Index row, Index col)
          .      {
     62,936        eigen_assert(row >= 0 && row < rows()
      2,023  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


          .            && col >= 0 && col < cols());
     39,338        return derived().coeffRef(row, col);


      2,092  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
      7,866      }
          .  
          .  
          .      /** Short version: don't use this function, use
          .        * \link operator[](Index) \endlink instead.
          .        *
          .        * Long version: this function is similar to
          .        * \link operator[](Index) \endlink, but without the assertion.
          .        * Use this for limiting the performance cost of debugging code when doing
-- line 347 ----------------------------------------
-- line 364 ----------------------------------------
          .      /** \returns a reference to the coefficient at given index.
          .        *
          .        * This method is allowed only for vector expressions, and for matrix expressions having the LinearAccessBit.
          .        *
          .        * \sa operator[](Index) const, operator()(Index,Index), x(), y(), z(), w()
          .        */
          .  
          .      EIGEN_STRONG_INLINE Scalar&
 88,440,895      operator[](Index index)
          .      {
          .        #ifndef EIGEN2_SUPPORT
          .        EIGEN_STATIC_ASSERT(Derived::IsVectorAtCompileTime,
          .                            THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD)
          .        #endif
763,455,100        eigen_assert(index >= 0 && index < size());

        986  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
858,886,990        return derived().coeffRef(index);


      2,076  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
 35,376,358      }
          .  
          .      /** \returns a reference to the coefficient at given index.
          .        *
          .        * This is synonymous to operator[](Index).
          .        *
          .        * This method is allowed only for vector expressions, and for matrix expressions having the LinearAccessBit.
          .        *
          .        * \sa operator[](Index) const, operator()(Index,Index), x(), y(), z(), w()
-- line 388 ----------------------------------------
-- line 468 ----------------------------------------
          .        *
          .        * This method is overridden in SwapWrapper, allowing swap() assignments to share 99% of their code
          .        * with usual assignments.
          .        *
          .        * Outside of this internal usage, this method has probably no usefulness. It is hidden in the public API dox.
          .        */
          .  
          .      template<typename OtherDerived>
     52,776      EIGEN_STRONG_INLINE void copyCoeff(Index row, Index col, const DenseBase<OtherDerived>& other)
          .      {
          .        eigen_internal_assert(row >= 0 && row < rows()
          .                          && col >= 0 && col < cols());
    156,846        derived().coeffRef(row, col) = other.derived().coeff(row, col);
      1,674  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     26,388      }
          .  
          .      /** \internal Copies the coefficient at the given index of other into *this.
          .        *
          .        * This method is overridden in SwapWrapper, allowing swap() assignments to share 99% of their code
          .        * with usual assignments.
          .        *
          .        * Outside of this internal usage, this method has probably no usefulness. It is hidden in the public API dox.
          .        */
          .  
          .      template<typename OtherDerived>
  4,528,349      EIGEN_STRONG_INLINE void copyCoeff(Index index, const DenseBase<OtherDerived>& other)
          .      {
          .        eigen_internal_assert(index >= 0 && index < size());
 13,592,552        derived().coeffRef(index) = other.derived().coeff(index);      1,026  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  2,587,628      }
          .  
          .  
          .      template<typename OtherDerived>
     35,721      EIGEN_STRONG_INLINE void copyCoeffByOuterInner(Index outer, Index inner, const DenseBase<OtherDerived>& other)
          .      {
     40,828        const Index row = rowIndexByOuterInner(outer,inner);
      1,234  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     40,828        const Index col = colIndexByOuterInner(outer,inner);

      1,234  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .        // derived() is important here: copyCoeff() may be reimplemented in Derived!
     51,038        derived().copyCoeff(row, col, other);
      1,802  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


     10,206      }
          .  
          .      /** \internal Copies the packet at position (row,col) of other into *this.
          .        *
          .        * This method is overridden in SwapWrapper, allowing swap() assignments to share 99% of their code
          .        * with usual assignments.
          .        *
          .        * Outside of this internal usage, this method has probably no usefulness. It is hidden in the public API dox.
          .        */
-- line 514 ----------------------------------------
-- line 526 ----------------------------------------
          .        *
          .        * This method is overridden in SwapWrapper, allowing swap() assignments to share 99% of their code
          .        * with usual assignments.
          .        *
          .        * Outside of this internal usage, this method has probably no usefulness. It is hidden in the public API dox.
          .        */
          .  
          .      template<typename OtherDerived, int StoreMode, int LoadMode>
     12,348      EIGEN_STRONG_INLINE void copyPacket(Index index, const DenseBase<OtherDerived>& other)
          .      {
          .        eigen_internal_assert(index >= 0 && index < size());
     41,180        derived().template writePacket<StoreMode>(index,


      2,868  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


          .          other.derived().template packet<LoadMode>(index));
      4,116      }
          .  
          .      /** \internal */
          .      template<typename OtherDerived, int StoreMode, int LoadMode>
          .      EIGEN_STRONG_INLINE void copyPacketByOuterInner(Index outer, Index inner, const DenseBase<OtherDerived>& other)
          .      {
          .        const Index row = rowIndexByOuterInner(outer,inner);
          .        const Index col = colIndexByOuterInner(outer,inner);
          .        // derived() is important here: copyCoeff() may be reimplemented in Derived!
-- line 547 ----------------------------------------
-- line 558 ----------------------------------------
          .    *
          .    * This class defines functions to work with strides which can be used to access entries directly. This class
          .    * inherits DenseCoeffsBase<Derived, ReadOnlyAccessors> which defines functions to access entries read-only using
          .    * \c operator() .
          .    *
          .    * \sa \ref TopicClassHierarchy
          .    */
          .  template<typename Derived>
    123,464  class DenseCoeffsBase<Derived, DirectAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>
      1,242  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .  {
          .    public:
          .  
          .      typedef DenseCoeffsBase<Derived, ReadOnlyAccessors> Base;
          .      typedef typename internal::traits<Derived>::Index Index;
          .      typedef typename internal::traits<Derived>::Scalar Scalar;
          .      typedef typename NumTraits<Scalar>::Real RealScalar;
          .  
-- line 574 ----------------------------------------
-- line 576 ----------------------------------------
          .      using Base::cols;
          .      using Base::size;
          .      using Base::derived;
          .  
          .      /** \returns the pointer increment between two consecutive elements within a slice in the inner direction.
          .        *
          .        * \sa outerStride(), rowStride(), colStride()
          .        */
     45,664      inline Index innerStride() const
          .      {
     79,928        return derived().innerStride();

      1,330  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     22,832      }
          .  
          .      /** \returns the pointer increment between two consecutive inner slices (for example, between two consecutive columns
          .        *          in a column-major matrix).
          .        *
          .        * \sa innerStride(), rowStride(), colStride()
          .        */
      8,316      inline Index outerStride() const
          .      {
     14,557        return derived().outerStride();
      1,338  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


      4,158      }
          .  
          .      // FIXME shall we remove it ?
          .      inline Index stride() const
          .      {
          .        return Derived::IsVectorAtCompileTime ? innerStride() : outerStride();
          .      }
          .  
          .      /** \returns the pointer increment between two consecutive rows.
          .        *
          .        * \sa innerStride(), outerStride(), colStride()
          .        */
      8,316      inline Index rowStride() const
          .      {
      8,320        return Derived::IsRowMajor ? outerStride() : innerStride();
      1,362  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      4,158      }
          .  
          .      /** \returns the pointer increment between two consecutive columns.
          .        *
          .        * \sa innerStride(), outerStride(), rowStride()
          .        */
      8,316      inline Index colStride() const
          .      {
      8,320        return Derived::IsRowMajor ? innerStride() : outerStride();

      1,397  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      4,158      }
          .  };
          .  
          .  /** \brief Base class providing direct read/write coefficient access to matrices and arrays.
          .    * \ingroup Core_Module
          .    * \tparam Derived Type of the derived class
          .    * \tparam #DirectWriteAccessors Constant indicating direct access
          .    *
          .    * This class defines functions to work with strides which can be used to access entries directly. This class
          .    * inherits DenseCoeffsBase<Derived, WriteAccessors> which defines functions to access entries read/write using
          .    * \c operator().
          .    *
          .    * \sa \ref TopicClassHierarchy
          .    */
          .  template<typename Derived>
  9,933,154  class DenseCoeffsBase<Derived, DirectWriteAccessors>
      1,058  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .    : public DenseCoeffsBase<Derived, WriteAccessors>
          .  {
          .    public:
          .  
          .      typedef DenseCoeffsBase<Derived, WriteAccessors> Base;
          .      typedef typename internal::traits<Derived>::Index Index;
          .      typedef typename internal::traits<Derived>::Scalar Scalar;
          .      typedef typename NumTraits<Scalar>::Real RealScalar;
-- line 644 ----------------------------------------
-- line 647 ----------------------------------------
          .      using Base::cols;
          .      using Base::size;
          .      using Base::derived;
          .  
          .      /** \returns the pointer increment between two consecutive elements within a slice in the inner direction.
          .        *
          .        * \sa outerStride(), rowStride(), colStride()
          .        */
    345,388      inline Index innerStride() const
          .      {
    604,481        return derived().innerStride();
      1,306  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


    172,694      }
          .  
          .      /** \returns the pointer increment between two consecutive inner slices (for example, between two consecutive columns
          .        *          in a column-major matrix).
          .        *
          .        * \sa innerStride(), rowStride(), colStride()
          .        */
     79,248      inline Index outerStride() const
          .      {
    138,712        return derived().outerStride();


     39,624      }
          .  
          .      // FIXME shall we remove it ?
          .      inline Index stride() const
          .      {
          .        return Derived::IsVectorAtCompileTime ? innerStride() : outerStride();
          .      }
          .  
          .      /** \returns the pointer increment between two consecutive rows.
          .        *
          .        * \sa innerStride(), outerStride(), colStride()
          .        */
     79,248      inline Index rowStride() const
          .      {
     79,272        return Derived::IsRowMajor ? outerStride() : innerStride();
      1,330  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     39,624      }
          .  
          .      /** \returns the pointer increment between two consecutive columns.
          .        *
          .        * \sa innerStride(), outerStride(), rowStride()
          .        */
     79,248      inline Index colStride() const
          .      {
     79,276        return Derived::IsRowMajor ? innerStride() : outerStride();

      1,330  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     39,624      }
          .  };
          .  
          .  namespace internal {
          .  
          .  template<typename Derived, bool JustReturnZero>
          .  struct first_aligned_impl
          .  {
      8,412    static inline typename Derived::Index run(const Derived&)
      8,412    { return 0; }
          .  };
          .  
          .  template<typename Derived>
          .  struct first_aligned_impl<Derived, false>
          .  {
          .    static inline typename Derived::Index run(const Derived& m)
          .    {
          .      return internal::first_aligned(&m.const_cast_derived().coeffRef(0,0), m.size());
-- line 709 ----------------------------------------
-- line 711 ----------------------------------------
          .  };
          .  
          .  /** \internal \returns the index of the first element of the array that is well aligned for vectorization.
          .    *
          .    * There is also the variant first_aligned(const Scalar*, Integer) defined in Memory.h. See it for more
          .    * documentation.
          .    */
          .  template<typename Derived>
     11,216  static inline typename Derived::Index first_aligned(const Derived& m)
          .  {
          .    return first_aligned_impl
          .            <Derived, (Derived::Flags & AlignedBit) || !(Derived::Flags & DirectAccessBit)>
     11,236            ::run(m);

      1,930  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      5,608  }
          .  
          .  template<typename Derived, bool HasDirectAccess = has_direct_access<Derived>::ret>
          .  struct inner_stride_at_compile_time
          .  {
          .    enum { ret = traits<Derived>::InnerStrideAtCompileTime };
          .  };
          .  
          .  template<typename Derived>
-- line 732 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 247 ----------------------------------------
         .  
         .      template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SelfAdjointView<Derived, UpLo> Type; };
         .      template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SelfAdjointView<const Derived, UpLo> Type; };
         .  
         .      template<unsigned int UpLo> typename SelfAdjointViewReturnType<UpLo>::Type selfadjointView();
         .      template<unsigned int UpLo> typename ConstSelfAdjointViewReturnType<UpLo>::Type selfadjointView() const;
         .  
         .      const SparseView<Derived> sparseView(const Scalar& m_reference = Scalar(0),
         8                                           const typename NumTraits<Scalar>::Real& m_epsilon = NumTraits<Scalar>::dummy_precision()) const;
       903  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .      static const IdentityReturnType Identity();
         .      static const IdentityReturnType Identity(Index rows, Index cols);
         .      static const BasisReturnType Unit(Index size, Index i);
         .      static const BasisReturnType Unit(Index i);
         .      static const BasisReturnType UnitX();
         .      static const BasisReturnType UnitY();
         .      static const BasisReturnType UnitZ();
         .      static const BasisReturnType UnitW();
-- line 263 ----------------------------------------
-- line 308 ----------------------------------------
         .  
         .      template<int p> RealScalar lpNorm() const;
         .  
         .      MatrixBase<Derived>& matrix() { return *this; }
         .      const MatrixBase<Derived>& matrix() const { return *this; }
         .  
         .      /** \returns an \link Eigen::ArrayBase Array \endlink expression of this matrix
         .        * \sa ArrayBase::matrix() */
        21      ArrayWrapper<Derived> array() { return derived(); }

     1,127  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .      const ArrayWrapper<const Derived> array() const { return derived(); }
         .  
         .  /////////// LU module ///////////
         .  
         .      const FullPivLU<PlainObject> fullPivLu() const;
         .      const PartialPivLU<PlainObject> partialPivLu() const;
         .  
         .      #if EIGEN2_SUPPORT_STAGE < STAGE20_RESOLVE_API_CONFLICTS
-- line 324 ----------------------------------------
-- line 493 ----------------------------------------
         .      template<int Size> VectorBlock<Derived,Size> end();
         .      template<int Size> const VectorBlock<const Derived,Size> end() const;
         .  
         .      Minor<Derived> minor(Index row, Index col);
         .      const Minor<Derived> minor(Index row, Index col) const;
         .  #endif
         .  
         .    protected:
11,593,420      MatrixBase() : Base() {}

         .  
         .    private:
         .      explicit MatrixBase(int);
         .      MatrixBase(int,int);
         .      template<typename OtherDerived> explicit MatrixBase(const MatrixBase<OtherDerived>&);
         .    protected:
         .      // mixing arrays and matrices is not legal
         .      template<typename OtherDerived> Derived& operator+=(const ArrayBase<OtherDerived>& )
-- line 509 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 24 ----------------------------------------
         .  
         .  namespace Eigen {
         .  
         .  typedef EIGEN_DEFAULT_DENSE_INDEX_TYPE DenseIndex;
         .  
         .  namespace internal {
         .  
         .  //classes inheriting no_assignment_operator don't generate a default operator=.
   860,075  class no_assignment_operator
         .  {
         .    private:
         .      no_assignment_operator& operator=(const no_assignment_operator&);
         .  };
         .  
         .  /** \internal return the index type with the largest number of bits */
         .  template<typename I1, typename I2>
         .  struct promote_index_type
-- line 40 ----------------------------------------
-- line 44 ----------------------------------------
         .  
         .  /** \internal If the template parameter Value is Dynamic, this class is just a wrapper around a T variable that
         .    * can be accessed using value() and setValue().
         .    * Otherwise, this class is an empty structure and value() just returns the template parameter Value.
         .    */
         .  template<typename T, int Value> class variable_if_dynamic
         .  {
         .    public:
    19,626      EIGEN_EMPTY_STRUCT_CTOR(variable_if_dynamic)
   533,305      explicit variable_if_dynamic(T v) { EIGEN_ONLY_USED_FOR_DEBUG(v); assert(v == T(Value)); }
 1,065,135      static T value() { return T(Value); }
         .      void setValue(T) {}
         .  };
         .  
         .  template<typename T> class variable_if_dynamic<T, Dynamic>
         .  {
         .      T m_value;
         .      variable_if_dynamic() { assert(false); }
         .    public:
-- line 62 ----------------------------------------
-- line 65 ----------------------------------------
         .      void setValue(T value) { m_value = value; }
         .  };
         .  
         .  /** \internal like variable_if_dynamic but for DynamicIndex
         .    */
         .  template<typename T, int Value> class variable_if_dynamicindex
         .  {
         .    public:
         6      EIGEN_EMPTY_STRUCT_CTOR(variable_if_dynamicindex)
         5      explicit variable_if_dynamicindex(T v) { EIGEN_ONLY_USED_FOR_DEBUG(v); assert(v == T(Value)); }
   700,820      static T value() { return T(Value); }
         .      void setValue(T) {}
         .  };
         .  
         .  template<typename T> class variable_if_dynamicindex<T, DynamicIndex>
         .  {
         .      T m_value;
         .      variable_if_dynamicindex() { assert(false); }
         .    public:
-- line 83 ----------------------------------------
-- line 336 ----------------------------------------
         .          int(CostEvalAsInteger) < int(CostNoEvalAsInteger)
         .        ),
         .        PlainObject,
         .        typename ref_selector<T>::type
         .    >::type type;
         .  };
         .  
         .  template<typename T>
   219,192  inline T* const_cast_ptr(const T* ptr)
         .  {
    73,064    return const_cast<T*>(ptr);
   146,128  }
         .  
         .  template<typename Derived, typename XprKind = typename traits<Derived>::XprKind>
         .  struct dense_xpr_base
         .  {
         .    /* dense_xpr_base should only ever be used on dense expressions, thus falling either into the MatrixXpr or into the ArrayXpr cases */
         .  };
         .  
         .  template<typename Derived>
-- line 355 ----------------------------------------
-- line 363 ----------------------------------------
         .  {
         .    typedef ArrayBase<Derived> type;
         .  };
         .  
         .  /** \internal Helper base class to add a scalar multiple operator
         .    * overloads for complex types */
         .  template<typename Derived, typename Scalar, typename OtherScalar, typename BaseType,
         .           bool EnableIt = !is_same<Scalar,OtherScalar>::value >
11,593,704  struct special_scalar_op_base : public BaseType

         .  {
         .    // dummy operator* so that the
         .    // "using special_scalar_op_base::operator*" compiles
         .    void operator*() const;
         .  };
         .  
         .  template<typename Derived,typename Scalar,typename OtherScalar, typename BaseType>
         .  struct special_scalar_op_base<Derived,Scalar,OtherScalar,BaseType,true>  : public BaseType
-- line 379 ------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------
     Ir 

-- line 7 ----------------------------------------
      .  // Public License v. 2.0. If a copy of the MPL was not distributed
      .  // with this file, You can obtain one at http://mozilla.org/MPL/2.0/.
      .  
      .  #ifndef EIGEN_SPARSETRANSPOSE_H
      .  #define EIGEN_SPARSETRANSPOSE_H
      .  
      .  namespace Eigen { 
      .  
     14  template<typename MatrixType> class TransposeImpl<MatrixType,Sparse>

  1,113  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      .    : public SparseMatrixBase<Transpose<MatrixType> >
      .  {
      .      typedef typename internal::remove_all<typename MatrixType::Nested>::type _MatrixTypeNested;
      .    public:
      .  
      .      EIGEN_SPARSE_PUBLIC_INTERFACE(Transpose<MatrixType> )
      .  
      .      class InnerIterator;
-- line 23 ----------------------------------------
-- line 32 ----------------------------------------
      .  // An alternative is to define the nested class in the parent class itself.
      .  template<typename MatrixType> class TransposeImpl<MatrixType,Sparse>::InnerIterator
      .    : public _MatrixTypeNested::InnerIterator
      .  {
      .      typedef typename _MatrixTypeNested::InnerIterator Base;
      .      typedef typename TransposeImpl::Index Index;
      .    public:
      .  
280,320      EIGEN_STRONG_INLINE InnerIterator(const TransposeImpl& trans, typename TransposeImpl<MatrixType,Sparse>::Index outer)
654,088        : Base(trans.derived().nestedExpression(), outer)


  2,002  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

 93,440      {}
      .      typename TransposeImpl<MatrixType,Sparse>::Index row() const { return Base::col(); }
      .      typename TransposeImpl<MatrixType,Sparse>::Index col() const { return Base::row(); }
      .  };
      .  
      .  template<typename MatrixType> class TransposeImpl<MatrixType,Sparse>::ReverseInnerIterator
      .    : public _MatrixTypeNested::ReverseInnerIterator
      .  {
      .      typedef typename _MatrixTypeNested::ReverseInnerIterator Base;
-- line 50 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 198 ----------------------------------------
        .  inline bool is_malloc_allowed() { return is_malloc_allowed_impl(false); }
        .  inline bool set_is_malloc_allowed(bool new_value) { return is_malloc_allowed_impl(true, new_value); }
        .  inline void check_that_malloc_is_allowed()
        .  {
        .    eigen_assert(is_malloc_allowed() && "heap allocation is forbidden (EIGEN_RUNTIME_NO_MALLOC is defined and g_is_malloc_allowed is false)");
        .  }
        .  #else 
        .  inline void check_that_malloc_is_allowed()
   18,440  {}
        .  #endif
        .  
        .  /** \internal Allocates \a size bytes. The returned pointer is guaranteed to have 16 bytes alignment.
        .    * On allocation error, the returned pointer is null, and std::bad_alloc is thrown.
        .    */
        .  inline void* aligned_malloc(size_t size)
   18,440  {
    4,610    check_that_malloc_is_allowed();

        .  
        .    void *result;
        .    #if !EIGEN_ALIGN
        .      result = std::malloc(size);
        .    #elif EIGEN_MALLOC_ALREADY_ALIGNED
   23,054      result = std::malloc(size);
  542,204  => /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:malloc (4610x)
    2,425  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .    #elif EIGEN_HAS_POSIX_MEMALIGN
        .      if(posix_memalign(&result, 16, size)) result = 0;
        .    #elif EIGEN_HAS_MM_MALLOC
        .      result = _mm_malloc(size, 16);
        .    #elif defined(_MSC_VER) && (!defined(_WIN32_WCE))
        .      result = _aligned_malloc(size, 16);
        .    #else
        .      result = handmade_aligned_malloc(size);
        .    #endif
        .  
    9,220    if(!result && size)
        .      throw_std_bad_alloc();
        .  
    4,610    return result;
    9,220  }
        .  
        .  /** \internal Frees memory allocated with aligned_malloc. */
        .  inline void aligned_free(void *ptr)
   68,768  {
        .    #if !EIGEN_ALIGN
        .      std::free(ptr);
        .    #elif EIGEN_MALLOC_ALREADY_ALIGNED
   68,772      std::free(ptr);
  504,412  => /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:free (17192x)
    2,344  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .    #elif EIGEN_HAS_POSIX_MEMALIGN
        .      std::free(ptr);
        .    #elif EIGEN_HAS_MM_MALLOC
        .      _mm_free(ptr);
        .    #elif defined(_MSC_VER) && (!defined(_WIN32_WCE))
        .      _aligned_free(ptr);
        .    #else
        .      handmade_aligned_free(ptr);
        .    #endif
   34,384  }
        .  
        .  /**
        .  * \internal
        .  * \brief Reallocates an aligned block of memory.
        .  * \throws std::bad_alloc on allocation failure
        .  **/
        .  inline void* aligned_realloc(void *ptr, size_t new_size, size_t old_size)
        .  {
-- line 261 ----------------------------------------
-- line 291 ----------------------------------------
        .  
        .  /*****************************************************************************
        .  *** Implementation of conditionally aligned functions                      ***
        .  *****************************************************************************/
        .  
        .  /** \internal Allocates \a size bytes. If Align is true, then the returned ptr is 16-byte-aligned.
        .    * On allocation error, the returned pointer is null, and a std::bad_alloc is thrown.
        .    */
   18,096  template<bool Align> inline void* conditional_aligned_malloc(size_t size)
        .  {
   13,572    return aligned_malloc(size);

    9,048  }
        .  
        .  template<> inline void* conditional_aligned_malloc<false>(size_t size)
        .  {
        .    check_that_malloc_is_allowed();
        .  
        .    void *result = std::malloc(size);
        .    if(!result && size)
        .      throw_std_bad_alloc();
        .    return result;
        .  }
        .  
        .  /** \internal Frees memory allocated with conditional_aligned_malloc */
   68,420  template<bool Align> inline void conditional_aligned_free(void *ptr)
        .  {
   51,315    aligned_free(ptr);

   34,210  }
        .  
        .  template<> inline void conditional_aligned_free<false>(void *ptr)
        .  {
        .    std::free(ptr);
        .  }
        .  
        .  template<bool Align> inline void* conditional_aligned_realloc(void* ptr, size_t new_size, size_t old_size)
        .  {
-- line 326 ----------------------------------------
-- line 357 ----------------------------------------
        .  
        .  /*****************************************************************************
        .  *** Implementation of aligned new/delete-like functions                    ***
        .  *****************************************************************************/
        .  
        .  template<typename T>
        .  EIGEN_ALWAYS_INLINE void check_size_for_overflow(size_t size)
        .  {
      258    if(size > size_t(-1) / sizeof(T))
        .      throw_std_bad_alloc();
        .  }
        .  
        .  /** \internal Allocates \a size objects of type T. The returned pointer is guaranteed to have 16 bytes alignment.
        .    * On allocation error, the returned pointer is undefined, but a std::bad_alloc is thrown.
        .    * The default constructor of T is called.
        .    */
        .  template<typename T> inline T* aligned_new(size_t size)
-- line 373 ----------------------------------------
-- line 459 ----------------------------------------
        .    * \note If the scalar type is vectorizable, we rely on the following assumptions: sizeof(Scalar) is a
        .    * power of 2, the packet size in bytes is also a power of 2, and is a multiple of sizeof(Scalar). On the
        .    * other hand, we do not assume that the array address is a multiple of sizeof(Scalar), as that fails for
        .    * example with Scalar=double on certain 32-bit platforms, see bug #79.
        .    *
        .    * There is also the variant first_aligned(const MatrixBase&) defined in DenseCoeffsBase.h.
        .    */
        .  template<typename Scalar, typename Index>
  165,315  static inline Index first_aligned(const Scalar* array, Index size)
        .  {
        .    static const Index PacketSize = packet_traits<Scalar>::size;
        .    static const Index PacketAlignedMask = PacketSize-1;
        .  
        .    if(PacketSize==1)
        .    {
        .      // Either there is no vectorization, or a packet consists of exactly 1 scalar so that all elements
        .      // of the array have the same alignment.
        .      return 0;
        .    }
  165,315    else if(size_t(array) & (sizeof(Scalar)-1))
        .    {
        .      // There is vectorization for this scalar type, but the array is not aligned to the size of a single scalar.
        .      // Consequently, no element of the array is well aligned.
        .      return size;
        .    }
        .    else
        .    {
        .      return std::min<Index>( (PacketSize - (Index((size_t(array)/sizeof(Scalar))) & PacketAlignedMask))
  396,764                             & PacketAlignedMask, size);
      804  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .    }
   66,126  }
        .  
        .  /** \internal Returns the smallest integer multiple of \a base and greater or equal to \a size
        .    */ 
        .  template<typename Index> 
        .  inline static Index first_multiple(Index size, Index base)
        .  {
        .    return ((size+base-1)/base)*base;
        .  }
        .  
        .  // std::copy is much slower than memcpy, so let's introduce a smart_copy which
        .  // use memcpy on trivial types, i.e., on types that does not require an initialization ctor.
        .  template<typename T, bool UseMemcpy> struct smart_copy_helper;
        .  
      312  template<typename T> void smart_copy(const T* start, const T* end, T* target)
        .  {
      372    smart_copy_helper<T,!NumTraits<T>::RequireInitialization>::run(start, end, target);
      969  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      104  }
        .  
        .  template<typename T> struct smart_copy_helper<T,true> {
      312    static inline void run(const T* start, const T* end, T* target)
      680    { memcpy(target, start, std::ptrdiff_t(end)-std::ptrdiff_t(start)); }
    2,431  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  248,139  => /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/memcpy-sse2-unaligned.S:__memcpy_sse2_unaligned (26x)
        .  };
        .  
        .  template<typename T> struct smart_copy_helper<T,false> {
        .    static inline void run(const T* start, const T* end, T* target)
        .    { std::copy(start, end, target); }
        .  };
        .  
        .  
-- line 518 ----------------------------------------
-- line 694 ----------------------------------------
        .          return &value;
        .      }
        .  
        .      const_pointer address( const_reference value ) const
        .      {
        .          return &value;
        .      }
        .  
       48      aligned_allocator()
        .      {
       32      }
        .  
        .      aligned_allocator( const aligned_allocator& )
        .      {
        .      }
        .  
        .      template<class U>
        .      aligned_allocator( const aligned_allocator<U>& )
        .      {
        .      }
        .  
       48      ~aligned_allocator()
        .      {
       32      }
        .  
      688      size_type max_size() const
        .      {
      240          return (std::numeric_limits<size_type>::max)();

      344      }
        .  
      516      pointer allocate( size_type num, const void* hint = 0 )
        .      {
      466          EIGEN_UNUSED_VARIABLE(hint);

        .          internal::check_size_for_overflow<T>(num);
      380          return static_cast<pointer>( internal::aligned_malloc( num * sizeof(T) ) );

      172      }
        .  
1,021,164      void construct( pointer p, const T& value )
        .      {
2,414,323          ::new( p ) T( value );

  340,388      }
        .  
  700,244      void destroy( pointer p )
        .      {
        .          p->~T();
  350,122      }
        .  
      522      void deallocate( pointer p, size_type /*num*/ )
        .      {
      298          internal::aligned_free( p );

      174      }
        .  
        .      bool operator!=(const aligned_allocator<T>& ) const
        .      { return false; }
        .  
        .      bool operator==(const aligned_allocator<T>& ) const
        .      { return true; }
        .  };
        .  
-- line 752 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 102 ----------------------------------------
         .    __attribute__((__externally_visible__));
         .  void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
         .    __attribute__((__externally_visible__));
         .  void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
         .    __attribute__((__externally_visible__));
         .  
         .  // Default placement versions of operator new.
         .  inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
16,490,642  { return __p; }
         .  inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
         .  { return __p; }
         .  
         .  // Default placement versions of operator delete.
         .  inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
         .  inline void operator delete[](void*, void*) _GLIBCXX_USE_NOEXCEPT { }
         .  //@}
         .  } // extern "C++"
-- line 118 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 49 ----------------------------------------
        .      InnerStrideAtCompileTime = inner_stride_at_compile_time<MatrixType>::ret,
        .      OuterStrideAtCompileTime = outer_stride_at_compile_time<MatrixType>::ret
        .    };
        .  };
        .  }
        .  
        .  template<typename MatrixType, typename StorageKind> class TransposeImpl;
        .  
  116,532  template<typename MatrixType> class Transpose

        .    : public TransposeImpl<MatrixType,typename internal::traits<MatrixType>::StorageKind>
        .  {
        .    public:
        .  
        .      typedef typename TransposeImpl<MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;
        .      EIGEN_GENERIC_PUBLIC_INTERFACE(Transpose)
        .  
  234,098      inline Transpose(MatrixType& a_matrix) : m_matrix(a_matrix) {}


    2,492  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        .  
        .      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Transpose)
        .  
  165,108      inline Index rows() const { return m_matrix.cols(); }

  170,628      inline Index cols() const { return m_matrix.rows(); }

        .  
        .      /** \returns the nested expression */
        .      const typename internal::remove_all<typename MatrixType::Nested>::type&
  150,960      nestedExpression() const { return m_matrix; }
        .  
        .      /** \returns the nested expression */
        .      typename internal::remove_all<typename MatrixType::Nested>::type&
   29,884      nestedExpression() { return m_matrix.const_cast_derived(); }
    1,378  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  
        .    protected:
        .      typename MatrixType::Nested m_matrix;
        .  };
        .  
        .  namespace internal {
        .  
        .  template<typename MatrixType, bool HasDirectAccess = has_direct_access<MatrixType>::ret>
-- line 86 ----------------------------------------
-- line 92 ----------------------------------------
        .  template<typename MatrixType>
        .  struct TransposeImpl_base<MatrixType, false>
        .  {
        .    typedef typename dense_xpr_base<Transpose<MatrixType> >::type type;
        .  };
        .  
        .  } // end namespace internal
        .  
  110,888  template<typename MatrixType> class TransposeImpl<MatrixType,Dense>

    1,490  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .    : public internal::TransposeImpl_base<MatrixType>::type
        .  {
        .    public:
        .  
        .      typedef typename internal::TransposeImpl_base<MatrixType>::type Base;
        .      EIGEN_DENSE_PUBLIC_INTERFACE(Transpose<MatrixType>)
        .      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(TransposeImpl)
        .  
   23,904      inline Index innerStride() const { return derived().nestedExpression().innerStride(); }   52,852      inline Index outerStride() const { return derived().nestedExpression().outerStride(); }

    1,346  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


        .  
        .      typedef typename internal::conditional<
        .                         internal::is_lvalue<MatrixType>::value,
        .                         Scalar,
        .                         const Scalar
        .                       >::type ScalarWithConstIfNotLvalue;
        .  
   23,908      inline ScalarWithConstIfNotLvalue* data() { return derived().nestedExpression().data(); }

    1,266  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


  172,376      inline const Scalar* data() const { return derived().nestedExpression().data(); }

    1,226  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


        .  
    8,964      inline ScalarWithConstIfNotLvalue& coeffRef(Index rowId, Index colId)
        .      {
        .        EIGEN_STATIC_ASSERT_LVALUE(MatrixType)
   23,912        return derived().nestedExpression().const_cast_derived().coeffRef(colId, rowId);
    2,668  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
    2,988      }
        .  
        .      inline ScalarWithConstIfNotLvalue& coeffRef(Index index)
        .      {
        .        EIGEN_STATIC_ASSERT_LVALUE(MatrixType)
        .        return derived().nestedExpression().const_cast_derived().coeffRef(index);
        .      }
        .  
        .      inline const Scalar& coeffRef(Index rowId, Index colId) const
-- line 133 ----------------------------------------
-- line 203 ----------------------------------------
        .  
        .  /** This is the const version of transpose().
        .    *
        .    * Make sure you read the warning for transpose() !
        .    *
        .    * \sa transposeInPlace(), adjoint() */
        .  template<typename Derived>
        .  inline typename DenseBase<Derived>::ConstTransposeReturnType
   23,980  DenseBase<Derived>::transpose() const
        .  {
   47,992    return ConstTransposeReturnType(derived());
    2,460  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


   14,388  }
        .  
        .  /** \returns an expression of the adjoint (i.e. conjugate transpose) of *this.
        .    *
        .    * Example: \include MatrixBase_adjoint.cpp
        .    * Output: \verbinclude MatrixBase_adjoint.out
        .    *
        .    * \warning If you want to replace a matrix by its own adjoint, do \b NOT do this:
        .    * \code
-- line 222 ----------------------------------------
-- line 229 ----------------------------------------
        .    * which gives Eigen good opportunities for optimization, or alternatively you can also do:
        .    * \code
        .    * m = m.adjoint().eval();
        .    * \endcode
        .    *
        .    * \sa adjointInPlace(), transpose(), conjugate(), class Transpose, class internal::scalar_conjugate_op */
        .  template<typename Derived>
        .  inline const typename MatrixBase<Derived>::AdjointReturnType
    9,040  MatrixBase<Derived>::adjoint() const
        .  {
   10,860    return this->transpose(); // in the complex case, the .conjugate() is be implicit here

    1,250  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .                              // due to implicit conversion to return type
    5,424  }
        .  
        .  /***************************************************************************
        .  * "in place" transpose implementation
        .  ***************************************************************************/
        .  
        .  namespace internal {
        .  
        .  template<typename MatrixType,
-- line 249 ----------------------------------------
-- line 394 ----------------------------------------
        .               "or evaluate the rhs into a temporary using .eval()");
        .  
        .      }
        .  };
        .  
        .  template<typename Derived, typename OtherDerived>
        .  struct checkTransposeAliasing_impl<Derived, OtherDerived, false>
        .  {
  903,716      static void run(const Derived&, const OtherDerived&)
        .      {
  451,858      }
        .  };
        .  
        .  } // end namespace internal
        .  
        .  template<typename Derived>
        .  template<typename OtherDerived>
1,129,645  void DenseBase<Derived>::checkTransposeAliasing(const OtherDerived& other) const
        .  {
2,033,441      internal::checkTransposeAliasing_impl<Derived, OtherDerived>::run(derived(), other);


    1,730  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  451,858  }
        .  #endif
        .  
        .  } // end namespace Eigen
        .  
        .  #endif // EIGEN_TRANSPOSE_H

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 145 ----------------------------------------
        .    * \sa SparseMatrix::setFromTriplets()
        .    */
        .  template<typename Scalar, typename Index=typename SparseMatrix<Scalar>::Index >
        .  class Triplet
        .  {
        .  public:
        .    Triplet() : m_row(0), m_col(0), m_value(0) {}
        .  
1,197,372    Triplet(const Index& i, const Index& j, const Scalar& v = Scalar(0))
2,394,744      : m_row(i), m_col(j), m_value(v)
  399,124    {}
        .  
        .    /** \returns the row index of the element */
4,789,488    const Index& row() const { return m_row; }
        .  
        .    /** \returns the column index of the element */
4,190,802    const Index& col() const { return m_col; }
        .  
        .    /** \returns the value of the element */
1,396,934    const Scalar& value() const { return m_value; }
        .  protected:
        .    Index m_row, m_col;
        .    Scalar m_value;
        .  };
        .  
        .  } // end namespace Eigen
        .  
        .  #endif // EIGEN_SPARSEUTIL_H
-- line 172 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/davidwatkins/post_processing/mesh_reconstruction/voxelize/voxelize.cpp
--------------------------------------------------------------------------------
     Ir 

      .  
      .  #include "voxelize.h"
      .  
      .  using namespace std;
      .  
      6  float getResolution(pcl::PointCloud<pcl::InterestPoint>::Ptr cloud){
      .      //create new cloud missing every ten points
     12      pcl::PointCloud<pcl::InterestPoint>::Ptr new_cloud (new pcl::PointCloud<pcl::InterestPoint>());338,735      for(int i=0; i<cloud->points.size(); i++){


  1,170  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
361,296          if((i%10)>0){
406,448              new_cloud->push_back(cloud->points[i]);
  2,310  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)      .          }
      .      }
      .  
      .      //create kd tree
     17      pcl::KdTreeFLANN<pcl::InterestPoint> kdtree;

  3,059  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
    619  => ???:pcl::KdTreeFLANN<pcl::InterestPoint, flann::L2_Simple<float> >::KdTreeFLANN(bool) (1x)
     42      kdtree.setInputCloud(new_cloud);


18,860,746  => ???:pcl::KdTreeFLANN<pcl::InterestPoint, flann::L2_Simple<float> >::setInputCloud(boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> const> const&, boost::shared_ptr<std::vector<int, std::allocator<int> > const> const&) (1x)


  6,982  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)
      .  
      2      float distTotal = 0.0;
      1      int count = 0;
 33,901      for(int i=0; i<cloud->points.size(); i+=10){


      .          //perform nearest neighbor search
 36,156          vector<int> pointIdxNKNSearch(1);
  2,220  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x) 47,455          vector<float> pointNKNSquaredDistance(1);


  3,347  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)


 47,443          kdtree.nearestKSearch(cloud->points[i], 1, pointIdxNKNSearch, pointNKNSquaredDistance);
13,104,766  => ???:pcl::KdTreeFLANN<pcl::InterestPoint, flann::L2_Simple<float> >::nearestKSearch(pcl::InterestPoint const&, int, std::vector<int, std::allocator<int> >&, std::vector<float, std::allocator<float> >&) const (2259x)
  2,636  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


      .          //get distance
 33,893          distTotal += (float) sqrt((double)pointNKNSquaredDistance[0]);

 11,295  => /build/eglibc-oGUzwX/eglibc-2.19/math/w_sqrt.c:sqrt (2259x)
  3,353  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
  2,259          count++;
  9,040      }
    747  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      .  
     20      return 2.0*distTotal/(float)count;

  1,384  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      7  }
      .  
     10  VoxelGridPtr voxelize(pcl::PointCloud<pcl::InterestPoint>::Ptr input, pcl::PointCloud<pcl::InterestPoint>::Ptr output, float resolution){
      .  
     22      cout << "PointCloud before filtering: " << input->points.size()
    429  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)


  3,745  => ???:std::ostream::operator<<(unsigned long) (1x)
  2,207  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      9             << " data points"<<endl;
    313  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
    341  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
      .  
      .      //create voxelized data
     24      VoxelGridPtr sor (new pcl::VoxelGrid<pcl::InterestPoint>());
  3,072  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)      .  
     27      sor->setInputCloud(input);
     12  => ???:pcl::PCLBase<pcl::InterestPoint>::setInputCloud(boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> const> const&) (1x)

  1,127  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


     21      sor->setLeafSize (resolution, resolution, resolution);


  1,047  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     12      sor->setSaveLeafLayout(true);


  1,087  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     12      sor->setDownsampleAllData(true);

  1,095  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     21      sor->filter(*output);
  2,305  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)      .  
     27      cout << "PointCloud after filtering: " << output->points.size()<<" data points"<<endl;

    733  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (2x)

    341  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
    397  => ???:std::ostream::operator<<(unsigned long) (1x)
      .  
      1      return sor;
      7  }
      .  
      .  //primes octree with cloud data for neighbor searches
      8  pcl::octree::OctreePointCloudSearch<pcl::InterestPoint>::Ptr primeOctree(pcl::PointCloud<pcl::InterestPoint>::Ptr cloud, float resolution){
     22      pcl::octree::OctreePointCloudSearch<pcl::InterestPoint>::Ptr octree (new pcl::octree::OctreePointCloudSearch<pcl::InterestPoint>(resolution));
  3,457  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
    459  => ???:operator new(unsigned long) (1x)


     37      octree->setInputCloud (cloud);
  4,206  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


     11      octree->addPointsFromInputCloud ();
28,929,081  => ???:pcl::octree::OctreePointCloud<pcl::InterestPoint, pcl::octree::OctreeContainerPointIndices, pcl::octree::OctreeContainerEmpty, pcl::octree::OctreeBase<pcl::octree::OctreeContainerPointIndices, pcl::octree::OctreeContainerEmpty> >::addPointsFromInputCloud() (1x)

  4,020  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      1      return octree;
      6  }
      .  
      .  //returns list of indexes for points in the input cloud i.e. cloud->points[index]
 29,202  vector<int> voxelNeighbors(pcl::octree::OctreePointCloudSearch<pcl::InterestPoint>::Ptr octree, pcl::InterestPoint searchPoint){
 19,468      vector<int> pointIdxVec;

 43,807      octree->voxelSearch(searchPoint, pointIdxVec);
  3,831  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

2,461,605  => ???:pcl::octree::OctreePointCloudSearch<pcl::InterestPoint, pcl::octree::OctreeContainerPointIndices, pcl::octree::OctreeContainerEmpty>::voxelSearch(pcl::InterestPoint const&, std::vector<int, std::allocator<int> >&) (4867x)
  4,867      return pointIdxVec;
      .  
 24,335  }
      .  
      .  //go through voxelized data and modify strength of centroid to be average of voxel neighbors
      .  //input:: voxel grid, filtered point cloud, original cloud, primed octree
      .  void modifyStrengths(pcl::PointCloud<pcl::InterestPoint>::Ptr filtered_cloud,
      7                       pcl::PointCloud<pcl::InterestPoint>::Ptr cloud, pcl::octree::OctreePointCloudSearch<pcl::InterestPoint>::Ptr octree){
 73,022      for(int i=0; i<filtered_cloud->points.size(); i++){


      .          //get neighbors in voxel
175,216          vector<int> pointIdxVec = voxelNeighbors(octree, filtered_cloud->points[i]);

  1,904  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)2,893,736  => /home/davidwatkins/post_processing/mesh_reconstruction/voxelize/voxelize.cpp:voxelNeighbors(boost::shared_ptr<pcl::octree::OctreePointCloudSearch<pcl::InterestPoint, pcl::octree::OctreeContainerPointIndices, pcl::octree::OctreeContainerEmpty> >, pcl::InterestPoint) (4867x)
      .          //take average of strengths
  9,734          float avg=0.0;
341,372          for(int ind=0; ind<pointIdxVec.size(); ind++){

    893  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
565,932              avg+=cloud->points[pointIdxVec[ind]].strength;
    833  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)      .          }
 58,404          avg=avg/(float)pointIdxVec.size();

      .          //replace centroid strength with average
 68,138          filtered_cloud->points[i].strength=avg;


 19,468      }//end of loop through voxel grid

      4  }
      .  
      7  voxelized_dataPtr voxelizeData(pcl::PointCloud<pcl::InterestPoint>::Ptr cloud){
      .      //create dummy object
     24      pcl::PointCloud<pcl::InterestPoint>::Ptr dummy (new pcl::PointCloud<pcl::InterestPoint>());


  3,117  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)

      .  
     25      float resolution = getResolution(cloud);

  2,692  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

44,392,403  => /home/davidwatkins/post_processing/mesh_reconstruction/voxelize/voxelize.cpp:getResolution(boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >) (1x)
     29      cout<<"Leaf size is "<<resolution<<endl;
  2,773  => ???:std::ostream::operator<<(float) (1x)
  7,354  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
    341  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
    322  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
     35      voxelized_dataPtr data (new voxelized_data());
  4,183  => /home/davidwatkins/post_processing/mesh_reconstruction/voxelize/voxelize.h:voxelized_data::voxelized_data() (1x)

    575  => ???:operator new(unsigned long) (1x)
  1,849  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
     11      data->resolution=resolution;
  1,047  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     14      data->input_cloud=cloud;
  1,167  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


     10      data->filtered_cloud = dummy;


     64      data->grid_data = voxelize(data->input_cloud, data->filtered_cloud, data->resolution);


7,000,445  => /home/davidwatkins/post_processing/mesh_reconstruction/voxelize/voxelize.cpp:voxelize(boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >, boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >, float) (1x)

  2,367  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


     49      data->octree = primeOctree(data->input_cloud, data->resolution);

  3,055  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)28,962,122  => /home/davidwatkins/post_processing/mesh_reconstruction/voxelize/voxelize.cpp:primeOctree(boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >, float) (1x)

     53      modifyStrengths(data->filtered_cloud, data->input_cloud, data->octree);

7,529,566  => /home/davidwatkins/post_processing/mesh_reconstruction/voxelize/voxelize.cpp:modifyStrengths(boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >, boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >, boost::shared_ptr<pcl::octree::OctreePointCloudSearch<pcl::InterestPoint, pcl::octree::OctreeContainerPointIndices, pcl::octree::OctreeContainerEmpty> >) (1x)

  2,160  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)      6      return data;

      6  }
      .  
      .  void visualizeData(voxelized_dataPtr data){
      .      //create rgb point cloud for visualization
      .      pcl::PointCloud<pcl::PointXYZRGB>::Ptr confPclRGB (new pcl::PointCloud<pcl::PointXYZRGB>());
      .      for(int i=0; i<data->input_cloud->points.size(); i++){
      .          pcl::PointXYZRGB pnt;
      .          pnt.x=data->input_cloud->points[i].x;pnt.y=data->input_cloud->points[i].y;pnt.z=data->input_cloud->points[i].z;
      .          pnt.r=0; pnt.b=0;
-- line 109 ----------------------------------------
-- line 142 ----------------------------------------
      .      viewer->addCoordinateSystem (1.0);
      .      viewer->initCameraParameters ();
      .      while (!viewer->wasStopped ())
      .      {
      .          viewer->spinOnce (100);
      .          boost::this_thread::sleep (boost::posix_time::microseconds (100000));
      .      }
      .  
     18  }
 14,301  => /home/davidwatkins/post_processing/mesh_reconstruction/voxelize/voxelize.cpp:__static_initialization_and_destruction_0(int, int) (1x)
      .  

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 92 ----------------------------------------
         .  	}
         .      };
         .  
         .    template<>
         .      struct __iter_swap<true>
         .      {
         .        template<typename _ForwardIterator1, typename _ForwardIterator2>
         .          static void 
       750          iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
         .          {
     1,629            swap(*__a, *__b);
       758  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


       500          }
         .      };
         .  #endif
         .  
         .    /**
         .     *  @brief Swaps the contents of two iterators.
         .     *  @ingroup mutating_algorithms
         .     *  @param  __a  An iterator.
         .     *  @param  __b  Another iterator.
         .     *  @return   Nothing.
         .     *
         .     *  This function swaps the values pointed to by two iterators, not the
         .     *  iterators themselves.
         .    */
         .    template<typename _ForwardIterator1, typename _ForwardIterator2>
         .      inline void
       625      iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
         .      {
         .        // concept requirements
         .        __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
         .  				  _ForwardIterator1>)
         .        __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
         .  				  _ForwardIterator2>)
         .  
         .  #if __cplusplus < 201103L
-- line 127 ----------------------------------------
-- line 134 ----------------------------------------
         .  				  _ValueType2>)
         .        __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
         .  				  _ValueType1>)
         .  
         .        typedef typename iterator_traits<_ForwardIterator1>::reference
         .  	_ReferenceType1;
         .        typedef typename iterator_traits<_ForwardIterator2>::reference
         .  	_ReferenceType2;
       754        std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
     1,305  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .  	&& __are_same<_ValueType1&, _ReferenceType1>::__value
         .  	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
         .  	iter_swap(__a, __b);
         .  #else
         .        swap(*__a, *__b);
         .  #endif
       250      }
         .  
         .    /**
         .     *  @brief Swap the elements of two sequences.
         .     *  @ingroup mutating_algorithms
         .     *  @param  __first1  A forward iterator.
         .     *  @param  __last1   A forward iterator.
         .     *  @param  __first2  A forward iterator.
         .     *  @return   An iterator equal to @p first2+(last1-first1).
-- line 157 ----------------------------------------
-- line 185 ----------------------------------------
         .     *  @return   The lesser of the parameters.
         .     *
         .     *  This is the simple classic generic implementation.  It will work on
         .     *  temporary expressions, since they are only evaluated once, unlike a
         .     *  preprocessor macro.
         .    */
         .    template<typename _Tp>
         .      inline const _Tp&
   291,036      min(const _Tp& __a, const _Tp& __b)
         .      {
         .        // concept requirements
         .        __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
         .        //return __b < __a ? __b : __a;
   436,554        if (__b < __a)
    23,408  	return __b;
    61,055        return __a;
   145,518      }
         .  
         .    /**
         .     *  @brief This does what you think it does.
         .     *  @ingroup sorting_algorithms
         .     *  @param  __a  A thing of arbitrary type.
         .     *  @param  __b  Another thing of arbitrary type.
         .     *  @return   The greater of the parameters.
         .     *
         .     *  This is the simple classic generic implementation.  It will work on
         .     *  temporary expressions, since they are only evaluated once, unlike a
         .     *  preprocessor macro.
         .    */
         .    template<typename _Tp>
         .      inline const _Tp&
 2,821,652      max(const _Tp& __a, const _Tp& __b)
         .      {
         .        // concept requirements
         .        __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
         .        //return  __a < __b ? __b : __a;
 4,232,478        if (__a < __b)
   415,150  	return __b;
   497,838        return __a;
 1,410,826      }
         .  
         .    /**
         .     *  @brief This does what you think it does.
         .     *  @ingroup sorting_algorithms
         .     *  @param  __a  A thing of arbitrary type.
         .     *  @param  __b  Another thing of arbitrary type.
         .     *  @param  __comp  A @link comparison_functors comparison functor@endlink.
         .     *  @return   The lesser of the parameters.
-- line 232 ----------------------------------------
-- line 269 ----------------------------------------
         .    // normally) otherwise return it untouched.  See copy, fill, ... 
         .    template<typename _Iterator>
         .      struct _Niter_base
         .      : _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>
         .      { };
         .  
         .    template<typename _Iterator>
         .      inline typename _Niter_base<_Iterator>::iterator_type
12,758,840      __niter_base(_Iterator __it)
19,138,259      { return std::_Niter_base<_Iterator>::_S_base(__it); }

         .  
         .    // Likewise, for move_iterator.
         .    template<typename _Iterator>
         .      struct _Miter_base
         .      : _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>
         .      { };
         .  
         .    template<typename _Iterator>
         .      inline typename _Miter_base<_Iterator>::iterator_type
 8,486,176      __miter_base(_Iterator __it)
12,729,258      { return std::_Miter_base<_Iterator>::_S_base(__it); }

         .  
         .    // All of these auxiliary structs serve two purposes.  (1) Replace
         .    // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
         .    // because the input and output ranges are permitted to overlap.)
         .    // (2) If we're using random access iterators, then write the loop as
         .    // a for loop with an explicit count.
         .  
         .    template<bool, bool, typename>
-- line 297 ----------------------------------------
-- line 360 ----------------------------------------
         .      };
         .  #endif
         .  
         .    template<bool _IsMove>
         .      struct __copy_move<_IsMove, true, random_access_iterator_tag>
         .      {
         .        template<typename _Tp>
         .          static _Tp*
 6,364,626          __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
         .          {
 6,364,647  	  const ptrdiff_t _Num = __last - __first;
 2,121,542  	  if (_Num)
 3,192,376  	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
     2,405  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        49  => /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:__memmove_ssse3_back (3x)
 4,243,112  	  return __result + _Num;
 2,121,542  	}
         .      };
         .  
         .    template<bool _IsMove, typename _II, typename _OI>
         .      inline _OI
 6,364,626      __copy_move_a(_II __first, _II __last, _OI __result)
         .      {
         .        typedef typename iterator_traits<_II>::value_type _ValueTypeI;
         .        typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
         .        typedef typename iterator_traits<_II>::iterator_category _Category;
         .        const bool __simple = (__is_trivial(_ValueTypeI)
         .  	                     && __is_pointer<_II>::__value
         .  	                     && __is_pointer<_OI>::__value
 1,060,771  			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
         .  
         .        return std::__copy_move<_IsMove, __simple,
 7,425,398  	                      _Category>::__copy_m(__first, __last, __result);

 2,121,542      }
         .  
         .    // Helpers for streambuf iterators (either istream or ostream).
         .    // NB: avoid including <iosfwd>, relatively large.
         .    template<typename _CharT>
         .      struct char_traits;
         .  
         .    template<typename _CharT, typename _Traits>
         .      class istreambuf_iterator;
-- line 399 ----------------------------------------
-- line 416 ----------------------------------------
         .    template<bool _IsMove, typename _CharT>
         .      typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
         .  				    _CharT*>::__type
         .      __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
         .  		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
         .  
         .    template<bool _IsMove, typename _II, typename _OI>
         .      inline _OI
 8,486,168      __copy_move_a2(_II __first, _II __last, _OI __result)
         .      {
         .        return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
         .  					     std::__niter_base(__last),
20,154,644  					     std::__niter_base(__result)));


 5,303,855      }
         .  
         .    /**
         .     *  @brief Copies the range [first,last) into result.
         .     *  @ingroup mutating_algorithms
         .     *  @param  __first  An input iterator.
         .     *  @param  __last   An input iterator.
         .     *  @param  __result An output iterator.
         .     *  @return   result + (first - last)
-- line 437 ----------------------------------------
-- line 442 ----------------------------------------
         .     *  optimizations such as unrolling).  Result may not be contained within
         .     *  [first,last); the copy_backward function should be used instead.
         .     *
         .     *  Note that the end of the output range is permitted to be contained
         .     *  within [first,last).
         .    */
         .    template<typename _II, typename _OI>
         .      inline _OI
 7,425,397      copy(_II __first, _II __last, _OI __result)
         .      {
         .        // concept requirements
         .        __glibcxx_function_requires(_InputIteratorConcept<_II>)
         .        __glibcxx_function_requires(_OutputIteratorConcept<_OI,
         .  	    typename iterator_traits<_II>::value_type>)
         .        __glibcxx_requires_valid_range(__first, __last);
         .  
         .        return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
         .  	      (std::__miter_base(__first), std::__miter_base(__last),
14,850,789  	       __result));


 4,243,084      }
         .  
         .  #if __cplusplus >= 201103L
         .    /**
         .     *  @brief Moves the range [first,last) into result.
         .     *  @ingroup mutating_algorithms
         .     *  @param  __first  An input iterator.
         .     *  @param  __last   An input iterator.
         .     *  @param  __result An output iterator.
-- line 469 ----------------------------------------
-- line 555 ----------------------------------------
         .      };
         .  #endif
         .  
         .    template<bool _IsMove>
         .      struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
         .      {
         .        template<typename _Tp>
         .          static _Tp*
         6          __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
         .          {
         6  	  const ptrdiff_t _Num = __last - __first;
         2  	  if (_Num)
        13  	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
        13  => /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:__memmove_ssse3_back (1x)
         6  	  return __result - _Num;
         2  	}
         .      };
         .  
         .    template<bool _IsMove, typename _BI1, typename _BI2>
         .      inline _BI2
         6      __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
         .      {
         .        typedef typename iterator_traits<_BI1>::value_type _ValueType1;
         .        typedef typename iterator_traits<_BI2>::value_type _ValueType2;
         .        typedef typename iterator_traits<_BI1>::iterator_category _Category;
         .        const bool __simple = (__is_trivial(_ValueType1)
         .  	                     && __is_pointer<_BI1>::__value
         .  	                     && __is_pointer<_BI2>::__value
         1  			     && __are_same<_ValueType1, _ValueType2>::__value);
         .  
         .        return std::__copy_move_backward<_IsMove, __simple,
         .  	                               _Category>::__copy_move_b(__first,
         .  								 __last,
        11  								 __result);

     1,274  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         2      }
         .  
         .    template<bool _IsMove, typename _BI1, typename _BI2>
         .      inline _BI2
         8      __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
         .      {
         .        return _BI2(std::__copy_move_backward_a<_IsMove>
         .  		  (std::__niter_base(__first), std::__niter_base(__last),
        35  		   std::__niter_base(__result)));     2,631  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
         5      }
         .  
         .    /**
         .     *  @brief Copies the range [first,last) into result.
         .     *  @ingroup mutating_algorithms
         .     *  @param  __first  A bidirectional iterator.
         .     *  @param  __last   A bidirectional iterator.
         .     *  @param  __result A bidirectional iterator.
         .     *  @return   result - (first - last)
-- line 605 ----------------------------------------
-- line 611 ----------------------------------------
         .     *  loop count will be known (and therefore a candidate for compiler
         .     *  optimizations such as unrolling).
         .     *
         .     *  Result may not be in the range (first,last].  Use copy instead.  Note
         .     *  that the start of the output range may overlap [first,last).
         .    */
         .    template<typename _BI1, typename _BI2>
         .      inline _BI2
         7      copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
         .      {
         .        // concept requirements
         .        __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
         .        __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
         .        __glibcxx_function_requires(_ConvertibleConcept<
         .  	    typename iterator_traits<_BI1>::value_type,
         .  	    typename iterator_traits<_BI2>::value_type>)
         .        __glibcxx_requires_valid_range(__first, __last);
         .  
         .        return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
         .  	      (std::__miter_base(__first), std::__miter_base(__last),
        22  	       __result));


     2,730  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
         4      }
         .  
         .  #if __cplusplus >= 201103L
         .    /**
         .     *  @brief Moves the range [first,last) into result.
         .     *  @ingroup mutating_algorithms
         .     *  @param  __first  A bidirectional iterator.
         .     *  @param  __last   A bidirectional iterator.
         .     *  @param  __result A bidirectional iterator.
-- line 640 ----------------------------------------
-- line 680 ----------------------------------------
         .      {
         .        for (; __first != __last; ++__first)
         .  	*__first = __value;
         .      }
         .      
         .    template<typename _ForwardIterator, typename _Tp>
         .      inline typename
         .      __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
         5      __fill_a(_ForwardIterator __first, _ForwardIterator __last,
         .  	     const _Tp& __value)
         .      {
         3        const _Tp __tmp = __value;
     1,464        for (; __first != __last; ++__first)
     1,460  	*__first = __tmp;
         2      }
         .  
         .    // Specialization: for char types we can use memset.
         .    template<typename _Tp>
         .      inline typename
         .      __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
         .      __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
         .      {
         .        const _Tp __tmp = __c;
-- line 702 ----------------------------------------
-- line 713 ----------------------------------------
         .     *  @return   Nothing.
         .     *
         .     *  This function fills a range with copies of the same value.  For char
         .     *  types filling contiguous areas of memory, this becomes an inline call
         .     *  to @c memset or @c wmemset.
         .    */
         .    template<typename _ForwardIterator, typename _Tp>
         .      inline void
         7      fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
         .      {
         .        // concept requirements
         .        __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
         .  				  _ForwardIterator>)
         .        __glibcxx_requires_valid_range(__first, __last);
         .  
         9        std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),

     1,273  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        13  		    __value);
     1,001  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         4      }
         .  
         .    template<typename _OutputIterator, typename _Size, typename _Tp>
         .      inline typename
         .      __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
         .      __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
         .      {
         .        for (__decltype(__n + 0) __niter = __n;
         .  	   __niter > 0; --__niter, ++__first)
         .  	*__first = __value;
         .        return __first;
         .      }
         .  
         .    template<typename _OutputIterator, typename _Size, typename _Tp>
         .      inline typename
         .      __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
    36,960      __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
         .      {
    22,176        const _Tp __tmp = __value;
 5,915,988        for (__decltype(__n + 0) __niter = __n;
         .  	   __niter > 0; --__niter, ++__first)
 4,409,271  	*__first = __tmp;
     7,392        return __first;
    14,784      }
         .  
         .    template<typename _Size, typename _Tp>
         .      inline typename
         .      __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp*>::__type
         .      __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
         .      {
         .        std::__fill_a(__first, __first + __n, __c);
         .        return __first + __n;
-- line 761 ----------------------------------------
-- line 773 ----------------------------------------
         .     *  types filling contiguous areas of memory, this becomes an inline call
         .     *  to @c memset or @ wmemset.
         .     *
         .     *  _GLIBCXX_RESOLVE_LIB_DEFECTS
         .     *  DR 865. More algorithms that throw away information
         .    */
         .    template<typename _OI, typename _Size, typename _Tp>
         .      inline _OI
    44,352      fill_n(_OI __first, _Size __n, const _Tp& __value)
         .      {
         .        // concept requirements
         .        __glibcxx_function_requires(_OutputIteratorConcept<_OI, _Tp>)
         .  
    73,936        return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));

     2,322  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

    14,784      }
         .  
         .    template<bool _BoolType>
         .      struct __equal
         .      {
         .        template<typename _II1, typename _II2>
         .          static bool
         .          equal(_II1 __first1, _II1 __last1, _II2 __first2)
         .          {
-- line 795 ----------------------------------------
-- line 981 ----------------------------------------
         .    { return sizeof(int) * __CHAR_BIT__  - 1 - __builtin_clz(__n); }
         .  
         .    inline _GLIBCXX_CONSTEXPR unsigned
         .    __lg(unsigned __n)
         .    { return sizeof(int) * __CHAR_BIT__  - 1 - __builtin_clz(__n); }
         .  
         .    inline _GLIBCXX_CONSTEXPR long
         .    __lg(long __n)
        26    { return sizeof(long) * __CHAR_BIT__ - 1 - __builtin_clzl(__n); }
         .  
         .    inline _GLIBCXX_CONSTEXPR unsigned long
         .    __lg(unsigned long __n)
         .    { return sizeof(long) * __CHAR_BIT__ - 1 - __builtin_clzl(__n); }
         .  
         .    inline _GLIBCXX_CONSTEXPR long long
         .    __lg(long long __n)
         .    { return sizeof(long long) * __CHAR_BIT__ - 1 - __builtin_clzll(__n); }
-- line 997 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
     Ir 

-- line 171 ----------------------------------------
      .    template <typename PointT>
      .    class PointCloud
      .    {
      .      public:
      .        /** \brief Default constructor. Sets \ref is_dense to true, \ref width
      .          * and \ref height to 0, and the \ref sensor_origin_ and \ref
      .          * sensor_orientation_ to identity.
      .          */
     40        PointCloud () : 
      .          header (), points (), width (0), height (0), is_dense (true),
      .          sensor_origin_ (Eigen::Vector4f::Zero ()), sensor_orientation_ (Eigen::Quaternionf::Identity ()),
    390          mapping_ ()
     40        {}
      .  
      .        /** \brief Copy constructor (needed by compilers such as Intel C++)
      .          * \param[in] pc the cloud to copy into this
      .          */
      .        PointCloud (PointCloud<PointT> &pc) : 
      .          header (), points (), width (0), height (0), is_dense (true), 
      .          sensor_origin_ (Eigen::Vector4f::Zero ()), sensor_orientation_ (Eigen::Quaternionf::Identity ()),
      .          mapping_ ()
-- line 191 ----------------------------------------
-- line 232 ----------------------------------------
      .          , height (height_)
      .          , is_dense (true)
      .          , sensor_origin_ (Eigen::Vector4f::Zero ())
      .          , sensor_orientation_ (Eigen::Quaternionf::Identity ())
      .          , mapping_ ()
      .        {}
      .  
      .        /** \brief Destructor. */
    150        virtual ~PointCloud () {}


      .  
      .        /** \brief Add a point cloud to the current cloud.
      .          * \param[in] rhs the cloud to add to the current cloud
      .          * \return the new cloud as a concatenation of the current cloud and the new given cloud
      .          */ 
      .        inline PointCloud&
      .        operator += (const PointCloud& rhs)
      .        {
-- line 248 ----------------------------------------
-- line 464 ----------------------------------------
      .        inline const PointT& back () const { return (points.back ()); }
      .        inline PointT& back () { return (points.back ()); }
      .  
      .        /** \brief Insert a new point in the cloud, at the end of the container.
      .          * \note This breaks the organized structure of the cloud by setting the height to 1!
      .          * \param[in] pt the point to insert
      .          */
      .        inline void 
342,170        push_back (const PointT& pt)
      .        {
479,046          points.push_back (pt);
  1,413  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

547,472          width = static_cast<uint32_t> (points.size ());

136,868          height = 1;
136,868        }
      .  
      .        /** \brief Insert a new point in the cloud, given an iterator.
      .          * \note This breaks the organized structure of the cloud by setting the height to 1!
      .          * \param[in] position where to insert the point
      .          * \param[in] pt the point to insert
      .          * \return returns the new position iterator
      .          */
      .        inline iterator 
-- line 485 ----------------------------------------
-- line 581 ----------------------------------------
      .  
      .      protected:
      .        // This is motivated by ROS integration. Users should not need to access mapping_.
      .        boost::shared_ptr<MsgFieldMap> mapping_;
      .  
      .        friend boost::shared_ptr<MsgFieldMap>& detail::getMapping<PointT>(pcl::PointCloud<PointT> &p);
      .  
      .      public:
    113        EIGEN_MAKE_ALIGNED_OPERATOR_NEW

      .    };
      .  
      .    namespace detail
      .    {
      .      template <typename PointT> boost::shared_ptr<pcl::MsgFieldMap>&
      .      getMapping (pcl::PointCloud<PointT>& p)
      .      {
      .        return (p.mapping_);
-- line 597 ------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 170 ----------------------------------------
        .  
        .  /***********************
        .  *** Linear traversal ***
        .  ***********************/
        .  
        .  template<typename Derived1, typename Derived2, int Index, int Stop>
        .  struct assign_LinearTraversal_CompleteUnrolling
        .  {
3,195,810    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
3,834,980      dst.copyCoeff(Index, src);
    1,506  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

3,834,996      assign_LinearTraversal_CompleteUnrolling<Derived1, Derived2, Index+1, Stop>::run(dst, src);

    1,642  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
1,278,324    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Stop>
        .  struct assign_LinearTraversal_CompleteUnrolling<Derived1, Derived2, Stop, Stop>
        .  {
1,278,324    static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &) {}
        .  };
        .  
        .  /**************************
        .  *** Inner vectorization ***
        .  **************************/
        .  
        .  template<typename Derived1, typename Derived2, int Index, int Stop>
        .  struct assign_innervec_CompleteUnrolling
-- line 196 ----------------------------------------
-- line 251 ----------------------------------------
        .  {
        .    static inline void run(Derived1 &, const Derived2 &) { }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, DefaultTraversal, NoUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
    1,895    static inline void run(Derived1 &dst, const Derived2 &src)
        .    {
    1,895      const Index innerSize = dst.innerSize();

    1,899      const Index outerSize = dst.outerSize();

    1,061  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    6,443      for(Index outer = 0; outer < outerSize; ++outer)
   23,757        for(Index inner = 0; inner < innerSize; ++inner)
   31,630          dst.copyCoeffByOuterInner(outer, inner, src);
    1,906  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      758    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, DefaultTraversal, CompleteUnrolling, Version>
        .  {
        .    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
        .      assign_DefaultTraversal_CompleteUnrolling<Derived1, Derived2, 0, Derived1::SizeAtCompileTime>
-- line 274 ----------------------------------------
-- line 292 ----------------------------------------
        .  /***********************
        .  *** Linear traversal ***
        .  ***********************/
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, LinearTraversal, NoUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
   18,675    static inline void run(Derived1 &dst, const Derived2 &src)
        .    {
   18,687      const Index size = dst.size();

    2,778  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   45,567      for(Index i = 0; i < size; ++i)
   47,073        dst.copyCoeff(i, src);
    2,890  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    7,470    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, LinearTraversal, CompleteUnrolling, Version>
        .  {
1,065,270    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
1,278,332      assign_LinearTraversal_CompleteUnrolling<Derived1, Derived2, 0, Derived1::SizeAtCompileTime>

    1,642  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .        ::run(dst, src);
  426,108    }
        .  };
        .  
        .  /**************************
        .  *** Inner vectorization ***
        .  **************************/
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, InnerVectorizedTraversal, NoUnrolling, Version>
-- line 323 ----------------------------------------
-- line 360 ----------------------------------------
        .  /***************************
        .  *** Linear vectorization ***
        .  ***************************/
        .  
        .  template <bool IsAligned = false>
        .  struct unaligned_assign_impl
        .  {
        .    template <typename Derived, typename OtherDerived>
   13,512    static EIGEN_STRONG_INLINE void run(const Derived&, OtherDerived&, typename Derived::Index, typename Derived::Index) {}
        .  };
        .  
        .  template <>
        .  struct unaligned_assign_impl<false>
        .  {
        .    // MSVC must not inline this functions. If it does, it fails to optimize the
        .    // packet access path.
        .  #ifdef _MSC_VER
        .    template <typename Derived, typename OtherDerived>
        .    static EIGEN_DONT_INLINE void run(const Derived& src, OtherDerived& dst, typename Derived::Index start, typename Derived::Index end)
        .  #else
        .    template <typename Derived, typename OtherDerived>
  109,921    static EIGEN_STRONG_INLINE void run(const Derived& src, OtherDerived& dst, typename Derived::Index start, typename Derived::Index end)
        .  #endif
        .    {
  169,430      for (typename Derived::Index index = start; index < end; ++index)
  131,673        dst.copyCoeff(index, src);
    1,794  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   31,406    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, LinearVectorizedTraversal, NoUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
   43,480    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
   43,512      const Index size = dst.size();

    1,346  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .      typedef packet_traits<typename Derived1::Scalar> PacketTraits;
        .      enum {
        .        packetSize = PacketTraits::size,
        .        dstAlignment = PacketTraits::AlignedOnScalar ? Aligned : int(assign_traits<Derived1,Derived2>::DstIsAligned) ,
        .        srcAlignment = assign_traits<Derived1,Derived2>::JointAlignment
        .      };
        .      const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
   71,787                               : internal::first_aligned(&dst.coeffRef(0), size);

    1,242  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   95,907      const Index alignedEnd = alignedStart + ((size-alignedStart)/packetSize)*packetSize;
        .  
   67,931      unaligned_assign_impl<assign_traits<Derived1,Derived2>::DstIsAligned!=0>::run(src,dst,0,alignedStart);

    1,778  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  
   62,571      for(Index index = alignedStart; index < alignedEnd; index += packetSize)
        .      {
   21,179        dst.template copyPacket<Derived2, dstAlignment, srcAlignment>(index, src);

    1,546  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .      }
        .  
   60,892      unaligned_assign_impl<>::run(src,dst,alignedEnd,size);

   17,392    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, LinearVectorizedTraversal, CompleteUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
        .    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
-- line 422 ----------------------------------------
-- line 432 ----------------------------------------
        .  /**************************
        .  *** Slice vectorization ***
        .  ***************************/
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, SliceVectorizedTraversal, NoUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
      325    static inline void run(Derived1 &dst, const Derived2 &src)
        .    {
        .      typedef typename Derived1::Scalar Scalar;
        .      typedef packet_traits<Scalar> PacketTraits;
        .      enum {
        .        packetSize = PacketTraits::size,
        .        alignable = PacketTraits::AlignedOnScalar,
        .        dstIsAligned = assign_traits<Derived1,Derived2>::DstIsAligned,
        .        dstAlignment = alignable ? Aligned : int(dstIsAligned),
        .        srcAlignment = assign_traits<Derived1,Derived2>::JointAlignment
        .      };
      455      const Scalar *dst_ptr = &dst.coeffRef(0,0);

        .      if((!bool(dstIsAligned)) && (size_t(dst_ptr) % sizeof(Scalar))>0)
        .      {
        .        // the pointer is not aligend-on scalar, so alignment is not possible
        .        return assign_impl<Derived1,Derived2,DefaultTraversal,NoUnrolling>::run(dst, src);
        .      }
       65      const Index packetAlignedMask = packetSize - 1;
      325      const Index innerSize = dst.innerSize();

      325      const Index outerSize = dst.outerSize();

      780      const Index alignedStep = alignable ? (packetSize - dst.outerStride() % packetSize) & packetAlignedMask : 0;

       65      Index alignedStart = ((!alignable) || bool(dstIsAligned)) ? 0 : internal::first_aligned(dst_ptr, innerSize);
        .  
    1,105      for(Index outer = 0; outer < outerSize; ++outer)
        .      {
    1,365        const Index alignedEnd = alignedStart + ((innerSize-alignedStart) & ~packetAlignedMask);
        .        // do the non-vectorizable part of the assignment
    1,755        for(Index inner = 0; inner<alignedStart ; ++inner)
    1,365          dst.copyCoeffByOuterInner(outer, inner, src);

        .  
        .        // do the vectorizable part of the assignment
    1,170        for(Index inner = alignedStart; inner<alignedEnd; inner+=packetSize)
        .          dst.template copyPacketByOuterInner<Derived2, dstAlignment, Unaligned>(outer, inner, src);
        .  
        .        // do the non-vectorizable part of the assignment
    2,730        for(Index inner = alignedEnd; inner<innerSize ; ++inner)
    2,734          dst.copyCoeffByOuterInner(outer, inner, src);
    2,130  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  
    3,705        alignedStart = std::min<Index>((alignedStart+alignedStep)%packetSize, innerSize);

        .      }
      130    }
        .  };
        .  
        .  } // end namespace internal
        .  
        .  /***************************************************************************
        .  * Part 4 : implementation of DenseBase methods
        .  ***************************************************************************/
        .  
        .  template<typename Derived>
        .  template<typename OtherDerived>
1,307,712  EIGEN_STRONG_INLINE Derived& DenseBase<Derived>
        .    ::lazyAssign(const DenseBase<OtherDerived>& other)
        .  {
        .    enum{
        .      SameType = internal::is_same<typename Derived::Scalar,typename OtherDerived::Scalar>::value
        .    };
        .  
        .    EIGEN_STATIC_ASSERT_LVALUE(Derived)
        .    EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE(Derived,OtherDerived)
        .    EIGEN_STATIC_ASSERT(SameType,YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY)
        .  
        .  #ifdef EIGEN_DEBUG_ASSIGN
        .    internal::assign_traits<Derived, OtherDerived>::debug();
        .  #endif
4,795,024    eigen_assert(rows() == other.rows() && cols() == other.cols());


    3,364  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


  871,860    internal::assign_impl<Derived, OtherDerived, int(SameType) ? int(internal::assign_traits<Derived, OtherDerived>::Traversal)
    1,874  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

1,961,572                                                         : int(InvalidTraversal)>::run(derived(),other.derived());


        .  #ifndef EIGEN_NO_DEBUG
2,179,572    checkTransposeAliasing(other.derived());

    1,941  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  #endif
  871,808    return derived();

  871,808  }
        .  
        .  namespace internal {
        .  
        .  template<typename Derived, typename OtherDerived,
        .           bool EvalBeforeAssigning = (int(internal::traits<OtherDerived>::Flags) & EvalBeforeAssigningBit) != 0,
        .           bool NeedToTranspose = ((int(Derived::RowsAtCompileTime) == 1 && int(OtherDerived::ColsAtCompileTime) == 1)
        .                                |   // FIXME | instead of || to please GCC 4.4.0 stupid warning "suggest parentheses around &&".
        .                                    // revert to || as soon as not needed anymore.
        .                                    (int(Derived::ColsAtCompileTime) == 1 && int(OtherDerived::RowsAtCompileTime) == 1))
        .                                && int(Derived::SizeAtCompileTime) != 1>
        .  struct assign_selector;
        .  
        .  template<typename Derived, typename OtherDerived>
        .  struct assign_selector<Derived,OtherDerived,false,false> {
3,868,051    static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.derived()); }

    1,786  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .    template<typename ActualDerived, typename ActualOtherDerived>
    6,980    static EIGEN_STRONG_INLINE Derived& evalTo(ActualDerived& dst, const ActualOtherDerived& other) { other.evalTo(dst); return dst; }

    1,538  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  };
        .  template<typename Derived, typename OtherDerived>
        .  struct assign_selector<Derived,OtherDerived,true,false> {
        .    static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.eval()); }
        .  };
        .  template<typename Derived, typename OtherDerived>
        .  struct assign_selector<Derived,OtherDerived,false,true> {
        .    static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.transpose()); }
-- line 537 ----------------------------------------
-- line 561 ----------------------------------------
        .  template<typename Derived>
        .  EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const MatrixBase& other)
        .  {
        .    return internal::assign_selector<Derived,Derived>::run(derived(), other.derived());
        .  }
        .  
        .  template<typename Derived>
        .  template <typename OtherDerived>
   61,308  EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const DenseBase<OtherDerived>& other)
        .  {
  132,922    return internal::assign_selector<Derived,OtherDerived>::run(derived(), other.derived());

    5,772  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


   40,872  }
        .  
        .  template<typename Derived>
        .  template <typename OtherDerived>
    2,988  EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const EigenBase<OtherDerived>& other)
        .  {
    6,482    return internal::assign_selector<Derived,OtherDerived,false>::evalTo(derived(), other.derived());    1,642  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    1,992  }
        .  
        .  template<typename Derived>
        .  template<typename OtherDerived>
        .  EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)
        .  {
        .    return internal::assign_selector<Derived,OtherDerived,false>::evalTo(derived(), other.derived());
        .  }
        .  
-- line 587 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/davidwatkins/post_processing/mesh_reconstruction/narrow_band/narrowBand.cpp
--------------------------------------------------------------------------------
       Ir 

-- line 2 ----------------------------------------
        .  #include "narrowBand.h"
        .  
        .  using namespace std;
        .  
        .  typedef boost::shared_ptr< pcl::VoxelGrid<pcl::InterestPoint> > VoxelGridPtr;
        .  typedef boost::shared_ptr<bands> bandsPtr;
        .  
        .  //morphological erosion with mask: [[000;010;000],[010,111,010],[000;010;000]]
        6  gridPtr erode_grid(gridPtr gr){
       20      gridPtr eroded = copyGrid(gr);
    1,541  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
54,089,353  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:copyGrid(boost::shared_ptr<grid>) (1x)


      849      for(int i=1; i<eroded->dims[0]-1; i++){


   26,676          for(int j=1; j<eroded->dims[1]-1; j++){


1,033,292              for(int k=1; k<eroded->dims[2]-1; k++){


2,200,380                  if((*gr)[i][j][k]==0.0){
2,829,060  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (62868x)

1,383,096  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (62868x)
29,422,224  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (62868x)
1,145,732                      (*eroded)[i][j][k]=0.0;
1,777,860  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (39508x)

  869,176  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (39508x)
18,489,744  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (39508x)
        .                  }
  840,960                  else if((*gr)[i-1][j][k]==0.0){
  513,920  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (23360x)
10,932,480  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (23360x)
1,051,200  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (23360x)

   27,173                      (*eroded)[i][j][k]=0.0;
   20,614  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (937x)
  438,516  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (937x)
   42,165  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (937x)

        .                  }
  807,228                  else if((*gr)[i][j-1][k]==0.0){
  493,306  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (22423x)
10,493,964  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (22423x)
1,009,035  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (22423x)

   23,635                      (*eroded)[i][j][k]=0.0;

   36,675  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (815x)
  381,420  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (815x)
   17,930  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (815x)
        .                  }
  777,888                  else if((*gr)[i][j][k-1]==0.0){

  972,360  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (21608x)
10,112,544  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (21608x)
  475,376  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (21608x)
   32,045                      (*eroded)[i][j][k]=0.0;
  517,140  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (1105x)
   24,310  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (1105x)

   49,725  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (1105x)
        .                  }
  738,108                  else if((*gr)[i+1][j][k]==0.0){
  451,066  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (20503x)
9,595,404  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (20503x)
  922,635  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (20503x)

    7,656                      (*eroded)[i][j][k]=0.0;
   11,880  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (264x)

    5,808  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (264x)
  123,552  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (264x)
        .                  }
  728,604                  else if((*gr)[i][j+1][k]==0.0){
  910,755  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (20239x)

  445,258  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (20239x)
9,471,852  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (20239x)
    9,483                      (*eroded)[i][j][k]=0.0;
    7,194  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (327x)
  153,036  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (327x)
   14,715  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (327x)

        .                  }
  716,832                  else if((*gr)[i][j][k+1]==0.0){
  438,064  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (19912x)
9,318,816  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (19912x)
  896,040  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (19912x)

    9,686                      (*eroded)[i][j][k]=0.0;
    7,348  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (334x)
  156,312  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (334x)
   15,030  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (334x)

        .                  }
        .                  else{
  548,184                      (*eroded)[i][j][k]=1.0;
  881,010  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (19578x)

  430,716  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (19578x)
9,162,504  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (19578x)
        .                  }
        .              }
        .          }
        .      }
        1      return eroded;
        5  }
        .  
        .  //morphological dilation with mask: [[000;010;000],[010,111,010],[000;010;000]]
        6  gridPtr dilate_grid(gridPtr gr){
       16      gridPtr dilated = copyGrid(gr);


54,089,150  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:copyGrid(boost::shared_ptr<grid>) (1x)
      849      for(int i=1; i<dilated->dims[0]-1; i++){


   26,676          for(int j=1; j<dilated->dims[1]-1; j++){


1,033,292              for(int k=1; k<dilated->dims[2]-1; k++){


2,200,380                  if((*gr)[i][j][k]==1.0){

2,829,060  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (62868x)
29,422,224  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (62868x)
1,383,096  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (62868x)
  567,762                      (*dilated)[i][j][k]=1.0;

  881,010  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (19578x)
9,162,504  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (19578x)
  430,716  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (19578x)
        .                  }
1,558,440                  else if((*gr)[i-1][j][k]==1.0){
20,259,720  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (43290x)
  952,380  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (43290x)

1,948,050  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (43290x)
   24,244                      (*dilated)[i][j][k]=1.0;

   37,620  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (836x)
  391,248  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (836x)
   18,392  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (836x)
        .                  }
1,528,344                  else if((*gr)[i][j-1][k]==1.0){
  933,988  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (42454x)
19,868,472  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (42454x)
1,910,430  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (42454x)

   21,431                      (*dilated)[i][j][k]=1.0;

   33,255  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (739x)
  345,852  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (739x)
   16,258  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (739x)
        .                  }
1,501,740                  else if((*gr)[i][j][k-1]==1.0){
19,522,620  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (41715x)
  917,730  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (41715x)

1,877,175  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (41715x)
   30,624                      (*dilated)[i][j][k]=1.0;
   23,232  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (1056x)
  494,208  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (1056x)
   47,520  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (1056x)

        .                  }
1,463,724                  else if((*gr)[i+1][j][k]==1.0){

1,829,655  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (40659x)
19,028,412  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (40659x)
  894,498  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (40659x)
    8,352                      (*dilated)[i][j][k]=1.0;
    6,336  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (288x)
  134,784  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (288x)
   12,960  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (288x)

        .                  }
1,453,356                  else if((*gr)[i][j+1][k]==1.0){
18,893,628  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (40371x)
  888,162  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (40371x)

1,816,695  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (40371x)
   13,659                      (*dilated)[i][j][k]=1.0;
  220,428  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (471x)
   10,362  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (471x)

   21,195  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (471x)
        .                  }
1,436,400                  else if((*gr)[i][j][k+1]==1.0){

1,795,500  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (39900x)
18,673,200  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (39900x)
  877,800  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (39900x)
   11,368                      (*dilated)[i][j][k]=1.0;
   17,640  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (392x)

    8,624  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (392x)
  183,456  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (392x)
        .                  }
        .                  else{
1,106,224                      (*dilated)[i][j][k]=0.0;
1,777,860  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (39508x)

  869,176  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (39508x)
18,489,744  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (39508x)
        .                  }
        .              }
        .          }
        .      }
        1      return dilated;
        5  }
        .  
        .  //generate band and tight band (eroded band) using dist field "margin" and band_size
       11  bandsPtr createBands(gridPtr margin, float band_size){
       28      bandsPtr bnds = bandsPtr(new bands());
    2,027  => /home/davidwatkins/post_processing/mesh_reconstruction/narrow_band/narrowBand.h:bands::bands() (1x)
    4,906  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
      169  => ???:operator new(unsigned long) (1x)

       73      bnds->band = gridPtr(new grid(margin->dims, margin->scale, margin->shift, margin->pad));  912,973  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, int) (1x)
    7,444  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (6x)

      113  => ???:operator new(unsigned long) (1x)

        .      //create band
      995      for(int i=0; i<bnds->band->dims[0]; i++){


    1,523  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   33,102          for(int j=0; j<bnds->band->dims[1]; j++){1,348,974              for(int k=0; k<bnds->band->dims[2]; k++){2,264,938                  if((*margin)[i][j][k]<=band_size){

    4,506  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)
3,287,790  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (73062x)
34,193,016  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (73062x)
1,607,364  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (73062x)
  747,520                      (*(bnds->band))[i][j][k]=1.0;
10,932,480  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (23360x)
  513,920  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (23360x)


1,051,200  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (23360x)
        .                  }
        .                  else{
1,540,762                      (*(bnds->band))[i][j][k]=0.0;
23,260,536  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (49702x)
1,093,444  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (49702x)


2,236,590  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (49702x)
        .                  }
        .              }
        .          }
        .      }
       42      bnds->tight_band = erode_grid(bnds->band);
    2,427  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
212,182,215  => /home/davidwatkins/post_processing/mesh_reconstruction/narrow_band/narrowBand.cpp:erode_grid(boost::shared_ptr<grid>) (1x)
       37      bnds->band=dilate_grid(bnds->tight_band);


282,321,089  => /home/davidwatkins/post_processing/mesh_reconstruction/narrow_band/narrowBand.cpp:dilate_grid(boost::shared_ptr<grid>) (1x)


    1,500  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  
        1      return bnds;
       27  }
   14,301  => /home/davidwatkins/post_processing/mesh_reconstruction/narrow_band/narrowBand.cpp:__static_initialization_and_destruction_0(int, int) (1x)
        .  
        .  

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
         Ir 

-- line 226 ----------------------------------------
          .  
          .  inline void sp_enable_shared_from_this( sp_any_pointer, sp_any_pointer, sp_any_pointer )
          .  {
          .  }
          .  
          .  #else // _MANAGED
          .  
          .  inline void sp_enable_shared_from_this( ... )
         70  {
         70  }
          .  
          .  #endif // _MANAGED
          .  
          .  #if !defined( BOOST_NO_SFINAE ) && !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION ) && !defined( BOOST_NO_AUTO_PTR )
          .  
          .  // rvalue auto_ptr support based on a technique by Dave Abrahams
          .  
          .  template< class T, class R > struct sp_enable_if_auto_ptr
-- line 243 ----------------------------------------
-- line 248 ----------------------------------------
          .  {
          .      typedef R type;
          .  }; 
          .  
          .  #endif
          .  
          .  // sp_assert_convertible
          .  
         10  template< class Y, class T > inline void sp_assert_convertible()
          .  {
          .  #if !defined( BOOST_SP_NO_SP_CONVERTIBLE )
          .  
          .      // static_assert( sp_convertible< Y, T >::value );
          .      typedef char tmp[ sp_convertible< Y, T >::value? 1: -1 ];
          .      (void)sizeof( tmp );
          .  
          .  #else
          .  
          .      T* p = static_cast< Y* >( 0 );
          .      (void)p;
          .  
          .  #endif
         10  }
          .  
          .  // pointer constructor helper
          .  
        210  template< class T, class Y > inline void sp_pointer_construct( boost::shared_ptr< T > * ppx, Y * p, boost::detail::shared_count & pn )
          .  {
        597      boost::detail::shared_count( p ).swap( pn );

      3,407  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)


        287      boost::detail::sp_enable_shared_from_this( ppx, p, p );
      1,069  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         70  }
          .  
          .  #if !defined( BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION )
          .  
          .  template< class T, class Y > inline void sp_pointer_construct( boost::shared_ptr< T[] > * /*ppx*/, Y * p, boost::detail::shared_count & pn )
          .  {
          .      sp_assert_convertible< Y[], T[] >();
          .      boost::detail::shared_count( p, boost::checked_array_deleter< T >() ).swap( pn );
          .  }
-- line 286 ----------------------------------------
-- line 320 ----------------------------------------
          .  //
          .  //  shared_ptr
          .  //
          .  //  An enhanced relative of scoped_ptr with reference counted copy semantics.
          .  //  The object pointed to is deleted when the last shared_ptr pointing to it
          .  //  is destroyed or reset.
          .  //
          .  
  4,601,045  template<class T> class shared_ptr

          .  {
          .  private:
          .  
          .      // Borland 5.5.1 specific workaround
          .      typedef shared_ptr<T> this_type;
          .  
          .  public:
          .  
          .      typedef typename boost::detail::sp_element< T >::type element_type;
          .  
        231      shared_ptr() BOOST_NOEXCEPT : px( 0 ), pn() // never throws in 1.30+

          .      {
         42      }
          .  
          .  #if !defined( BOOST_NO_CXX11_NULLPTR )
          .  
          .      shared_ptr( boost::detail::sp_nullptr_t ) BOOST_NOEXCEPT : px( 0 ), pn() // never throws
          .      {
          .      }
          .  
          .  #endif
          .  
          .      template<class Y>
        493      explicit shared_ptr( Y * p ): px( p ), pn() // Y must be complete

        889  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .      {
        311          boost::detail::sp_pointer_construct( this, p, pn );
      1,947  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        175      }
          .  
          .      //
          .      // Requirements: D's copy constructor must not throw
          .      //
          .      // shared_ptr will release p by calling d(p)
          .      //
          .  
          .      template<class Y, class D> shared_ptr( Y * p, D d ): px( p ), pn( p, d )
-- line 363 ----------------------------------------
-- line 417 ----------------------------------------
          .          {
          .              px = r.px;
          .          }
          .      }
          .  
          .      template<class Y>
          .  #if !defined( BOOST_SP_NO_SP_CONVERTIBLE )
          .  
         30      shared_ptr( shared_ptr<Y> const & r, typename boost::detail::sp_enable_if_convertible<Y,T>::type = boost::detail::sp_empty() )
          .  
          .  #else
          .  
          .      shared_ptr( shared_ptr<Y> const & r )
          .  
          .  #endif
         64      BOOST_NOEXCEPT : px( r.px ), pn( r.pn )

        965  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .      {
         18          boost::detail::sp_assert_convertible< Y, T >();

      1,349  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         25      }
          .  
          .      // aliasing
          .      template< class Y >
          .      shared_ptr( shared_ptr<Y> const & r, element_type * p ) BOOST_NOEXCEPT : px( p ), pn( r.pn )
          .      {
          .      }
          .  
          .  #ifndef BOOST_NO_AUTO_PTR
-- line 443 ----------------------------------------
-- line 497 ----------------------------------------
          .  
          .          boost::detail::sp_deleter_construct( this, tmp );
          .      }
          .  
          .  #endif
          .  
          .      // assignment
          .  
         84      shared_ptr & operator=( shared_ptr const & r ) BOOST_NOEXCEPT
          .      {
        288          this_type(r).swap(*this);

      1,191  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


         28          return *this;
         56      }
          .  
          .  #if !defined(BOOST_MSVC) || (BOOST_MSVC >= 1400)
          .  
          .      template<class Y>
          .      shared_ptr & operator=(shared_ptr<Y> const & r) BOOST_NOEXCEPT
          .      {
          .          this_type(r).swap(*this);
          .          return *this;
-- line 517 ----------------------------------------
-- line 609 ----------------------------------------
          .      shared_ptr & operator=( boost::detail::sp_nullptr_t ) BOOST_NOEXCEPT // never throws
          .      {
          .          this_type().swap(*this);
          .          return *this;
          .      }
          .  
          .  #endif
          .  
         10      void reset() BOOST_NOEXCEPT // never throws in 1.30+
          .      {
         42          this_type().swap(*this);

      1,159  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


          8      }
          .  
          .      template<class Y> void reset( Y * p ) // Y must be complete
          .      {
          .          BOOST_ASSERT( p == 0 || p != px ); // catch self-reset errors
          .          this_type( p ).swap( *this );
          .      }
          .  
          .      template<class Y, class D> void reset( Y * p, D d )
-- line 628 ----------------------------------------
-- line 636 ----------------------------------------
          .      }
          .  
          .      template<class Y> void reset( shared_ptr<Y> const & r, element_type * p )
          .      {
          .          this_type( r, p ).swap( *this );
          .      }
          .      
          .      // never throws (but has a BOOST_ASSERT in it, so not marked with BOOST_NOEXCEPT)
 75,866,324      typename boost::detail::sp_dereference< T >::type operator* () const
          .      {
 75,866,324          BOOST_ASSERT( px != 0 );
 37,933,162          return *px;
 37,933,162      }
          .      
          .      // never throws (but has a BOOST_ASSERT in it, so not marked with BOOST_NOEXCEPT)
190,940,004      typename boost::detail::sp_member_access< T >::type operator-> () const 
          .      {
190,940,004          BOOST_ASSERT( px != 0 );
 95,470,002          return px;
 95,470,002      }
          .      
          .      // never throws (but has a BOOST_ASSERT in it, so not marked with BOOST_NOEXCEPT)
          .      typename boost::detail::sp_array_access< T >::type operator[] ( std::ptrdiff_t i ) const
          .      {
          .          BOOST_ASSERT( px != 0 );
          .          BOOST_ASSERT( i >= 0 && ( i < boost::detail::sp_extent< T >::value || boost::detail::sp_extent< T >::value == 0 ) );
          .  
          .          return px[ i ];
-- line 663 ----------------------------------------
-- line 676 ----------------------------------------
          .          return pn.unique();
          .      }
          .  
          .      long use_count() const BOOST_NOEXCEPT
          .      {
          .          return pn.use_count();
          .      }
          .  
         80      void swap( shared_ptr & other ) BOOST_NOEXCEPT
          .      {
        128          std::swap(px, other.px);

      1,106  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        136          pn.swap(other.pn);

         32      }
          .  
          .      template<class Y> bool owner_before( shared_ptr<Y> const & rhs ) const BOOST_NOEXCEPT
          .      {
          .          return pn < rhs.pn;
          .      }
          .  
          .      template<class Y> bool owner_before( weak_ptr<Y> const & rhs ) const BOOST_NOEXCEPT
          .      {
-- line 696 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 19 ----------------------------------------
        .  
        .  /** \class MapBase
        .    * \ingroup Core_Module
        .    *
        .    * \brief Base class for Map and Block expression with direct access
        .    *
        .    * \sa class Map, class Block
        .    */
  156,964  template<typename Derived> class MapBase<Derived, ReadOnlyAccessors>
    1,283  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .    : public internal::dense_xpr_base<Derived>::type
        .  {
        .    public:
        .  
        .      typedef typename internal::dense_xpr_base<Derived>::type Base;
        .      enum {
        .        RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,
        .        ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,
-- line 35 ----------------------------------------
-- line 71 ----------------------------------------
        .      using Base::rowStride;
        .      using Base::colStride;
        .  
        .      // bug 217 - compile error on ICC 11.1
        .      using Base::operator=;
        .  
        .      typedef typename Base::CoeffReturnType CoeffReturnType;
        .  
3,607,638      inline Index rows() const { return m_rows.value(); }

    1,385  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
2,604,014      inline Index cols() const { return m_cols.value(); }

        .  
        .      /** Returns a pointer to the first coefficient of the matrix or vector.
        .        *
        .        * \note When addressing this data, make sure to honor the strides returned by innerStride() and outerStride().
        .        *
        .        * \sa innerStride(), outerStride()
        .        */
        .      inline const Scalar* data() const { return m_data; }
        .  
  130,800      inline const Scalar& coeff(Index rowId, Index colId) const
        .      {
  261,608        return m_data[colId * colStride() + rowId * rowStride()];

    2,776  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

   81,750      }
        .  
  119,232      inline const Scalar& coeff(Index index) const
        .      {
        .        EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS(Derived)
  178,860        return m_data[index * innerStride()];

    1,447  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   79,488      }
        .  
        .      inline const Scalar& coeffRef(Index rowId, Index colId) const
        .      {
        .        return this->m_data[colId * colStride() + rowId * rowStride()];
        .      }
        .  
        .      inline const Scalar& coeffRef(Index index) const
        .      {
-- line 107 ----------------------------------------
-- line 124 ----------------------------------------
        .      }
        .  
        .      explicit inline MapBase(PointerType dataPtr) : m_data(dataPtr), m_rows(RowsAtCompileTime), m_cols(ColsAtCompileTime)
        .      {
        .        EIGEN_STATIC_ASSERT_FIXED_SIZE(Derived)
        .        checkSanity();
        .      }
        .  
       30      inline MapBase(PointerType dataPtr, Index vecSize)
        .              : m_data(dataPtr),
        .                m_rows(RowsAtCompileTime == Dynamic ? vecSize : Index(RowsAtCompileTime)),
      104                m_cols(ColsAtCompileTime == Dynamic ? vecSize : Index(ColsAtCompileTime))

    1,297  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


        .      {
        .        EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
       10        eigen_assert(vecSize >= 0);
        .        eigen_assert(dataPtr == 0 || SizeAtCompileTime == Dynamic || SizeAtCompileTime == vecSize);
       24        checkSanity();

    1,385  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       10      }
        .  
  950,691      inline MapBase(PointerType dataPtr, Index nbRows, Index nbCols)
2,852,121              : m_data(dataPtr), m_rows(nbRows), m_cols(nbCols)    2,596  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        .      {
  920,570        eigen_assert( (dataPtr == 0)
        .                || (   nbRows >= 0 && (RowsAtCompileTime == Dynamic || RowsAtCompileTime == nbRows)
        .                    && nbCols >= 0 && (ColsAtCompileTime == Dynamic || ColsAtCompileTime == nbCols)));
  543,280        checkSanity();

    1,375  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  271,626      }
        .  
        .      #ifdef EIGEN_MAPBASE_PLUGIN
        .      #include EIGEN_MAPBASE_PLUGIN
        .      #endif
        .  
        .    protected:
        .  
  407,454      void checkSanity() const
        .      {
        .        EIGEN_STATIC_ASSERT(EIGEN_IMPLIES(internal::traits<Derived>::Flags&PacketAccessBit,
        .                                          internal::inner_stride_at_compile_time<Derived>::ret==1),
        .                            PACKET_ACCESS_REQUIRES_TO_HAVE_INNER_STRIDE_FIXED_TO_1);
        .        eigen_assert(EIGEN_IMPLIES(internal::traits<Derived>::Flags&AlignedBit, (size_t(m_data) % 16) == 0)
        .                     && "input pointer is not aligned on a 16 byte boundary");
  271,636      }
        .  
        .      PointerType m_data;
        .      const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;
        .      const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;
        .  };
        .  
   85,024  template<typename Derived> class MapBase<Derived, WriteAccessors>
    1,280  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .    : public MapBase<Derived, ReadOnlyAccessors>
        .  {
        .      typedef MapBase<Derived, ReadOnlyAccessors> ReadOnlyMapBase;
        .    public:
        .  
        .      typedef MapBase<Derived, ReadOnlyAccessors> Base;
        .  
        .      typedef typename Base::Scalar Scalar;
-- line 180 ----------------------------------------
-- line 198 ----------------------------------------
        .                      internal::is_lvalue<Derived>::value,
        .                      Scalar,
        .                      const Scalar
        .                    >::type ScalarWithConstIfNotLvalue;
        .  
        .      inline const Scalar* data() const { return this->m_data; }
        .      inline ScalarWithConstIfNotLvalue* data() { return this->m_data; } // no const-cast here so non-const-correct code will give a compile error
        .  
2,017,952      inline ScalarWithConstIfNotLvalue& coeffRef(Index row, Index col)
        .      {
4,035,920        return this->m_data[col * colStride() + row * rowStride()];

    2,921  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

1,261,220      }
        .  
  258,726      inline ScalarWithConstIfNotLvalue& coeffRef(Index index)
        .      {
        .        EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS(Derived)
  388,097        return this->m_data[index * innerStride()];

  172,484      }
        .  
        .      template<int StoreMode>
        .      inline void writePacket(Index row, Index col, const PacketScalar& val)
        .      {
        .        internal::pstoret<Scalar, PacketScalar, StoreMode>
        .                 (this->m_data + (col * colStride() + row * rowStride()), val);
        .      }
        .  
        .      template<int StoreMode>
  266,301      inline void writePacket(Index index, const PacketScalar& val)
        .      {
        .        EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS(Derived)
  190,215        internal::pstoret<Scalar, PacketScalar, StoreMode>

  342,387                  (this->m_data + index * innerStride(), val);

  152,172      }
        .  
        .      explicit inline MapBase(PointerType dataPtr) : Base(dataPtr) {}
       79      inline MapBase(PointerType dataPtr, Index vecSize) : Base(dataPtr, vecSize) {}
    1,305  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

2,120,712      inline MapBase(PointerType dataPtr, Index nbRows, Index nbCols) : Base(dataPtr, nbRows, nbCols) {}
    1,311  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  
        .      Derived& operator=(const MapBase& other)
        .      {
        .        ReadOnlyMapBase::Base::operator=(other);
        .        return derived();
        .      }
        .  
        .      // In theory we could simply refer to Base:Base::operator=, but MSVC does not like Base::Base,
-- line 242 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 60 ----------------------------------------
         .  {
         .  _GLIBCXX_BEGIN_NAMESPACE_VERSION
         .  
         .    template<bool _TrivialValueTypes>
         .      struct __uninitialized_copy
         .      {
         .        template<typename _InputIterator, typename _ForwardIterator>
         .          static _ForwardIterator
 4,425,435          __uninit_copy(_InputIterator __first, _InputIterator __last,
         .  		      _ForwardIterator __result)
         .          {
 1,264,410  	  _ForwardIterator __cur = __result;
         .  	  __try
         .  	    {
10,382,455  	      for (; __first != __last; ++__first, ++__cur)


     2,084  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
 7,078,464  		std::_Construct(std::__addressof(*__cur), *__first);

     2,160  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

 1,264,410  	      return __cur;
         .  	    }
         .  	  __catch(...)
         .  	    {
         .  	      std::_Destroy(__result, __cur);
         .  	      __throw_exception_again;
         .  	    }
 2,528,820  	}
         .      };
         .  
         .    template<>
         .      struct __uninitialized_copy<true>
         .      {
         .        template<typename _InputIterator, typename _ForwardIterator>
         .          static _ForwardIterator
 6,364,620          __uninit_copy(_InputIterator __first, _InputIterator __last,
         .  		      _ForwardIterator __result)
 9,546,932          { return std::copy(__first, __last, __result); }

         .      };
         .  
         .    /**
         .     *  @brief Copies the range [first,last) into result.
         .     *  @param  __first  An input iterator.
         .     *  @param  __last   An input iterator.
         .     *  @param  __result An output iterator.
         .     *  @return   __result + (__first - __last)
         .     *
         .     *  Like copy(), but does not require an initialized output range.
         .    */
         .    template<typename _InputIterator, typename _ForwardIterator>
         .      inline _ForwardIterator
10,157,850      uninitialized_copy(_InputIterator __first, _InputIterator __last,
         .  		       _ForwardIterator __result)
         .      {
         .        typedef typename iterator_traits<_InputIterator>::value_type
         .  	_ValueType1;
         .        typedef typename iterator_traits<_ForwardIterator>::value_type
         .  	_ValueType2;
         .  
         .        return std::__uninitialized_copy<(__is_trivial(_ValueType1)
         .  					&& __is_trivial(_ValueType2))>::
11,850,867  	__uninit_copy(__first, __last, __result);

 3,385,950      }
         .  
         .  
         .    template<bool _TrivialValueType>
         .      struct __uninitialized_fill
         .      {
         .        template<typename _ForwardIterator, typename _Tp>
         .          static void
         .          __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
-- line 126 ----------------------------------------
-- line 194 ----------------------------------------
         .  	}
         .      };
         .  
         .    template<>
         .      struct __uninitialized_fill_n<true>
         .      {
         .        template<typename _ForwardIterator, typename _Size, typename _Tp>
         .          static void
    44,352          __uninit_fill_n(_ForwardIterator __first, _Size __n,
         .  			const _Tp& __x)
    66,536          { std::fill_n(__first, __n, __x); }
       745  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .      };
         .  
         .    /**
         .     *  @brief Copies the value x into the range [first,first+n).
         .     *  @param  __first  An input iterator.
         .     *  @param  __n      The number of copies to make.
         .     *  @param  __x      The source value.
         .     *  @return   Nothing.
         .     *
         .     *  Like fill_n(), but does not require an initialized output range.
         .    */
         .    template<typename _ForwardIterator, typename _Size, typename _Tp>
         .      inline void
    44,352      uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
         .      {
         .        typedef typename iterator_traits<_ForwardIterator>::value_type
         .  	_ValueType;
         .  
    51,752        std::__uninitialized_fill_n<__is_trivial(_ValueType)>::

     1,065  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  	__uninit_fill_n(__first, __n, __x);
    14,784      }
         .  
         .    // Extensions: versions of uninitialized_copy, uninitialized_fill,
         .    //  and uninitialized_fill_n that take an allocator parameter.
         .    //  We dispatch back to the standard versions when we're given the
         .    //  default allocator.  For nondefault allocators we do not use 
         .    //  any of the POD optimizations.
         .  
         .    template<typename _InputIterator, typename _ForwardIterator,
         .  	   typename _Allocator>
         .      _ForwardIterator
     1,376      __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
         .  			   _ForwardIterator __result, _Allocator& __alloc)
         .      {
       344        _ForwardIterator __cur = __result;
         .        __try
         .  	{
         .  	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
   471,698  	  for (; __first != __last; ++__first, ++__cur)
   978,890  	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);


       344  	  return __cur;
         .  	}
         .        __catch(...)
         .  	{
         .  	  std::_Destroy(__result, __cur, __alloc);
         .  	  __throw_exception_again;
         .  	}
       688      }
         .  
         .    template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
         .      inline _ForwardIterator
11,850,825      __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
         .  			   _ForwardIterator __result, allocator<_Tp>&)
15,236,817      { return std::uninitialized_copy(__first, __last, __result); }

         .  
         .    template<typename _InputIterator, typename _ForwardIterator,
         .  	   typename _Allocator>
         .      inline _ForwardIterator
         .      __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
         .  			   _ForwardIterator __result, _Allocator& __alloc)
         .      {
         .        return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
         .  					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
         .  					 __result, __alloc);
         .      }
         .  
         .    template<typename _InputIterator, typename _ForwardIterator,
         .  	   typename _Allocator>
         .      inline _ForwardIterator
 9,239,860      __uninitialized_move_if_noexcept_a(_InputIterator __first,
         .  				       _InputIterator __last,
         .  				       _ForwardIterator __result,
         .  				       _Allocator& __alloc)
         .      {
         .        return std::__uninitialized_copy_a
         .  	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 9,239,782  	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);

 2,639,960      }
         .  
         .    template<typename _ForwardIterator, typename _Tp, typename _Allocator>
         .      void
         .      __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
         .  			   const _Tp& __x, _Allocator& __alloc)
         .      {
         .        _ForwardIterator __cur = __first;
         .        __try
-- line 290 ----------------------------------------
-- line 304 ----------------------------------------
         .      inline void
         .      __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
         .  			   const _Tp& __x, allocator<_Tp2>&)
         .      { std::uninitialized_fill(__first, __last, __x); }
         .  
         .    template<typename _ForwardIterator, typename _Size, typename _Tp,
         .  	   typename _Allocator>
         .      void
         8      __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
         .  			     const _Tp& __x, _Allocator& __alloc)
         .      {
         2        _ForwardIterator __cur = __first;
         .        __try
         .  	{
         .  	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
    30,236  	  for (; __n > 0; --__n, ++__cur)
    68,022  	    __traits::construct(__alloc, std::__addressof(*__cur), __x);


         .  	}
         .        __catch(...)
         .  	{
         .  	  std::_Destroy(__first, __cur, __alloc);
         .  	  __throw_exception_again;
         .  	}
         4      }
         .  
         .    template<typename _ForwardIterator, typename _Size, typename _Tp,
         .  	   typename _Tp2>
         .      inline void
    51,744      __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
         .  			     const _Tp& __x, allocator<_Tp2>&)
    66,536      { std::uninitialized_fill_n(__first, __n, __x); }

       857  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
         .  
         .    // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
         .    // __uninitialized_fill_move, __uninitialized_move_fill.
         .    // All of these algorithms take a user-supplied allocator, which is used
         .    // for construction and destruction.
         .  
         .    // __uninitialized_copy_move
-- line 342 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 39 ----------------------------------------
        .  
        .    // Used, in C++03 mode too, by allocators, etc.
        .    /**
        .     *  @brief Same as C++11 std::addressof
        .     *  @ingroup utilities
        .     */
        .    template<typename _Tp>
        .      inline _Tp*
3,509,514      __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
        .      {
        .        return reinterpret_cast<_Tp*>
1,169,838  	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
2,339,676      }
        .  
        .  _GLIBCXX_END_NAMESPACE_VERSION
        .  } // namespace
        .  
        .  #if __cplusplus >= 201103L
        .  #include <type_traits> // Brings in std::declval too.
        .  
        .  namespace std _GLIBCXX_VISIBILITY(default)
-- line 59 ----------------------------------------
-- line 158 ----------------------------------------
        .    /**
        .     *  @brief Swaps two values.
        .     *  @param  __a  A thing of arbitrary type.
        .     *  @param  __b  Another thing of arbitrary type.
        .     *  @return   Nothing.
        .    */
        .    template<typename _Tp>
        .      inline void
   12,224      swap(_Tp& __a, _Tp& __b)
        .  #if __cplusplus >= 201103L
        .      noexcept(__and_<is_nothrow_move_constructible<_Tp>,
        .  	            is_nothrow_move_assignable<_Tp>>::value)
        .  #endif
        .      {
        .        // concept requirements
        .        __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        .  
    9,168        _Tp __tmp = _GLIBCXX_MOVE(__a);
   12,224        __a = _GLIBCXX_MOVE(__b);
    9,168        __b = _GLIBCXX_MOVE(__tmp);
    6,112      }
        .  
        .    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        .    // DR 809. std::swap should be overloaded for array types.
        .    /// Swap the contents of two arrays.
        .    template<typename _Tp, size_t _Nm>
        .      inline void
        .      swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
        .  #if __cplusplus >= 201103L
-- line 186 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 10 ----------------------------------------
        .  #ifndef EIGEN_CONSERVATIVESPARSESPARSEPRODUCT_H
        .  #define EIGEN_CONSERVATIVESPARSESPARSEPRODUCT_H
        .  
        .  namespace Eigen { 
        .  
        .  namespace internal {
        .  
        .  template<typename Lhs, typename Rhs, typename ResultType>
        7  static void conservative_sparse_sparse_product_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res)
        .  {
        .    typedef typename remove_all<Lhs>::type::Scalar Scalar;
        .    typedef typename remove_all<Lhs>::type::Index Index;
        .  
        .    // make sure to call innerSize/outerSize since we fake the storage order.
        9    Index rows = lhs.innerSize();

      873  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        5    Index cols = rhs.outerSize();

       11    eigen_assert(lhs.outerSize() == rhs.innerSize());


        .  
       29    std::vector<bool> mask(rows,false);


    1,971  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)

       19    Matrix<Scalar,Dynamic,1> values(rows);
    2,312  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


       11    Matrix<Index,Dynamic,1>  indices(rows);


        .  
        .    // estimate the number of non zero entries
        .    // given a rhs column containing Y non zeros, we assume that the respective Y columns
        .    // of the lhs differs in average of one non zeros, thus the number of non zeros for
        .    // the product of a rhs column with the lhs is X+Y where X is the average number of non zero
        .    // per column of the lhs.
        .    // Therefore, we have nnz(lhs*rhs) = nnz(lhs) + nnz(rhs)
       15    Index estimated_nnz_prod = lhs.nonZeros() + rhs.nonZeros();

      876  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  
        8    res.setZero();

      868  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       10    res.reserve(Index(estimated_nnz_prod));

      833  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .    // we compute each column of the result, one after the other
   93,445    for (Index j=0; j<cols; ++j)
        .    {
        .  
  140,164      res.startVec(j);
      841  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   23,360      Index nnz = 0;
2,089,064      for (typename Rhs::InnerIterator rhsIt(rhs, j); rhsIt; ++rhsIt)
      972  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)        .      {
1,057,212        Scalar y = rhsIt.value();

  881,010        Index k = rhsIt.index();

7,752,888        for (typename Lhs::InnerIterator lhsIt(lhs, k); lhsIt; ++lhsIt)        .        {
2,643,030          Index i = lhsIt.index();

3,171,636          Scalar x = lhsIt.value();

8,457,704          if(!mask[i])


    1,434  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        .          {
3,707,120            mask[i] = true;
      713  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


2,647,944            values[i] = x * y;

    1,553  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
2,383,146            indices[nnz] = i;

  529,588            ++nnz;
        .          }
        .          else
3,165,744            values[i] += x * y;

        .        }
        .      }
        .  
        .      // unordered insertion
1,175,976      for(Index k=0; k<nnz; ++k)
        .      {
2,383,146        Index i = indices[k];

4,501,502        res.insertBackByOuterInnerUnordered(j,i) = values[i];


    1,049  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
3,707,116        mask[i] = false;


        .      }
        .  
        .  #if 0
        .      // alternative ordered insertion code:
        .  
        .      Index t200 = rows/(log2(200)*1.39);
        .      Index t = (rows*100)/139;
        .  
-- line 81 ----------------------------------------
-- line 107 ----------------------------------------
        .            mask[i] = false;
        .            res.insertBackByOuterInner(j,i) = values[i];
        .          }
        .        }
        .      }
        .  #endif
        .  
        .    }
       17    res.finalize();
    1,546  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


        4  }
        .  
        .  
        .  } // end namespace internal
        .  
        .  namespace internal {
        .  
        .  template<typename Lhs, typename Rhs, typename ResultType,
        .    int LhsStorageOrder = (traits<Lhs>::Flags&RowMajorBit) ? RowMajor : ColMajor,
-- line 124 ----------------------------------------
-- line 127 ----------------------------------------
        .  struct conservative_sparse_sparse_product_selector;
        .  
        .  template<typename Lhs, typename Rhs, typename ResultType>
        .  struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,ColMajor>
        .  {
        .    typedef typename remove_all<Lhs>::type LhsCleaned;
        .    typedef typename LhsCleaned::Scalar Scalar;
        .  
        7    static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res)
        .    {
        .      typedef SparseMatrix<typename ResultType::Scalar,RowMajor,typename ResultType::Index> RowMajorMatrix;
        .      typedef SparseMatrix<typename ResultType::Scalar,ColMajor,typename ResultType::Index> ColMajorMatrix;
       16      ColMajorMatrix resCol(lhs.rows(),rhs.cols());        6      internal::conservative_sparse_sparse_product_impl<Lhs,Rhs,ColMajorMatrix>(lhs, rhs, resCol);

        .      // sort the non zeros:
       14      RowMajorMatrix resRow(resCol);


    1,121  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       11      res = resRow;


        4    }
        .  };
        .  
        .  template<typename Lhs, typename Rhs, typename ResultType>
        .  struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,ColMajor>
        .  {
        .    static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res)
        .    {
        .       typedef SparseMatrix<typename ResultType::Scalar,RowMajor,typename ResultType::Index> RowMajorMatrix;
-- line 152 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 27 ----------------------------------------
         .      typedef _Index Index;
         .  
         .    protected:
         .  
         .      typedef typename NumTraits<Scalar>::Real RealScalar;
         .  
         .    public:
         .  
        45      CompressedStorage()
       120        : m_values(0), m_indices(0), m_size(0), m_allocatedSize(0)
        30      {}
         .  
         .      CompressedStorage(size_t size)
         .        : m_values(0), m_indices(0), m_size(0), m_allocatedSize(0)
         .      {
         .        resize(size);
         .      }
         .  
         .      CompressedStorage(const CompressedStorage& other)
-- line 45 ----------------------------------------
-- line 51 ----------------------------------------
         .      CompressedStorage& operator=(const CompressedStorage& other)
         .      {
         .        resize(other.size());
         .        internal::smart_copy(other.m_values,  other.m_values  + m_size, m_values);
         .        internal::smart_copy(other.m_indices, other.m_indices + m_size, m_indices);
         .        return *this;
         .      }
         .  
        35      void swap(CompressedStorage& other)
         .      {
        46        std::swap(m_values, other.m_values);

       665  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        56        std::swap(m_indices, other.m_indices);

        60        std::swap(m_size, other.m_size);
       673  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        56        std::swap(m_allocatedSize, other.m_allocatedSize);

        14      }
         .  
        60      ~CompressedStorage()
         .      {
       114        delete[] m_values;
     1,426  => ???:operator delete[](void*) (10x)
     2,120  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       110        delete[] m_indices;
     1,474  => ???:operator delete[](void*) (10x)
        30      }
         .  
        20      void reserve(size_t size)
         .      {
        20        size_t newAllocatedSize = m_size + size;
        16        if (newAllocatedSize > m_allocatedSize)
        28          reallocate(newAllocatedSize);
       945  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         8      }
         .  
         .      void squeeze()
         .      {
         .        if (m_allocatedSize>m_size)
         .          reallocate(m_size);
         .      }
         .  
 3,317,748      void resize(size_t size, double reserveSizeFactor = 0)
         .      {
 2,211,832        if (m_allocatedSize<size)
       374          reallocate(size + size_t(reserveSizeFactor*double(size)));

 1,658,874        m_size = size;
 1,105,916      }
         .  
 3,177,528      void append(const Scalar& v, Index i)
         .      {
 1,588,764        Index id = static_cast<Index>(m_size);
 4,766,292        resize(m_size+1, 1);

 4,766,292        m_values[id] = v;
 4,236,704        m_indices[id] = i;
 1,059,176      }
         .  
 4,034,205      inline size_t size() const { return m_size; }
         .      inline size_t allocatedSize() const { return m_allocatedSize; }
        91      inline void clear() { m_size = 0; }
         .  
31,108,088      inline Scalar& value(size_t i) { return m_values[i]; }
 7,341,730      inline const Scalar& value(size_t i) const { return m_values[i]; }
         .  
30,133,565      inline Index& index(size_t i) { return m_indices[i]; }
 7,341,730      inline const Index& index(size_t i) const { return m_indices[i]; }
         .  
         .      static CompressedStorage Map(Index* indices, Scalar* values, size_t size)
         .      {
         .        CompressedStorage res;
         .        res.m_indices = indices;
         .        res.m_values = values;
         .        res.m_allocatedSize = res.m_size = size;
         .        return res;
-- line 117 ----------------------------------------
-- line 119 ----------------------------------------
         .  
         .      /** \returns the largest \c k such that for all \c j in [0,k) index[\c j]\<\a key */
         .      inline Index searchLowerIndex(Index key) const
         .      {
         .        return searchLowerIndex(0, m_size, key);
         .      }
         .  
         .      /** \returns the largest \c k in [start,end) such that for all \c j in [start,k) index[\c j]\<\a key */
   267,576      inline Index searchLowerIndex(size_t start, size_t end, Index key) const
         .      {
   578,176        while(end>start)
         .        {
   666,320          size_t mid = (end+start)>>1;
 1,066,112          if (m_indices[mid]<key)
   314,776            start = mid+1;
         .          else
   109,140            end = mid;
         .        }
    44,596        return static_cast<Index>(start);
    89,192      }
         .  
         .      /** \returns the stored value at index \a key
         .        * If the value does not exist, then the value \a defaultValue is returned without any insertion. */
         .      inline Scalar at(Index key, const Scalar& defaultValue = Scalar(0)) const
         .      {
         .        if (m_size==0)
         .          return defaultValue;
         .        else if (key==m_indices[m_size-1])
-- line 146 ----------------------------------------
-- line 147 ----------------------------------------
         .          return m_values[m_size-1];
         .        // ^^  optimization: let's first check if it is the last coefficient
         .        // (very common in high level algorithms)
         .        const size_t id = searchLowerIndex(0,m_size-1,key);
         .        return ((id<m_size) && (m_indices[id]==key)) ? m_values[id] : defaultValue;
         .      }
         .  
         .      /** Like at(), but the search is performed in the range [start,end) */
   373,760      inline Scalar atInRange(size_t start, size_t end, Index key, const Scalar& defaultValue = Scalar(0)) const
         .      {
   140,160        if (start>=end)
         .          return Scalar(0);
   560,640        else if (end>start && key==m_indices[end-1])
    16,992          return m_values[end-1];
         .        // ^^  optimization: let's first check if it is the last coefficient
         .        // (very common in high level algorithms)
   535,156        const size_t id = searchLowerIndex(start,end-1,key);

     1,017  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   802,728        return ((id<end) && (m_indices[id]==key)) ? m_values[id] : defaultValue;
   186,880      }
         .  
         .      /** \returns a reference to the value at index \a key
         .        * If the value does not exist, then the value \a defaultValue is inserted
         .        * such that the keys are sorted. */
         .      inline Scalar& atWithInsertion(Index key, const Scalar& defaultValue = Scalar(0))
         .      {
         .        size_t id = searchLowerIndex(0,m_size,key);
         .        if (id>=m_size || m_indices[id]!=key)
-- line 173 ----------------------------------------
-- line 197 ----------------------------------------
         .            ++k;
         .          }
         .        }
         .        resize(k,0);
         .      }
         .  
         .    protected:
         .  
       130      inline void reallocate(size_t size)
         .      {
       264        Scalar* newValues  = new Scalar[size];
     2,129  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     9,784  => ???:operator new[](unsigned long) (26x)
       260        Index* newIndices = new Index[size];
     8,890  => ???:operator new[](unsigned long) (26x)
       238        size_t copySize = (std::min)(size, m_size);

       705  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .        // copy
       316        internal::smart_copy(m_values, m_values+copySize, newValues);

       881  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       316        internal::smart_copy(m_indices, m_indices+copySize, newIndices);

       873  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .        // delete old stuff
       184        delete[] m_values;
     2,101  => ???:operator delete[](void*) (16x)
       184        delete[] m_indices;
     2,130  => ???:operator delete[](void*) (16x)
        78        m_values = newValues;
        78        m_indices = newIndices;
        78        m_allocatedSize = size;
        52      }
         .  
         .    protected:
         .      Scalar* m_values;
         .      Index* m_indices;
         .      size_t m_size;
         .      size_t m_allocatedSize;
         .  
         .  };
-- line 227 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 99 ----------------------------------------
        .                          ? int(internal::scalar_product_traits<LHS, RHS>::Defined) \
        .                          : int(internal::is_same<LHS, RHS>::value)), \
        .      YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY)
        .  
        .  template<typename BinaryOp, typename Lhs, typename Rhs, typename StorageKind>
        .  class CwiseBinaryOpImpl;
        .  
        .  template<typename BinaryOp, typename Lhs, typename Rhs>
1,680,426  class CwiseBinaryOp : internal::no_assignment_operator,

        .    public CwiseBinaryOpImpl<
        .            BinaryOp, Lhs, Rhs,
        .            typename internal::promote_storage_type<typename internal::traits<Lhs>::StorageKind,
        .                                             typename internal::traits<Rhs>::StorageKind>::ret>
        .  {
        .    public:
        .  
        .      typedef typename CwiseBinaryOpImpl<
-- line 115 ----------------------------------------
-- line 118 ----------------------------------------
        .                                           typename internal::traits<Rhs>::StorageKind>::ret>::Base Base;
        .      EIGEN_GENERIC_PUBLIC_INTERFACE(CwiseBinaryOp)
        .  
        .      typedef typename internal::nested<Lhs>::type LhsNested;
        .      typedef typename internal::nested<Rhs>::type RhsNested;
        .      typedef typename internal::remove_reference<LhsNested>::type _LhsNested;
        .      typedef typename internal::remove_reference<RhsNested>::type _RhsNested;
        .  
1,169,008      EIGEN_STRONG_INLINE CwiseBinaryOp(const Lhs& aLhs, const Rhs& aRhs, const BinaryOp& func = BinaryOp())
3,360,940        : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)


    4,840  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)


        .      {
        .        EIGEN_CHECK_BINARY_COMPATIBILIY(BinaryOp,typename Lhs::Scalar,typename Rhs::Scalar);
        .        // require the sizes to match
        .        EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE(Lhs, Rhs)
3,214,780        eigen_assert(aLhs.rows() == aRhs.rows() && aLhs.cols() == aRhs.cols());
    2,302  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
  584,504      }
        .  
1,169,012      EIGEN_STRONG_INLINE Index rows() const {
        .        // return the fixed size type if available to enable compile time optimizations
        .        if (internal::traits<typename internal::remove_all<LhsNested>::type>::RowsAtCompileTime==Dynamic)
        5          return m_rhs.rows();

        .        else
1,461,260          return m_lhs.rows();

  584,506      }
1,169,020      EIGEN_STRONG_INLINE Index cols() const {
        .        // return the fixed size type if available to enable compile time optimizations
        .        if (internal::traits<typename internal::remove_all<LhsNested>::type>::ColsAtCompileTime==Dynamic)
       15          return m_rhs.cols();

        .        else
1,461,260          return m_lhs.cols();

  584,510      }
        .  
        .      /** \returns the left hand side nested expression */
1,186,395      const _LhsNested& lhs() const { return m_lhs; }
        .      /** \returns the right hand side nested expression */
1,186,395      const _RhsNested& rhs() const { return m_rhs; }
        .      /** \returns the functor representing the binary operation */
1,186,395      const BinaryOp& functor() const { return m_functor; }
        .  
        .    protected:
        .      LhsNested m_lhs;
        .      RhsNested m_rhs;
        .      const BinaryOp m_functor;
        .  };
        .  
        .  template<typename BinaryOp, typename Lhs, typename Rhs>
1,461,262  class CwiseBinaryOpImpl<BinaryOp, Lhs, Rhs, Dense>

    2,429  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .    : public internal::dense_xpr_base<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::type
        .  {
        .      typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> Derived;
        .    public:
        .  
        .      typedef typename internal::dense_xpr_base<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::type Base;
        .      EIGEN_DENSE_PUBLIC_INTERFACE( Derived )
        .  
        .      EIGEN_STRONG_INLINE const Scalar coeff(Index rowId, Index colId) const
        .      {
        .        return derived().functor()(derived().lhs().coeff(rowId, colId),
        .                                   derived().rhs().coeff(rowId, colId));
        .      }
        .  
        .      template<int LoadMode>
  876,750      EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const
        .      {
1,169,000        return derived().functor().packetOp(derived().lhs().template packet<LoadMode>(rowId, colId),

4,822,185                                            derived().rhs().template packet<LoadMode>(rowId, colId));


    9,904  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (6x)

  292,250      }
        .  
        .      EIGEN_STRONG_INLINE const Scalar coeff(Index index) const
        .      {
        .        return derived().functor()(derived().lhs().coeff(index),
        .                                   derived().rhs().coeff(index));
        .      }
        .  
        .      template<int LoadMode>
-- line 192 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 44 ----------------------------------------
         .  
         .  /** \internal If the template parameter Value is Dynamic, this class is just a wrapper around a T variable that
         .    * can be accessed using value() and setValue().
         .    * Otherwise, this class is an empty structure and value() just returns the template parameter Value.
         .    */
         .  template<typename T, int Value> class variable_if_dynamic
         .  {
         .    public:
   384,300      EIGEN_EMPTY_STRUCT_CTOR(variable_if_dynamic)
   786,430      explicit variable_if_dynamic(T v) { EIGEN_ONLY_USED_FOR_DEBUG(v); assert(v == T(Value)); }
   616,445      static T value() { return T(Value); }
         .      void setValue(T) {}
         .  };
         .  
         .  template<typename T> class variable_if_dynamic<T, Dynamic>
         .  {
         .      T m_value;
         .      variable_if_dynamic() { assert(false); }
         .    public:
 2,436,669      explicit variable_if_dynamic(T value) : m_value(value) {}
 4,399,269      T value() const { return m_value; }
         .      void setValue(T value) { m_value = value; }
         .  };
         .  
         .  /** \internal like variable_if_dynamic but for DynamicIndex
         .    */
         .  template<typename T, int Value> class variable_if_dynamicindex
         .  {
         .    public:
-- line 72 ----------------------------------------
-- line 336 ----------------------------------------
         .          int(CostEvalAsInteger) < int(CostNoEvalAsInteger)
         .        ),
         .        PlainObject,
         .        typename ref_selector<T>::type
         .    >::type type;
         .  };
         .  
         .  template<typename T>
   276,678  inline T* const_cast_ptr(const T* ptr)
         .  {
    92,226    return const_cast<T*>(ptr);
   184,452  }
         .  
         .  template<typename Derived, typename XprKind = typename traits<Derived>::XprKind>
         .  struct dense_xpr_base
         .  {
         .    /* dense_xpr_base should only ever be used on dense expressions, thus falling either into the MatrixXpr or into the ArrayXpr cases */
         .  };
         .  
         .  template<typename Derived>
-- line 355 ----------------------------------------
-- line 363 ----------------------------------------
         .  {
         .    typedef ArrayBase<Derived> type;
         .  };
         .  
         .  /** \internal Helper base class to add a scalar multiple operator
         .    * overloads for complex types */
         .  template<typename Derived, typename Scalar, typename OtherScalar, typename BaseType,
         .           bool EnableIt = !is_same<Scalar,OtherScalar>::value >
10,260,684  struct special_scalar_op_base : public BaseType

     1,050  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  {
         .    // dummy operator* so that the
         .    // "using special_scalar_op_base::operator*" compiles
         .    void operator*() const;
         .  };
         .  
         .  template<typename Derived,typename Scalar,typename OtherScalar, typename BaseType>
         .  struct special_scalar_op_base<Derived,Scalar,OtherScalar,BaseType,true>  : public BaseType
-- line 379 ------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 24 ----------------------------------------
        .                  && ((int(T::RowsAtCompileTime) == 1 && int(U::ColsAtCompileTime) == 1)
        .                        |  // FIXME | instead of || to please GCC 4.4.0 stupid warning "suggest parentheses around &&".
        .                           // revert to || as soon as not needed anymore.
        .                      (int(T::ColsAtCompileTime) == 1 && int(U::RowsAtCompileTime) == 1))
        .  >
        .  struct dot_nocheck
        .  {
        .    typedef typename scalar_product_traits<typename traits<T>::Scalar,typename traits<U>::Scalar>::ReturnType ResScalar;
  365,310    static inline ResScalar run(const MatrixBase<T>& a, const MatrixBase<U>& b)
        .    {
1,095,942      return a.template binaryExpr<scalar_conj_product_op<typename traits<T>::Scalar,typename traits<U>::Scalar> >(b).sum();
    5,253  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)  146,124    }
        .  };
        .  
        .  template<typename T, typename U>
        .  struct dot_nocheck<T, U, true>
        .  {
        .    typedef typename scalar_product_traits<typename traits<T>::Scalar,typename traits<U>::Scalar>::ReturnType ResScalar;
        .    static inline ResScalar run(const MatrixBase<T>& a, const MatrixBase<U>& b)
        .    {
-- line 43 ----------------------------------------
-- line 55 ----------------------------------------
        .    * (sesquilinear) dot product, conjugate-linear in the first variable and linear in the
        .    * second variable.
        .    *
        .    * \sa squaredNorm(), norm()
        .    */
        .  template<typename Derived>
        .  template<typename OtherDerived>
        .  typename internal::scalar_product_traits<typename internal::traits<Derived>::Scalar,typename internal::traits<OtherDerived>::Scalar>::ReturnType
  438,372  MatrixBase<Derived>::dot(const MatrixBase<OtherDerived>& other) const
        .  {
        .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
        .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(OtherDerived)
        .    EIGEN_STATIC_ASSERT_SAME_VECTOR_SIZE(Derived,OtherDerived)
        .    typedef internal::scalar_conj_product_op<Scalar,typename OtherDerived::Scalar> func;
        .    EIGEN_CHECK_BINARY_COMPATIBILIY(func,Scalar,typename OtherDerived::Scalar);
        .  
  803,686    eigen_assert(size() == other.size());

    1,626  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  
  438,376    return internal::dot_nocheck<Derived,OtherDerived>::run(*this, other);

    1,959  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  292,248  }
        .  
        .  #ifdef EIGEN2_SUPPORT
        .  /** \returns the dot product of *this with other, with the Eigen2 convention that the dot product is linear in the first variable
        .    * (conjugating the second variable). Of course this only makes a difference in the complex case.
        .    *
        .    * This method is only available in EIGEN2_SUPPORT mode.
        .    *
        .    * \only_for_vectors
-- line 82 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 67 ----------------------------------------
         .    typedef unsigned long _Bit_type;
         .    enum { _S_word_bit = int(__CHAR_BIT__ * sizeof(_Bit_type)) };
         .  
         .    struct _Bit_reference
         .    {
         .      _Bit_type * _M_p;
         .      _Bit_type _M_mask;
         .  
 5,290,970      _Bit_reference(_Bit_type * __x, _Bit_type __y)
 8,465,552      : _M_p(__x), _M_mask(__y) { }
         .  
         .      _Bit_reference() _GLIBCXX_NOEXCEPT : _M_p(0), _M_mask(0) { }
         .  
 1,585,818      operator bool() const _GLIBCXX_NOEXCEPT
 5,286,060      { return !!(*_M_p & _M_mask); }
         .  
         .      _Bit_reference&
 2,647,940      operator=(bool __x) _GLIBCXX_NOEXCEPT
         .      {
 1,059,176        if (__x)
 2,647,940  	*_M_p |= _M_mask;
         .        else
 2,647,940  	*_M_p &= ~_M_mask;
   529,588        return *this;
 1,059,176      }
         .  
         .      _Bit_reference&
         .      operator=(const _Bit_reference& __x) _GLIBCXX_NOEXCEPT
         .      { return *this = bool(__x); }
         .  
         .      bool
         .      operator==(const _Bit_reference& __x) const
         .      { return bool(*this) == bool(__x); }
-- line 99 ----------------------------------------
-- line 134 ----------------------------------------
         .  #endif
         .  
         .    struct _Bit_iterator_base
         .    : public std::iterator<std::random_access_iterator_tag, bool>
         .    {
         .      _Bit_type * _M_p;
         .      unsigned int _M_offset;
         .  
 6,349,182      _Bit_iterator_base(_Bit_type * __x, unsigned int __y)
12,698,368      : _M_p(__x), _M_offset(__y) { }

       953  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
         .      void
         .      _M_bump_up()
         .      {
         .        if (_M_offset++ == int(_S_word_bit) - 1)
         .  	{
         .  	  _M_offset = 0;
         .  	  ++_M_p;
-- line 151 ----------------------------------------
-- line 158 ----------------------------------------
         .        if (_M_offset-- == 0)
         .  	{
         .  	  _M_offset = int(_S_word_bit) - 1;
         .  	  --_M_p;
         .  	}
         .      }
         .  
         .      void
         4      _M_incr(ptrdiff_t __i)
         .      {
         6        difference_type __n = __i + _M_offset;
        11        _M_p += __n / int(_S_word_bit);
         7        __n = __n % int(_S_word_bit);
         2        if (__n < 0)
         .  	{
         .  	  __n += int(_S_word_bit);
         .  	  --_M_p;
         .  	}
         4        _M_offset = static_cast<unsigned int>(__n);
         2      }
         .  
         .      bool
         .      operator==(const _Bit_iterator_base& __i) const
         .      { return _M_p == __i._M_p && _M_offset == __i._M_offset; }
         .  
         .      bool
         .      operator<(const _Bit_iterator_base& __i) const
         .      {
-- line 185 ----------------------------------------
-- line 212 ----------------------------------------
         .    }
         .  
         .    struct _Bit_iterator : public _Bit_iterator_base
         .    {
         .      typedef _Bit_reference  reference;
         .      typedef _Bit_reference* pointer;
         .      typedef _Bit_iterator   iterator;
         .  
        28      _Bit_iterator() : _Bit_iterator_base(0, 0) { }

       761  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
 6,349,170      _Bit_iterator(_Bit_type * __x, unsigned int __y)
 9,523,755      : _Bit_iterator_base(__x, __y) { }

         .  
         .      reference
 4,232,776      operator*() const
16,931,108      { return reference(_M_p, 1UL << _M_offset); }
       756  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .  
         .      iterator&
         .      operator++()
         .      {
         .        _M_bump_up();
         .        return *this;
         .      }
         .  
-- line 235 ----------------------------------------
-- line 252 ----------------------------------------
         .      operator--(int)
         .      {
         .        iterator __tmp = *this;
         .        _M_bump_down();
         .        return __tmp;
         .      }
         .  
         .      iterator&
         5      operator+=(difference_type __i)
         .      {
        10        _M_incr(__i);
       809  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         1        return *this;
         2      }
         .  
         .      iterator&
         .      operator-=(difference_type __i)
         .      {
         .        *this += -__i;
         .        return *this;
         .      }
         .  
         .      iterator
         5      operator+(difference_type __i) const
         .      {
         5        iterator __tmp = *this;
        16        return __tmp += __i;
       697  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         2      }
         .  
         .      iterator
         .      operator-(difference_type __i) const
         .      {
         .        iterator __tmp = *this;
         .        return __tmp -= __i;
         .      }
         .  
-- line 286 ----------------------------------------
-- line 400 ----------------------------------------
         .    }
         .  
         .    template<typename _Alloc>
         .      struct _Bvector_base
         .      {
         .        typedef typename _Alloc::template rebind<_Bit_type>::other
         .          _Bit_alloc_type;
         .        
        14        struct _Bvector_impl
       617  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .        : public _Bit_alloc_type
         .        {
         .  	_Bit_iterator 	_M_start;
         .  	_Bit_iterator 	_M_finish;
         .  	_Bit_type* 	_M_end_of_storage;
         .  
         .  	_Bvector_impl()
         .  	: _Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage(0)
         .  	{ }
         .   
         5  	_Bvector_impl(const _Bit_alloc_type& __a)
        25  	: _Bit_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage(0)


     1,330  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
         2  	{ }
         .  
         .  #if __cplusplus >= 201103L
         .  	_Bvector_impl(_Bit_alloc_type&& __a)
         .  	: _Bit_alloc_type(std::move(__a)), _M_start(), _M_finish(),
         .  	  _M_end_of_storage(0)
         .  	{ }
         .  #endif
         .        };
-- line 429 ----------------------------------------
-- line 441 ----------------------------------------
         .  
         .        allocator_type
         .        get_allocator() const _GLIBCXX_NOEXCEPT
         .        { return allocator_type(_M_get_Bit_allocator()); }
         .  
         .        _Bvector_base()
         .        : _M_impl() { }
         .        
         6        _Bvector_base(const allocator_type& __a)
         .        : _M_impl(__a) { }
         .  
         .  #if __cplusplus >= 201103L
         .        _Bvector_base(_Bvector_base&& __x) noexcept
         .        : _M_impl(std::move(__x._M_get_Bit_allocator()))
         .        {
         .  	this->_M_impl._M_start = __x._M_impl._M_start;
         .  	this->_M_impl._M_finish = __x._M_impl._M_finish;
         .  	this->_M_impl._M_end_of_storage = __x._M_impl._M_end_of_storage;
         .  	__x._M_impl._M_start = _Bit_iterator();
         .  	__x._M_impl._M_finish = _Bit_iterator();
         .  	__x._M_impl._M_end_of_storage = 0;
         .        }
         .  #endif
         .  
         5        ~_Bvector_base()
         .        { this->_M_deallocate(); }
         .  
         .      protected:
         .        _Bvector_impl _M_impl;
         .  
         .        _Bit_type*
         5        _M_allocate(size_t __n)
        21        { return _M_impl.allocate(_S_nword(__n)); }


     1,682  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
         .  
         .        void
         4        _M_deallocate()
         .        {
         4  	if (_M_impl._M_start._M_p)
        20  	  _M_impl.deallocate(_M_impl._M_start._M_p,

       881  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  			     _M_impl._M_end_of_storage - _M_impl._M_start._M_p);
         2        }
         .  
         .        static size_t
         6        _S_nword(size_t __n)
        10        { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
         .      };
         .  
         .  _GLIBCXX_END_NAMESPACE_CONTAINER
         .  } // namespace std
         .  
         .  // Declare a partial specialization of vector<T, Alloc>.
         .  #include <bits/stl_vector.h>
         .  
-- line 493 ----------------------------------------
-- line 565 ----------------------------------------
         .      : _Base(__a)
         .      {
         .        _M_initialize(__n);
         .        std::fill(this->_M_impl._M_start._M_p, this->_M_impl._M_end_of_storage, 
         .  		__value ? ~0 : 0);
         .      }
         .  #else
         .      explicit
         8      vector(size_type __n, const bool& __value = bool(), 
         .  	   const allocator_type& __a = allocator_type())
        10      : _Base(__a)

       793  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .      {
        10        _M_initialize(__n);
       809  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         9        std::fill(this->_M_impl._M_start._M_p, this->_M_impl._M_end_of_storage, 

       721  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        10  		__value ? ~0 : 0);
         5      }
         .  #endif
         .  
         .      vector(const vector& __x)
         .      : _Base(__x._M_get_Bit_allocator())
         .      {
         .        _M_initialize(__x.size());
         .        _M_copy_aligned(__x.begin(), __x.end(), this->_M_impl._M_start);
         .      }
-- line 588 ----------------------------------------
-- line 613 ----------------------------------------
         .  	     const allocator_type& __a = allocator_type())
         .        : _Base(__a)
         .        {
         .  	typedef typename std::__is_integer<_InputIterator>::__type _Integral;
         .  	_M_initialize_dispatch(__first, __last, _Integral());
         .        }
         .  #endif
         .  
        14      ~vector() _GLIBCXX_NOEXCEPT { }

       769  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
         .      vector&
         .      operator=(const vector& __x)
         .      {
         .        if (&__x == this)
         .  	return *this;
         .        if (__x.size() > capacity())
         .  	{
-- line 629 ----------------------------------------
-- line 754 ----------------------------------------
         .      { return size_type(const_iterator(this->_M_impl._M_end_of_storage, 0)
         .  		       - begin()); }
         .  
         .      bool
         .      empty() const _GLIBCXX_NOEXCEPT
         .      { return begin() == end(); }
         .  
         .      reference
 5,290,970      operator[](size_type __n)
         .      {
         .        return *iterator(this->_M_impl._M_start._M_p
19,047,496  		       + __n / int(_S_word_bit), __n % int(_S_word_bit));


       713  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 2,116,388      }
         .  
         .      const_reference
         .      operator[](size_type __n) const
         .      {
         .        return *const_iterator(this->_M_impl._M_start._M_p
         .  			     + __n / int(_S_word_bit), __n % int(_S_word_bit));
         .      }
         .  
-- line 774 ----------------------------------------
-- line 949 ----------------------------------------
         .  		    iterator __result)
         .      {
         .        _Bit_type* __q = std::copy(__first._M_p, __last._M_p, __result._M_p);
         .        return std::copy(const_iterator(__last._M_p, 0), __last,
         .  		       iterator(__q, 0));
         .      }
         .  
         .      void
         5      _M_initialize(size_type __n)
         .      {
        11        _Bit_type* __q = this->_M_allocate(__n);
       876  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         9        this->_M_impl._M_end_of_storage = __q + _S_nword(__n);

        16        this->_M_impl._M_start = iterator(__q, 0);
       721  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        19        this->_M_impl._M_finish = this->_M_impl._M_start + difference_type(__n);

       705  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         2      }
         .  
         .      void
         .      _M_reallocate(size_type __n);
         .  
         .  #if __cplusplus >= 201103L
         .      bool
         .      _M_shrink_to_fit();
         .  #endif
-- line 971 ------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 57 ----------------------------------------
        .  #define _VECTOR_TCC 1
        .  
        .  namespace std _GLIBCXX_VISIBILITY(default)
        .  {
        .  _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
        .  
        .    template<typename _Tp, typename _Alloc>
        .      void
       10      vector<_Tp, _Alloc>::
        .      reserve(size_type __n)
        .      {
       20        if (__n > this->max_size())
      937  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  	__throw_length_error(__N("vector::reserve"));
       20        if (this->capacity() < __n)

      937  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  	{
       14  	  const size_type __old_size = size();
      897  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  	  pointer __tmp = _M_allocate_and_copy(__n,
        .  	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
       24  	    _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));

    1,172  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       12  	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,

      937  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       18  			_M_get_Tp_allocator());

       12  	  _M_deallocate(this->_M_impl._M_start,

    1,073  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  			this->_M_impl._M_end_of_storage
       30  			- this->_M_impl._M_start);
        6  	  this->_M_impl._M_start = __tmp;
       20  	  this->_M_impl._M_finish = __tmp + __old_size;
       20  	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
        .  	}
        4      }
        .  
        .  #if __cplusplus >= 201103L
        .    template<typename _Tp, typename _Alloc>
        .      template<typename... _Args>
        .        void
        .        vector<_Tp, _Alloc>::
        .        emplace_back(_Args&&... __args)
        .        {
-- line 93 ----------------------------------------
-- line 126 ----------------------------------------
        .  #endif
        .  	    _M_insert_aux(__position, __x);
        .  	}
        .        return iterator(this->_M_impl._M_start + __n);
        .      }
        .  
        .    template<typename _Tp, typename _Alloc>
        .      typename vector<_Tp, _Alloc>::iterator
       12      vector<_Tp, _Alloc>::
        .      erase(iterator __position)
        .      {
       36        if (__position + 1 != end())       14  	_GLIBCXX_MOVE3(__position + 1, end(), __position);       10        --this->_M_impl._M_finish;
       12        _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);

        2        return __position;
        8      }
        .  
        .    template<typename _Tp, typename _Alloc>
        .      typename vector<_Tp, _Alloc>::iterator
        .      vector<_Tp, _Alloc>::
        .      erase(iterator __first, iterator __last)
        .      {
        .        if (__first != __last)
        .  	{
-- line 150 ----------------------------------------
-- line 152 ----------------------------------------
        .  	    _GLIBCXX_MOVE3(__last, end(), __first);
        .  	  _M_erase_at_end(__first.base() + (end() - __last));
        .  	}
        .        return __first;
        .      }
        .  
        .    template<typename _Tp, typename _Alloc>
        .      vector<_Tp, _Alloc>&
    1,971      vector<_Tp, _Alloc>::
        .      operator=(const vector<_Tp, _Alloc>& __x)
        .      {
      657        if (&__x != this)
        .  	{
        .  #if __cplusplus >= 201103L
        .  	  if (_Alloc_traits::_S_propagate_on_copy_assign())
        .  	    {
        .  	      if (!_Alloc_traits::_S_always_equal()
        .  	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
        .  	        {
        .  		  // replacement allocator cannot free existing storage
-- line 171 ----------------------------------------
-- line 176 ----------------------------------------
        .  		  this->_M_impl._M_start = nullptr;
        .  		  this->_M_impl._M_finish = nullptr;
        .  		  this->_M_impl._M_end_of_storage = nullptr;
        .  		}
        .  	      std::__alloc_on_copy(_M_get_Tp_allocator(),
        .  				   __x._M_get_Tp_allocator());
        .  	    }
        .  #endif
    1,095  	  const size_type __xlen = __x.size();

    1,764  	  if (__xlen > capacity())
      769  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  	    {
        .  	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
    3,743  						   __x.end());    2,753  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
      876  	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,

    1,971  			    _M_get_Tp_allocator());

      876  	      _M_deallocate(this->_M_impl._M_start,

        .  			    this->_M_impl._M_end_of_storage
    3,273  			    - this->_M_impl._M_start);
      657  	      this->_M_impl._M_start = __tmp;
    2,397  	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
        .  	    }
        .  	  else if (size() >= __xlen)
        .  	    {
        .  	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
        .  			    end(), _M_get_Tp_allocator());
        .  	    }
        .  	  else
        .  	    {
        .  	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
        .  			this->_M_impl._M_start);
        .  	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
        .  					  __x._M_impl._M_finish,
        .  					  this->_M_impl._M_finish,
        .  					  _M_get_Tp_allocator());
        .  	    }
    2,178  	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
        .  	}
      219        return *this;
    1,533      }
        .  
        .    template<typename _Tp, typename _Alloc>
        .      void
        .      vector<_Tp, _Alloc>::
        .      _M_fill_assign(size_t __n, const value_type& __val)
        .      {
        .        if (__n > capacity())
        .  	{
-- line 222 ----------------------------------------
-- line 310 ----------------------------------------
        .    template<typename _Tp, typename _Alloc>
        .      template<typename... _Args>
        .        void
        .        vector<_Tp, _Alloc>::
        .        _M_insert_aux(iterator __position, _Args&&... __args)
        .  #else
        .    template<typename _Tp, typename _Alloc>
        .      void
5,279,912      vector<_Tp, _Alloc>::
        .      _M_insert_aux(iterator __position, const _Tp& __x)
        .  #endif
        .      {
3,959,934        if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
        .  	{
        .  	  _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
        .  			           _GLIBCXX_MOVE(*(this->_M_impl._M_finish
        .  				                   - 1)));
        .  	  ++this->_M_impl._M_finish;
        .  #if __cplusplus < 201103L
        .  	  _Tp __x_copy = __x;
        .  #endif
-- line 330 ----------------------------------------
-- line 335 ----------------------------------------
        .  	  *__position = __x_copy;
        .  #else
        .  	  *__position = _Tp(std::forward<_Args>(__args)...);
        .  #endif
        .  	}
        .        else
        .  	{
        .  	  const size_type __len =
4,619,960  	    _M_check_len(size_type(1), "vector::_M_insert_aux");
    1,790  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

7,919,942  	  const size_type __elems_before = __position - begin();


    4,194  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
4,619,956  	  pointer __new_start(this->_M_allocate(__len));

    1,804  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
1,319,978  	  pointer __new_finish(__new_start);
        .  	  __try
        .  	    {
        .  	      // The order of the three operations is dictated by the C++0x
        .  	      // case, where the moves could alter a new element belonging
        .  	      // to the existing vector.  This is an issue only for callers
        .  	      // taking the element by const lvalue ref (see 23.1/13).
3,299,978  	      _Alloc_traits::construct(this->_M_impl,
    2,119  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  		                       __new_start + __elems_before,
        .  #if __cplusplus >= 201103L
        .  				       std::forward<_Args>(__args)...);
        .  #else
3,817,524  	                               __x);
        .  #endif
  659,989  	      __new_finish = 0;
        .  
3,959,971  	      __new_finish

    2,179  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  		= std::__uninitialized_move_if_noexcept_a
        .  		(this->_M_impl._M_start, __position.base(),
7,919,902  		 __new_start, _M_get_Tp_allocator());
    4,067  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


        .  
  659,989  	      ++__new_finish;
        .  
4,619,920  	      __new_finish

        .  		= std::__uninitialized_move_if_noexcept_a
        .  		(__position.base(), this->_M_impl._M_finish,
7,919,862  		 __new_finish, _M_get_Tp_allocator());


        .  	    }
        .            __catch(...)
        .  	    {
        .  	      if (!__new_finish)
        .  		_Alloc_traits::destroy(this->_M_impl,
        .  		                       __new_start + __elems_before);
        .  	      else
        .  		std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
        .  	      _M_deallocate(__new_start, __len);
        .  	      __throw_exception_again;
        .  	    }
2,639,989  	  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    1,662  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

5,939,898  			_M_get_Tp_allocator());

2,639,989  	  _M_deallocate(this->_M_impl._M_start,

    1,910  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  			this->_M_impl._M_end_of_storage
8,307,801  			- this->_M_impl._M_start);
1,979,967  	  this->_M_impl._M_start = __new_start;
1,979,967  	  this->_M_impl._M_finish = __new_finish;
4,477,513  	  this->_M_impl._M_end_of_storage = __new_start + __len;
        .  	}
3,959,934      }
        .  
        .  #if __cplusplus >= 201103L
        .    template<typename _Tp, typename _Alloc>
        .      template<typename... _Args>
        .        void
        .        vector<_Tp, _Alloc>::
        .        _M_emplace_back_aux(_Args&&... __args)
        .        {
-- line 401 ----------------------------------------
-- line 433 ----------------------------------------
        .  	this->_M_impl._M_start = __new_start;
        .  	this->_M_impl._M_finish = __new_finish;
        .  	this->_M_impl._M_end_of_storage = __new_start + __len;
        .        }
        .  #endif
        .  
        .    template<typename _Tp, typename _Alloc>
        .      void
        9      vector<_Tp, _Alloc>::
        .      _M_fill_insert(iterator __position, size_type __n, const value_type& __x)
        .      {
        2        if (__n != 0)
        .  	{
       10  	  if (size_type(this->_M_impl._M_end_of_storage
        .  			- this->_M_impl._M_finish) >= __n)
        .  	    {
        .  	      value_type __x_copy = __x;
        .  	      const size_type __elems_after = end() - __position;
        .  	      pointer __old_finish(this->_M_impl._M_finish);
        .  	      if (__elems_after > __n)
        .  		{
        .  		  std::__uninitialized_move_a(this->_M_impl._M_finish - __n,
-- line 454 ----------------------------------------
-- line 473 ----------------------------------------
        .  					      _M_get_Tp_allocator());
        .  		  this->_M_impl._M_finish += __elems_after;
        .  		  std::fill(__position.base(), __old_finish, __x_copy);
        .  		}
        .  	    }
        .  	  else
        .  	    {
        .  	      const size_type __len =
        7  		_M_check_len(__n, "vector::_M_fill_insert");

       10  	      const size_type __elems_before = __position - begin();


        6  	      pointer __new_start(this->_M_allocate(__len));

        2  	      pointer __new_finish(__new_start);
        .  	      __try
        .  		{
        .  		  // See _M_insert_aux above.
        4  		  std::__uninitialized_fill_n_a(__new_start + __elems_before,

        .  						__n, __x,
        9  						_M_get_Tp_allocator());

        1  		  __new_finish = 0;
        .  
        5  		  __new_finish

        .  		    = std::__uninitialized_move_if_noexcept_a
        .  		    (this->_M_impl._M_start, __position.base(),
       10  		     __new_start, _M_get_Tp_allocator());


        .  
        3  		  __new_finish += __n;
        .  
        6  		  __new_finish

        .  		    = std::__uninitialized_move_if_noexcept_a
        .  		    (__position.base(), this->_M_impl._M_finish,
       10  		     __new_finish, _M_get_Tp_allocator());


        .  		}
        .  	      __catch(...)
        .  		{
        .  		  if (!__new_finish)
        .  		    std::_Destroy(__new_start + __elems_before,
        .  				  __new_start + __elems_before + __n,
        .  				  _M_get_Tp_allocator());
        .  		  else
        .  		    std::_Destroy(__new_start, __new_finish,
        .  				  _M_get_Tp_allocator());
        .  		  _M_deallocate(__new_start, __len);
        .  		  __throw_exception_again;
        .  		}
        3  	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,

        8  			    _M_get_Tp_allocator());

        3  	      _M_deallocate(this->_M_impl._M_start,

        .  			    this->_M_impl._M_end_of_storage
       12  			    - this->_M_impl._M_start);
        3  	      this->_M_impl._M_start = __new_start;
        3  	      this->_M_impl._M_finish = __new_finish;
        8  	      this->_M_impl._M_end_of_storage = __new_start + __len;
        .  	    }
        .  	}
        5      }
        .  
        .  #if __cplusplus >= 201103L
        .    template<typename _Tp, typename _Alloc>
        .      void
        .      vector<_Tp, _Alloc>::
        .      _M_default_append(size_type __n)
        .      {
        .        if (__n != 0)
-- line 535 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 46 ----------------------------------------
        .    public:
        .      typedef DenseIndex Index;
        .      enum {
        .        InnerStrideAtCompileTime = _InnerStrideAtCompileTime,
        .        OuterStrideAtCompileTime = _OuterStrideAtCompileTime
        .      };
        .  
        .      /** Default constructor, for use when strides are fixed at compile time */
   72,112      Stride()
  198,312        : m_outer(OuterStrideAtCompileTime), m_inner(InnerStrideAtCompileTime)

      858  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .      {
        .        eigen_assert(InnerStrideAtCompileTime != Dynamic && OuterStrideAtCompileTime != Dynamic);
   36,056      }
        .  
        .      /** Constructor allowing to pass the strides at runtime */
        .      Stride(Index outerStride, Index innerStride)
        .        : m_outer(outerStride), m_inner(innerStride)
        .      {
        .        eigen_assert(innerStride>=0 && outerStride>=0);
        .      }
        .  
        .      /** Copy constructor */
  292,780      Stride(const Stride& other)
1,171,128        : m_outer(other.outer()), m_inner(other.inner())


    1,476  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

  117,112      {}
        .  
        .      /** \returns the outer stride */
  468,452      inline Index outer() const { return m_outer.value(); }

      898  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .      /** \returns the inner stride */
  468,448      inline Index inner() const { return m_inner.value(); }

        .  
        .    protected:
        .      internal::variable_if_dynamic<Index, OuterStrideAtCompileTime> m_outer;
        .      internal::variable_if_dynamic<Index, InnerStrideAtCompileTime> m_inner;
        .  };
        .  
        .  /** \brief Convenience specialization of Stride to specify only an inner stride
        .    * See class Map for some examples */
-- line 83 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
         Ir 

-- line 26 ----------------------------------------
          .    *
          .    * This class defines the \c operator() \c const function and friends, which can be used to read specific
          .    * entries of a matrix or array.
          .    * 
          .    * \sa DenseCoeffsBase<Derived, WriteAccessors>, DenseCoeffsBase<Derived, DirectAccessors>,
          .    *     \ref TopicClassHierarchy
          .    */
          .  template<typename Derived>
 11,593,486  class DenseCoeffsBase<Derived,ReadOnlyAccessors> : public EigenBase<Derived>

          .  {
          .    public:
          .      typedef typename internal::traits<Derived>::StorageKind StorageKind;
          .      typedef typename internal::traits<Derived>::Index Index;
          .      typedef typename internal::traits<Derived>::Scalar Scalar;
          .      typedef typename internal::packet_traits<Scalar>::type PacketScalar;
          .  
          .      // Explanation for this CoeffReturnType typedef.
-- line 42 ----------------------------------------
-- line 56 ----------------------------------------
          .                       >::type PacketReturnType;
          .  
          .      typedef EigenBase<Derived> Base;
          .      using Base::rows;
          .      using Base::cols;
          .      using Base::size;
          .      using Base::derived;
          .  
  1,614,820      EIGEN_STRONG_INLINE Index rowIndexByOuterInner(Index outer, Index inner) const
          .      {
          .        return int(Derived::RowsAtCompileTime) == 1 ? 0
          .            : int(Derived::ColsAtCompileTime) == 1 ? inner
          .            : int(Derived::Flags)&RowMajorBit ? outer
    322,964            : inner;
    645,928      }
          .  
  1,614,820      EIGEN_STRONG_INLINE Index colIndexByOuterInner(Index outer, Index inner) const
          .      {
          .        return int(Derived::ColsAtCompileTime) == 1 ? 0
          .            : int(Derived::RowsAtCompileTime) == 1 ? inner
          .            : int(Derived::Flags)&RowMajorBit ? inner
    322,964            : outer;
    645,928      }
          .  
          .      /** Short version: don't use this function, use
          .        * \link operator()(Index,Index) const \endlink instead.
          .        *
          .        * Long version: this function is similar to
          .        * \link operator()(Index,Index) const \endlink, but without the assertion.
          .        * Use this for limiting the performance cost of debugging code when doing
          .        * repeated coefficient access. Only use this when it is guaranteed that the
          .        * parameters \a row and \a col are in range.
          .        *
          .        * If EIGEN_INTERNAL_DEBUGGING is defined, an assertion will be made, making this
          .        * function equivalent to \link operator()(Index,Index) const \endlink.
          .        *
          .        * \sa operator()(Index,Index) const, coeffRef(Index,Index), coeff(Index) const
          .        */
    176,580      EIGEN_STRONG_INLINE CoeffReturnType coeff(Index row, Index col) const
          .      {
          .        eigen_internal_assert(row >= 0 && row < rows()
          .                          && col >= 0 && col < cols());
    353,164        return derived().coeff(row, col);


      1,472  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    117,720      }
          .  
    206,010      EIGEN_STRONG_INLINE CoeffReturnType coeffByOuterInner(Index outer, Index inner) const
          .      {
          .        return coeff(rowIndexByOuterInner(outer, inner),
    706,332                     colIndexByOuterInner(outer, inner));
      5,000  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)    176,580      }
          .  
          .      /** \returns the coefficient at given the given row and column.
          .        *
          .        * \sa operator()(Index,Index), operator[](Index)
          .        */
          .      EIGEN_STRONG_INLINE CoeffReturnType operator()(Index row, Index col) const
          .      {
          .        eigen_assert(row >= 0 && row < rows()
-- line 113 ----------------------------------------
-- line 142 ----------------------------------------
          .        *
          .        * This method is allowed only for vector expressions, and for matrix expressions having the LinearAccessBit.
          .        *
          .        * \sa operator[](Index), operator()(Index,Index) const, x() const, y() const,
          .        * z() const, w() const
          .        */
          .  
          .      EIGEN_STRONG_INLINE CoeffReturnType
  7,883,550      operator[](Index index) const
          .      {
          .        #ifndef EIGEN2_SUPPORT
          .        EIGEN_STATIC_ASSERT(Derived::IsVectorAtCompileTime,
          .                            THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD)
          .        #endif
 12,613,684        eigen_assert(index >= 0 && index < size());
      1,426  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 14,190,402        return derived().coeff(index);
      3,017  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


  3,153,420      }
          .  
          .      /** \returns the coefficient at given index.
          .        *
          .        * This is synonymous to operator[](Index) const.
          .        *
          .        * This method is allowed only for vector expressions, and for matrix expressions having the LinearAccessBit.
          .        *
          .        * \sa operator[](Index), operator()(Index,Index) const, x() const, y() const,
-- line 166 ----------------------------------------
-- line 200 ----------------------------------------
          .        * PacketAccessBit.
          .        *
          .        * The \a LoadMode parameter may have the value \a #Aligned or \a #Unaligned. Its effect is to select
          .        * the appropriate vectorization instruction. Aligned access is faster, but is only possible for packets
          .        * starting at an address which is a multiple of the packet size.
          .        */
          .  
          .      template<int LoadMode>
    438,372      EIGEN_STRONG_INLINE PacketReturnType packet(Index row, Index col) const
          .      {
          .        eigen_internal_assert(row >= 0 && row < rows()
          .                        && col >= 0 && col < cols());
    730,624        return derived().template packet<LoadMode>(row,col);

      2,231  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    146,124      }
          .  
          .  
          .      /** \internal */
          .      template<int LoadMode>
    511,434      EIGEN_STRONG_INLINE PacketReturnType packetByOuterInner(Index outer, Index inner) const
          .      {
  1,169,000        return packet<LoadMode>(rowIndexByOuterInner(outer, inner),
      4,398  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


    438,376                                colIndexByOuterInner(outer, inner));

      2,215  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    292,248      }
          .  
          .      /** \internal
          .        * \returns the packet of coefficients starting at the given index. It is your responsibility
          .        * to ensure that a packet really starts there. This method is only available on expressions having the
          .        * PacketAccessBit and the LinearAccessBit.
          .        *
          .        * The \a LoadMode parameter may have the value \a #Aligned or \a #Unaligned. Its effect is to select
          .        * the appropriate vectorization instruction. Aligned access is faster, but is only possible for packets
-- line 230 ----------------------------------------
-- line 266 ----------------------------------------
          .    *
          .    * This class defines the non-const \c operator() function and friends, which can be used to write specific
          .    * entries of a matrix or array. This class inherits DenseCoeffsBase<Derived, ReadOnlyAccessors> which
          .    * defines the const variant for reading specific entries.
          .    * 
          .    * \sa DenseCoeffsBase<Derived, DirectAccessors>, \ref TopicClassHierarchy
          .    */
          .  template<typename Derived>
  9,999,733  class DenseCoeffsBase<Derived, WriteAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>

          .  {
          .    public:
          .  
          .      typedef DenseCoeffsBase<Derived, ReadOnlyAccessors> Base;
          .  
          .      typedef typename internal::traits<Derived>::StorageKind StorageKind;
          .      typedef typename internal::traits<Derived>::Index Index;
          .      typedef typename internal::traits<Derived>::Scalar Scalar;
-- line 282 ----------------------------------------
-- line 326 ----------------------------------------
          .      }
          .  
          .      /** \returns a reference to the coefficient at given the given row and column.
          .        *
          .        * \sa operator[](Index)
          .        */
          .  
          .      EIGEN_STRONG_INLINE Scalar&
  6,029,982      operator()(Index row, Index col)
          .      {
 16,079,960        eigen_assert(row >= 0 && row < rows()


      2,152  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
          .            && col >= 0 && col < cols());
 10,049,974        return derived().coeffRef(row, col);


      1,072  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  2,009,994      }
          .  
          .  
          .      /** Short version: don't use this function, use
          .        * \link operator[](Index) \endlink instead.
          .        *
          .        * Long version: this function is similar to
          .        * \link operator[](Index) \endlink, but without the assertion.
          .        * Use this for limiting the performance cost of debugging code when doing
-- line 347 ----------------------------------------
-- line 364 ----------------------------------------
          .      /** \returns a reference to the coefficient at given index.
          .        *
          .        * This method is allowed only for vector expressions, and for matrix expressions having the LinearAccessBit.
          .        *
          .        * \sa operator[](Index) const, operator()(Index,Index), x(), y(), z(), w()
          .        */
          .  
          .      EIGEN_STRONG_INLINE Scalar&
396,950,430      operator[](Index index)
          .      {
          .        #ifndef EIGEN2_SUPPORT
          .        EIGEN_STATIC_ASSERT(Derived::IsVectorAtCompileTime,
          .                            THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD)
          .        #endif
 13,171,036        eigen_assert(index >= 0 && index < size());
      1,103  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 14,817,427        return derived().coeffRef(index);


      2,577  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
158,780,172      }
          .  
          .      /** \returns a reference to the coefficient at given index.
          .        *
          .        * This is synonymous to operator[](Index).
          .        *
          .        * This method is allowed only for vector expressions, and for matrix expressions having the LinearAccessBit.
          .        *
          .        * \sa operator[](Index) const, operator()(Index,Index), x(), y(), z(), w()
          .        */
          .  
          .      EIGEN_STRONG_INLINE Scalar&
  2,993,430      operator()(Index index)
          .      {
  4,789,488        eigen_assert(index >= 0 && index < size());

  5,388,174        return derived().coeffRef(index);


  1,197,372      }
          .  
          .      /** equivalent to operator[](0).  */
          .  
          .      EIGEN_STRONG_INLINE Scalar&
          .      x() { return (*this)[0]; }
          .  
          .      /** equivalent to operator[](1).  */
          .  
-- line 404 ----------------------------------------
-- line 468 ----------------------------------------
          .        *
          .        * This method is overridden in SwapWrapper, allowing swap() assignments to share 99% of their code
          .        * with usual assignments.
          .        *
          .        * Outside of this internal usage, this method has probably no usefulness. It is hidden in the public API dox.
          .        */
          .  
          .      template<typename OtherDerived>
  2,077,560      EIGEN_STRONG_INLINE void copyCoeff(Index row, Index col, const DenseBase<OtherDerived>& other)
          .      {
          .        eigen_internal_assert(row >= 0 && row < rows()
          .                          && col >= 0 && col < cols());
  5,993,894        derived().coeffRef(row, col) = other.derived().coeff(row, col);
      2,534  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
  1,038,780      }
          .  
          .      /** \internal Copies the coefficient at the given index of other into *this.
          .        *
          .        * This method is overridden in SwapWrapper, allowing swap() assignments to share 99% of their code
          .        * with usual assignments.
          .        *
          .        * Outside of this internal usage, this method has probably no usefulness. It is hidden in the public API dox.
          .        */
          .  
          .      template<typename OtherDerived>
    480,298      EIGEN_STRONG_INLINE void copyCoeff(Index index, const DenseBase<OtherDerived>& other)
          .      {
          .        eigen_internal_assert(index >= 0 && index < size());
  1,440,922        derived().coeffRef(index) = other.derived().coeff(index);


      2,914  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


    274,456      }
          .  
          .  
          .      template<typename OtherDerived>
  1,543,185      EIGEN_STRONG_INLINE void copyCoeffByOuterInner(Index outer, Index inner, const DenseBase<OtherDerived>& other)
          .      {
  1,763,648        const Index row = rowIndexByOuterInner(outer,inner);
      1,543  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  1,763,648        const Index col = colIndexByOuterInner(outer,inner);

      1,551  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .        // derived() is important here: copyCoeff() may be reimplemented in Derived!
  2,204,558        derived().copyCoeff(row, col, other);

      1,847  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    440,910      }
          .  
          .      /** \internal Copies the packet at position (row,col) of other into *this.
          .        *
          .        * This method is overridden in SwapWrapper, allowing swap() assignments to share 99% of their code
          .        * with usual assignments.
          .        *
          .        * Outside of this internal usage, this method has probably no usefulness. It is hidden in the public API dox.
          .        */
          .  
          .      template<typename OtherDerived, int StoreMode, int LoadMode>
        119      EIGEN_STRONG_INLINE void copyPacket(Index row, Index col, const DenseBase<OtherDerived>& other)
          .      {
          .        eigen_internal_assert(row >= 0 && row < rows()
          .                          && col >= 0 && col < cols());
        349        derived().template writePacket<StoreMode>(row, col,
          .          other.derived().template packet<LoadMode>(row, col));
         34      }
          .  
          .      /** \internal Copies the packet at the given index of other into *this.
          .        *
          .        * This method is overridden in SwapWrapper, allowing swap() assignments to share 99% of their code
          .        * with usual assignments.
          .        *
          .        * Outside of this internal usage, this method has probably no usefulness. It is hidden in the public API dox.
          .        */
          .  
          .      template<typename OtherDerived, int StoreMode, int LoadMode>
    421,476      EIGEN_STRONG_INLINE void copyPacket(Index index, const DenseBase<OtherDerived>& other)
          .      {
          .        eigen_internal_assert(index >= 0 && index < size());
  1,404,936        derived().template writePacket<StoreMode>(index,      2,853  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

          .          other.derived().template packet<LoadMode>(index));
    140,492      }
          .  
          .      /** \internal */
          .      template<typename OtherDerived, int StoreMode, int LoadMode>
        119      EIGEN_STRONG_INLINE void copyPacketByOuterInner(Index outer, Index inner, const DenseBase<OtherDerived>& other)
          .      {
        139        const Index row = rowIndexByOuterInner(outer,inner);

        139        const Index col = colIndexByOuterInner(outer,inner);

          .        // derived() is important here: copyCoeff() may be reimplemented in Derived!
        168        derived().template copyPacket< OtherDerived, StoreMode, LoadMode>(row, col, other);


         34      }
          .  #endif
          .  
          .  };
          .  
          .  /** \brief Base class providing direct read-only coefficient access to matrices and arrays.
          .    * \ingroup Core_Module
          .    * \tparam Derived Type of the derived class
          .    * \tparam #DirectAccessors Constant indicating direct access
-- line 557 ----------------------------------------
-- line 558 ----------------------------------------
          .    *
          .    * This class defines functions to work with strides which can be used to access entries directly. This class
          .    * inherits DenseCoeffsBase<Derived, ReadOnlyAccessors> which defines functions to access entries read-only using
          .    * \c operator() .
          .    *
          .    * \sa \ref TopicClassHierarchy
          .    */
          .  template<typename Derived>
     32,704  class DenseCoeffsBase<Derived, DirectAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>
      1,320  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .  {
          .    public:
          .  
          .      typedef DenseCoeffsBase<Derived, ReadOnlyAccessors> Base;
          .      typedef typename internal::traits<Derived>::Index Index;
          .      typedef typename internal::traits<Derived>::Scalar Scalar;
          .      typedef typename NumTraits<Scalar>::Real RealScalar;
          .  
-- line 574 ----------------------------------------
-- line 576 ----------------------------------------
          .      using Base::cols;
          .      using Base::size;
          .      using Base::derived;
          .  
          .      /** \returns the pointer increment between two consecutive elements within a slice in the inner direction.
          .        *
          .        * \sa outerStride(), rowStride(), colStride()
          .        */
     39,240      inline Index innerStride() const
          .      {
     68,674        return derived().innerStride();


      1,384  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     19,620      }
          .  
          .      /** \returns the pointer increment between two consecutive inner slices (for example, between two consecutive columns
          .        *          in a column-major matrix).
          .        *
          .        * \sa innerStride(), rowStride(), colStride()
          .        */
          .      inline Index outerStride() const
          .      {
-- line 595 ----------------------------------------
-- line 628 ----------------------------------------
          .    *
          .    * This class defines functions to work with strides which can be used to access entries directly. This class
          .    * inherits DenseCoeffsBase<Derived, WriteAccessors> which defines functions to access entries read/write using
          .    * \c operator().
          .    *
          .    * \sa \ref TopicClassHierarchy
          .    */
          .  template<typename Derived>
  9,999,733  class DenseCoeffsBase<Derived, DirectWriteAccessors>

          .    : public DenseCoeffsBase<Derived, WriteAccessors>
          .  {
          .    public:
          .  
          .      typedef DenseCoeffsBase<Derived, WriteAccessors> Base;
          .      typedef typename internal::traits<Derived>::Index Index;
          .      typedef typename internal::traits<Derived>::Scalar Scalar;
          .      typedef typename NumTraits<Scalar>::Real RealScalar;
-- line 644 ----------------------------------------
-- line 647 ----------------------------------------
          .      using Base::cols;
          .      using Base::size;
          .      using Base::derived;
          .  
          .      /** \returns the pointer increment between two consecutive elements within a slice in the inner direction.
          .        *
          .        * \sa outerStride(), rowStride(), colStride()
          .        */
  1,439,280      inline Index innerStride() const
          .      {
  2,518,764        return derived().innerStride();

      1,439  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    719,640      }
          .  
          .      /** \returns the pointer increment between two consecutive inner slices (for example, between two consecutive columns
          .        *          in a column-major matrix).
          .        *
          .        * \sa innerStride(), rowStride(), colStride()
          .        */
  1,074,376      inline Index outerStride() const
          .      {
  1,880,174        return derived().outerStride();

      1,455  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    537,188      }
          .  
          .      // FIXME shall we remove it ?
          .      inline Index stride() const
          .      {
          .        return Derived::IsVectorAtCompileTime ? innerStride() : outerStride();
          .      }
          .  
          .      /** \returns the pointer increment between two consecutive rows.
          .        *
          .        * \sa innerStride(), outerStride(), colStride()
          .        */
  1,074,376      inline Index rowStride() const
          .      {
  1,074,388        return Derived::IsRowMajor ? outerStride() : innerStride();
      1,498  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    537,188      }
          .  
          .      /** \returns the pointer increment between two consecutive columns.
          .        *
          .        * \sa innerStride(), outerStride(), rowStride()
          .        */
  1,074,376      inline Index colStride() const
          .      {
  1,074,388        return Derived::IsRowMajor ? innerStride() : outerStride();

      1,487  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    537,188      }
          .  };
          .  
          .  namespace internal {
          .  
          .  template<typename Derived, bool JustReturnZero>
          .  struct first_aligned_impl
          .  {
          .    static inline typename Derived::Index run(const Derived&)
-- line 700 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp
--------------------------------------------------------------------------------
        Ir 

         .  #include <math.h>
         .  
         .  #include "mcubes.h"
         .  
         .  //methods for doing feature detection and sample point computation
         .  
         .  //sets feature value in gridcell
         .  //0=no feature, return 1=edge, 2=corner
   542,720  void isFeature(GRIDCELL &cell, const vector<Eigen::Vector3f> &normals, float feat_thresh, float corner_thresh){
         .      //check for feature in cube
         .      //get opening angles of normals
   271,364      Eigen::Vector3f norm_0;

       810  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   271,360      Eigen::Vector3f norm_1;

   135,680      float min=5.0;
 1,696,000      for(int n=0; n<7; n++){
 3,776,150          if(cell.normal_indexes[n]==-1) continue;
   412,020          for(int m=n+1; m<8; m++){
   640,920              if(cell.normal_indexes[m]==-1) continue;
   924,757              Eigen::Vector3f n1 = normals[cell.normal_indexes[n]];

     1,828  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

   924,749              Eigen::Vector3f n2 = normals[cell.normal_indexes[m]];


 2,611,060              float angle = n1[0]*n2[0]+n1[1]*n2[1]+n1[2]*n2[2];
     1,018  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   202,611              if(angle<min){
    29,954                  min=angle;
    89,866                  norm_0=n1;
       834  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    89,862                  norm_1=n2;

         .              }
         .          }
         .      }
         .      //check if within threshold for feature detection
   203,520      if(min>=feat_thresh){ //is not a feature
   133,726          cell.feature=0;
    66,863          return;
         .      }
         .  
         .      //check if feature is a corner
     3,908      Eigen::Vector3f n_star;

    38,103      n_star[0] = norm_0[1]*norm_1[2]-norm_0[2]*norm_1[1];

    38,103      n_star[1] = norm_0[2]*norm_1[0]-norm_0[0]*norm_1[2];

    38,103      n_star[2] = norm_0[0]*norm_1[1]-norm_0[1]*norm_1[0];

         .  
     1,954      float max_ang=0.0;
    27,356      for(int n=0; n<8; n++){
    54,712          if(cell.normal_indexes[n]==-1) continue;
    89,199          Eigen::Vector3f norm = normals[cell.normal_indexes[n]];


   251,856          float corner_ang=norm[0]*n_star[0]+norm[1]*n_star[1]+norm[2]*n_star[2];

    41,980          corner_ang = fabs(corner_ang);

       592  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    23,039          if(corner_ang>max_ang)max_ang=corner_ang;
         .      }
     2,931      if(max_ang>corner_thresh){ //is a corner
        10          cell.feature=2;
         5          return;
         .      }
     1,944      cell.feature=1; //is an edge
   271,360  }
         .  
         .  //compute linear shift to center the grid
     2,198  Eigen::Vector3f getTransform(const vector<XYZ> &vertList){
         .      //get centroid
     1,256      Eigen::Vector3f shift;

     7,222      shift[0]=shift[1]=shift[2]=0.0;

       314      int count=0;
    45,216      for(int i=0; i<vertList.size(); i++){

    64,060          if(vertList[i].x!=-1.0){

       698  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     1,311              count++;
    22,287              shift[0]+=vertList[i].x;


    22,287              shift[1]+=vertList[i].y;


    22,287              shift[2]+=vertList[i].z;


         .          }
         .      }
     3,140      shift[0]/=(float)count;

     3,140      shift[1]/=(float)count;

     3,140      shift[2]/=(float)count;

       314      return shift;
     1,884  }
         .  
     2,826  vec_out getVec(const GRIDCELL &cell, const vector<XYZ> &vertList, const vector<Eigen::Vector3f> &normals, const Eigen::Vector3f &shift){
     1,260      vec_out out;
       586  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    59,228  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.h:vec_out::vec_out() (314x)
       314      int count=0;
    45,216      for(int i=0; i<vertList.size(); i++){

    64,056          if(vertList[i].x!=-1.0){

     1,311              count++;
         .          }
         .      }
     2,202      out.vec.resize(count);
     1,077  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .  
         .      //get normal for each interpolated point
       314      int vec_index=0;
    45,216      for(int i=0; i<vertList.size(); i++){

    64,056          if(vertList[i].x==-1.0) continue;

         .  
         .          //get point distances^2
         .          int pnts[8];
         .          float pnt_dists[8];
    36,708          for(int n=0; n<8; n++){
    20,976              float dist=0.0;
   482,448              dist+=(cell.p[n].x-vertList[i].x)*(cell.p[n].x-vertList[i].x);

   482,448              dist+=(cell.p[n].y-vertList[i].y)*(cell.p[n].y-vertList[i].y);

   482,448              dist+=(cell.p[n].z-vertList[i].z)*(cell.p[n].z-vertList[i].z);

    41,952              pnt_dists[n]=dist;
    41,952              pnts[n]=n;
         .          }
         .          //order points from min to max dist
    32,775          for(int n=1; n<8; n++){
   238,602              for(int m=0; m<8-n; m++){
   330,372                  if(pnt_dists[m]>pnt_dists[m+1]){
    65,580                      float temp_dist = pnt_dists[m];
    65,580                      int temp_index = pnts[m];
   114,765                      pnt_dists[m] = pnt_dists[m+1];
   114,765                      pnts[m] = pnts[m+1];
    81,975                      pnt_dists[m+1] = temp_dist;
    81,975                      pnts[m+1] = temp_index;
         .                  }
         .              }
         .          }
         .          //get closest point with a normal
     1,311          int index=-1;
     7,389          for(int n=0; n<8; n++){
    18,949              if(cell.normal_indexes[pnts[n]]==-1) continue;
     5,244              index=pnts[n];
     5,244              if(index>-1) break;
         .          }
     9,181          out.vec_inds.push_back(index);

       730  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
     5,244          Eigen::Vector3f s;

    98,329          s[0]=vertList[i].x-shift[0];s[1]=vertList[i].y-shift[1];s[2]=vertList[i].z-shift[2];
     1,026  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)    22,287          Eigen::Vector3f norm = normals[cell.normal_indexes[index]];


    72,109          out.vec[vec_index]=s[0]*norm[0]+s[1]*norm[1]+s[2]*norm[2];


     1,034  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     1,311          vec_index++;
         .      }
       314      return out;
     1,570  }
         .  
     2,512  Eigen::MatrixXf getNormMat(const GRIDCELL &cell, const vector<Eigen::Vector3f> &normals, const vec_out &v){
     4,400      Eigen::MatrixXf m(v.vec_inds.size(),3);

       930  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    19,814      for(int i=0; i<v.vec_inds.size(); i++){

    32,779          Eigen::Vector3f norm = normals[cell.normal_indexes[v.vec_inds[i]]];       658  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    62,932          m(i,0)=norm[0]; m(i,1)=norm[1]; m(i,2)=norm[2];
     1,066  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


         .      }
       314      return m;
     1,570  }
         .  
         .  //compute new sample point for feature
     3,140  Eigen::Vector3f computePoint(const Eigen::MatrixXf &normalMat, const Eigen::VectorXf &vec, const Eigen::Vector3f &shift, const bool isEdge){
     2,202      Eigen::JacobiSVD<Eigen::MatrixXf> svd(normalMat, Eigen::ComputeThinU | Eigen::ComputeThinV);
     1,034  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     3,148      float max = svd.singularValues()(0);

     2,183  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

     5,652      float min = svd.singularValues()(svd.singularValues().rows()-1);     3,140      float thresh = min/(max-0.0001);
     2,516      if(isEdge) svd.setThreshold(thresh);
     1,114  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     4,404      Eigen::Vector3f point = svd.solve(vec);
     3,684  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


    14,130      point[0]+=shift[0];point[1]+=shift[1];point[2]+=shift[2];


     1,888      return point;

       994  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     1,570  }
         .  
         .  //*********************************************************************************************
         .  //methods for extended marching cubes
         .  
        12  vector<GRIDCELL> getGridCells(gridPtr in, gridPtr surfaceMap, const vector<Eigen::Vector3f> &normals, float feat_thresh, float corner_thresh, const bool USING_FEATURES){
         8      vector<GRIDCELL> cells;
       757  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

       873      for(int i=0; i<in->dims[0]-1; i++){

     1,767  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

    28,037          for(int j=0; j<in->dims[1]-1; j++){


 1,114,272              for(int k=0; k<in->dims[2]-1; k++){


   271,364                  GRIDCELL cell;
       586  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
12,147,796  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.h:GRIDCELL::GRIDCELL() (67840x)
         .                  //fill gridcell with values
 1,899,520                  for(int n=0; n<8; n++){
 2,170,880                      XYZ pnt;
 2,713,600  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ() (542720x)
10,583,040                      int x = (i+(int)((n%4==1)||(n%4)==2));
 7,598,080                      int y = (j+((n%4)/2));
 4,884,480                      int z = (k+(n/4));
 1,085,440                      pnt.x=(float)x;
 1,085,440                      pnt.y=(float)y;
 1,085,440                      pnt.z=(float)z;
 7,055,364                      cell.p[n]=pnt;
11,939,840  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (542720x)
       570  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
16,281,616                      cell.val[n]=(*in)[x][y][z];
11,939,840  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (542720x)
253,992,960  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (542720x)
24,422,400  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (542720x)

     4,260  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)
16,824,320                      cell.normal_indexes[n]=(int)(*surfaceMap)[x][y][z];
11,939,840  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (542720x)
253,992,960  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (542720x)
24,422,400  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (542720x)

         .                  }
         .  
   135,680                  if(USING_FEATURES){
         .                      //set cell feature value
   746,244                      isFeature(cell, normals, feat_thresh, corner_thresh);
229,560,030  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:isFeature(GRIDCELL&, std::vector<Eigen::Matrix<float, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<float, 3, 1, 0, 3, 1> > > const&, float, float) (67840x)
     1,123  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .                      //get feature point if necessary
   203,520                      if(cell.feature==0){
   401,178                          cell.feature_point.x=cell.feature_point.y=cell.feature_point.z=-1.0;
         .                      }
         .                  }
         .                  //add cell to list
   407,044                  cells.push_back(cell);

       861  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   271,364              }
       586  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 9,844,092  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.h:GRIDCELL::~GRIDCELL() (67840x)
         .          }
         .      }
         1      return cells;
         5  }
         .  
         .  //populate triangles in grid
   610,560  void Polygonise(GRIDCELL &grid, float isolevel, const vector<Eigen::Vector3f> &normals, const bool USING_FEATURES){
         .      /*
         .          Determine the index into the edge table which
         .          tells us which vertices are inside of the surface
         .      */
    67,840      int cubeindex = 0;
   401,902      if (grid.val[0] < isolevel) cubeindex |= 1;
   401,902      if (grid.val[1] < isolevel) cubeindex |= 2;
   401,902      if (grid.val[2] < isolevel) cubeindex |= 4;
   401,902      if (grid.val[3] < isolevel) cubeindex |= 8;
   401,902      if (grid.val[4] < isolevel) cubeindex |= 16;
   401,902      if (grid.val[5] < isolevel) cubeindex |= 32;
   401,902      if (grid.val[6] < isolevel) cubeindex |= 64;
   401,902      if (grid.val[7] < isolevel) cubeindex |= 128;
         .  
         .      /* Cube is entirely in/out of the surface */
   407,040      if (edgeTable[cubeindex] == 0){
   128,234          grid.isSurface=false;
    64,117          return;
         .      }
     7,446      grid.isSurface=true;
         .  
         .      /* get interpolated points */
    33,511      vector<XYZ> vertlist = getSamplePoints(grid, isolevel, cubeindex);
27,196,134  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:getSamplePoints(GRIDCELL const&, float, int) (3723x)
       715  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
         .      /* Create the triangles */
    29,784      if((!USING_FEATURES) || grid.feature==0){
   115,345          for (int i=0; triTable[cubeindex][i]!=-1; i+=3) {
    27,072              TRIANGLE t;
       594  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   358,651  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:TRIANGLE::TRIANGLE() (6767x)
   135,344              t.p[0] = vertlist[triTable[cubeindex][i  ]];
       690  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   148,874  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (6767x)
   142,107              t.p[1] = vertlist[triTable[cubeindex][i+1]];

   148,874  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (6767x)
   142,107              t.p[2] = vertlist[triTable[cubeindex][i+2]];

   148,874  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (6767x)
         .              //check if triangle is degenerate
    95,416              if(XYZ::dist(t.p[0],t.p[1])<0.00001) continue;
       618  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   500,758  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (6767x)
    91,636              if(XYZ::dist(t.p[1],t.p[2])<0.00001) continue;
   450,882  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (6093x)
    82,247              if(XYZ::dist(t.p[2],t.p[0])<0.00001) continue;
   433,048  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (5852x)
    38,735              grid.triangles.push_back(t);
       842  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     3,409          }
         .      }
         .  
         .      else{
         .          //compute feature point
     1,888          Eigen::Vector3f shift = getTransform(vertlist);
 1,184,279  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:getTransform(std::vector<XYZ, std::allocator<XYZ> > const&) (314x)
       779  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     2,830          vec_out B = getVec(grid, vertlist, normals, shift);
     1,267  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 9,679,170  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:getVec(GRIDCELL const&, std::vector<XYZ, std::allocator<XYZ> > const&, std::vector<Eigen::Matrix<float, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<float, 3, 1, 0, 3, 1> > > const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&) (314x)
     3,458          Eigen::MatrixXf M = getNormMat(grid, normals, B);
 2,867,768  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:getNormMat(GRIDCELL const&, std::vector<Eigen::Matrix<float, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<float, 3, 1, 0, 3, 1> > > const&, vec_out const&) (314x)

     1,211  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     4,086          Eigen::Vector3f feat_pnt = computePoint(M, B.vec, shift, (grid.feature==1));
     1,478  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
84,692,511  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:computePoint(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, 1, 0, -1, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, bool) (314x)
     2,512          grid.feature_point.x=feat_pnt[0];

     2,512          grid.feature_point.y=feat_pnt[1];

     2,512          grid.feature_point.z=feat_pnt[2];

         .  
     8,164          float x_dist = (grid.feature_point.x - shift[0])*(grid.feature_point.x - shift[0]);

     8,164          float y_dist = (grid.feature_point.y - shift[1])*(grid.feature_point.y - shift[1]);

     8,164          float z_dist = (grid.feature_point.z - shift[2])*(grid.feature_point.z - shift[2]);

     2,512          float dist = sqrt(x_dist+y_dist+z_dist);

         .  
     1,256          bool within_thresh = dist<1.0; //<---------------------- change feature point threshold here
         .  
       628          if(within_thresh){
         .              /* Create triangles */
     1,232              vector<TRIANGLE> temp_tri;

    10,967              for (int i=0; triTable[cubeindex][i]!=-1; i+=3) {
     2,644                  TRIANGLE t;
    35,033  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:TRIANGLE::TRIANGLE() (661x)
    13,220                  t.p[0] = vertlist[triTable[cubeindex][i  ]];

    14,542  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (661x)
    13,881                  t.p[1] = vertlist[triTable[cubeindex][i+1]];
    14,542  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (661x)

    13,881                  t.p[2] = vertlist[triTable[cubeindex][i+2]];
    14,542  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (661x)

         .                  //check if triangle is degenerate
     9,259                  if(XYZ::dist(t.p[0],t.p[1])<0.00001) continue;
    48,914  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (661x)
     9,840                  if(XYZ::dist(t.p[1],t.p[2])<0.00001) continue;
    48,544  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (656x)
     9,189                  if(XYZ::dist(t.p[2],t.p[0])<0.00001) continue;
    48,544  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (656x)
     3,906                  temp_tri.push_back(t);

         .              }
         .  
         .              //get list of edges
     3,084              vector<vector<XYZ> > edges = getEdges(temp_tri);

       787  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 9,961,856  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:getEdges(std::vector<TRIANGLE, std::allocator<TRIANGLE> > const&) (308x)
     2,468              vector<vector<XYZ> > new_edges;

       778  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .              //edges with duplicates are removed
    25,179              for(int i=0; i<edges.size(); i++){

     1,953                  bool add_edge=true;
   177,777                  for(int j=0; j<edges.size(); j++){

    42,093                      if(i!=j){
         .                          //check if edges are the same
   519,362                          if(sameEdge(edges[i], edges[j])){
     1,552  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

 5,687,112  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:sameEdge(std::vector<XYZ, std::allocator<XYZ> >, std::vector<XYZ, std::allocator<XYZ> >) (12078x)


       680                              add_edge=false;
         .                          }
         .                      }
         .                  }
    20,455                  if(add_edge) new_edges.push_back(edges[i]);


         .              }
         .              //create new triangles from edges and feature point
    17,699              for(int i=0; i<new_edges.size(); i++){

     5,092                  TRIANGLE t;
    67,469  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:TRIANGLE::TRIANGLE() (1273x)
    21,641                  t.p[0]=new_edges[i][0];

    28,006  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (1273x)

    21,641                  t.p[1]=new_edges[i][1];
    28,006  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (1273x)


    10,184                  t.p[2]=grid.feature_point;
    28,006  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (1273x)
         .                  //check if triangle is degenerate
    17,822                  if(XYZ::dist(t.p[0],t.p[1])<0.00001) continue;
    94,202  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (1273x)
    19,095                  if(XYZ::dist(t.p[1],t.p[2])<0.00001) continue;
    94,202  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (1273x)
    17,822                  if(XYZ::dist(t.p[2],t.p[0])<0.00001) continue;
    94,202  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (1273x)
     8,911                  grid.triangles.push_back(t);

     1,540              }

         .          }
         .  
         .          else{
        12              grid.feature=0;
       248              for (int i=0; triTable[cubeindex][i]!=-1; i+=3) {
        64                  TRIANGLE t;
       848  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:TRIANGLE::TRIANGLE() (16x)
       320                  t.p[0] = vertlist[triTable[cubeindex][i  ]];

       352  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (16x)
       336                  t.p[1] = vertlist[triTable[cubeindex][i+1]];
       352  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (16x)

       336                  t.p[2] = vertlist[triTable[cubeindex][i+2]];
       352  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (16x)

         .                  //check if triangle is degenerate
       226                  if(XYZ::dist(t.p[0],t.p[1])<0.00001) continue;
     1,184  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (16x)
       211                  if(XYZ::dist(t.p[1],t.p[2])<0.00001) continue;
     1,036  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (14x)
       183                  if(XYZ::dist(t.p[2],t.p[0])<0.00001) continue;
       962  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (13x)
        84                  grid.triangles.push_back(t);

         .              }
     1,260          }
   128,227  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.h:vec_out::~vec_out() (314x)
       605  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
    18,619      }

       690  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   271,360  }
         .  
    29,784  vector<XYZ> getSamplePoints(const GRIDCELL &grid, float isolevel, int cubeindex){
    14,896      vector<XYZ> pnts;

       698  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .      /* Find the vertices where the surface intersects the cube */
    26,061      if (edgeTable[cubeindex] & 1)
    36,160           pnts.push_back(VertexInterp(isolevel,grid.p[0],grid.p[1],grid.val[0],grid.val[1]));

   116,616  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) (904x)
         .      else
    36,655          pnts.push_back(XYZ(-1.0,-1.0,-1.0));

     1,348  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
    47,923  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ(float, float, float) (2819x)
    26,061      if (edgeTable[cubeindex] & 2)
    51,680          pnts.push_back(VertexInterp(isolevel,grid.p[1],grid.p[2],grid.val[1],grid.val[2]));
   182,172  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) (1292x)

         .      else
    31,603          pnts.push_back(XYZ(-1.0,-1.0,-1.0));
    41,327  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ(float, float, float) (2431x)

    26,061      if (edgeTable[cubeindex] & 4)
    36,160          pnts.push_back(VertexInterp(isolevel,grid.p[2],grid.p[3],grid.val[2],grid.val[3]));

   200,688  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) (904x)
         .      else
    36,647          pnts.push_back(XYZ(-1.0,-1.0,-1.0));

    47,923  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ(float, float, float) (2819x)
    26,061      if (edgeTable[cubeindex] & 8)
    51,680          pnts.push_back(VertexInterp(isolevel,grid.p[3],grid.p[0],grid.val[3],grid.val[0]));

   302,328  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) (1292x)
         .      else
    31,603          pnts.push_back(XYZ(-1.0,-1.0,-1.0));

    41,327  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ(float, float, float) (2431x)
    26,061      if (edgeTable[cubeindex] & 16)
    36,160          pnts.push_back(VertexInterp(isolevel,grid.p[4],grid.p[5],grid.val[4],grid.val[5]));

   116,616  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) (904x)
         .      else
    36,647          pnts.push_back(XYZ(-1.0,-1.0,-1.0));
    47,923  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ(float, float, float) (2819x)

    26,061      if (edgeTable[cubeindex] & 32)
    51,684          pnts.push_back(VertexInterp(isolevel,grid.p[5],grid.p[6],grid.val[5],grid.val[6]));

   182,762  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) (1292x)
       659  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .      else
    31,603          pnts.push_back(XYZ(-1.0,-1.0,-1.0));
    41,327  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ(float, float, float) (2431x)

    26,061      if (edgeTable[cubeindex] & 64)
    36,160          pnts.push_back(VertexInterp(isolevel,grid.p[6],grid.p[7],grid.val[6],grid.val[7]));
   200,688  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) (904x)

         .      else
    36,647          pnts.push_back(XYZ(-1.0,-1.0,-1.0));

    47,923  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ(float, float, float) (2819x)
    26,061      if (edgeTable[cubeindex] & 128)
    51,680          pnts.push_back(VertexInterp(isolevel,grid.p[7],grid.p[4],grid.val[7],grid.val[4]));

   302,328  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) (1292x)
         .      else
    31,603          pnts.push_back(XYZ(-1.0,-1.0,-1.0));

    41,327  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ(float, float, float) (2431x)
    26,061      if (edgeTable[cubeindex] & 256)
    61,120          pnts.push_back(VertexInterp(isolevel,grid.p[0],grid.p[4],grid.val[0],grid.val[4]));

   233,784  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) (1528x)
         .      else
    28,535          pnts.push_back(XYZ(-1.0,-1.0,-1.0));

    37,315  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ(float, float, float) (2195x)
    26,061      if (edgeTable[cubeindex] & 512)
    61,120          pnts.push_back(VertexInterp(isolevel,grid.p[1],grid.p[5],grid.val[1],grid.val[5]));
   233,784  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) (1528x)

         .      else
    28,535          pnts.push_back(XYZ(-1.0,-1.0,-1.0));
    37,315  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ(float, float, float) (2195x)

    26,061      if (edgeTable[cubeindex] & 1024)
    61,120          pnts.push_back(VertexInterp(isolevel,grid.p[2],grid.p[6],grid.val[2],grid.val[6]));

   233,784  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) (1528x)
         .      else
    28,535          pnts.push_back(XYZ(-1.0,-1.0,-1.0));

    37,315  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ(float, float, float) (2195x)
    26,061      if (edgeTable[cubeindex] & 2048)
    61,120          pnts.push_back(VertexInterp(isolevel,grid.p[3],grid.p[7],grid.val[3],grid.val[7]));
   233,784  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:VertexInterp(float, XYZ, XYZ, float, float) (1528x)

         .      else
    28,535          pnts.push_back(XYZ(-1.0,-1.0,-1.0));
    37,315  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ(float, float, float) (2195x)

         .  
     3,723      return pnts;
    18,615  }
         .  
   268,128  XYZ VertexInterp(float isolevel, XYZ p1, XYZ p2, float valp1, float valp2){
   119,172      if (p2<p1){
   480,272  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:operator<(XYZ const&, XYZ const&) (14896x)
       586  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    17,568          XYZ temp;
    21,960  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ() (4392x)
    26,352          temp = p1;
    96,624  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (4392x)
    26,352          p1 = p2;
    96,624  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (4392x)
    26,352          p2 = temp;
    96,624  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (4392x)
     8,784          float tempval = valp1;
     8,784          valp1=valp2;
     8,784          valp2=tempval;
         .      }
         .  
    59,584      XYZ p;
    74,480  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ() (14896x)
   148,960      if(fabs(valp1 - valp2) > 0.00001){

   193,648          p.x = p1.x + (p2.x - p1.x)/(valp2 - valp1)*(isolevel - valp1);
   193,648          p.y = p1.y + (p2.y - p1.y)/(valp2 - valp1)*(isolevel - valp1);
   208,544          p.z = p1.z + (p2.z - p1.z)/(valp2 - valp1)*(isolevel - valp1);
         .      }
         .      else{
         .          p.x = p1.x;
         .          p.y = p1.y;
         .          p.z = p1.z;
         .      }
    89,376      return p;
    89,376  }
         .  
         .  //get list of edges from triangles
         .  //edges are sorted using XYZ<
    60,240  vector<vector<XYZ> > getEdges(const vector<TRIANGLE> &triangles){
    40,164      vector<vector<XYZ> > edges;

       778  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   234,693      for(int i=0; i<triangles.size(); i++){

   134,979          for(int j=0; j<3; j++){
   124,596              vector<XYZ> edge;

   622,984              edge.push_back(triangles[i].p[j]);
       746  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


   996,768              edge.push_back(triangles[i].p[(j+1)%3]);


   186,898              edges.push_back(edge);

       882  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   124,596          }

         .      }
    10,040      return edges;
    50,200  }
         .  
         .  //check if edges are the same
   324,960  bool sameEdge(vector<XYZ> lhs, vector<XYZ> rhs){
         .      //make sure edges are sorted
   920,720      if(lhs[1]<lhs[0]){

   999,104  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:operator<(XYZ const&, XYZ const&) (54160x)
   110,544          XYZ temp;
   138,180  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ() (27636x)
   303,996          temp = lhs[0];
   607,992  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (27636x)

   414,540          lhs[0] = lhs[1];
   607,992  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (27636x)

   276,360          lhs[1] = temp;
   607,992  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (27636x)

         .      }
   920,720      if(rhs[1]<rhs[0]){

 1,001,828  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:operator<(XYZ const&, XYZ const&) (54160x)
   110,360          XYZ temp;
   137,950  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::XYZ() (27590x)
   303,490          temp = rhs[0];
   606,980  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (27590x)

   413,850          rhs[0] = rhs[1];
   606,980  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (27590x)

   275,900          rhs[1] = temp;
   606,980  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (27590x)

         .      }
 1,237,494      return ((XYZ::dist(lhs[0],rhs[0])<0.00001) && (XYZ::dist(lhs[1],rhs[1])<0.00001));
 4,375,028  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (59122x)

   216,640  }
         .  
         .  //method for performing edge flipping
         .  //struct is used in following method
    10,914  struct shared_triangle{

         .      vector<XYZ> shared_edge;
         .      int cell_triangle_index;
         .      int neighbor_triangle_index;
         .  };
         8  vector<TRIANGLE> flipEdges(vector<GRIDCELL> &cells, gridPtr in){
         4      vector<TRIANGLE> new_triangles;

        12      int dim_x = in->dims[0]-1;


        12      int dim_y = in->dims[1]-1;


        12      int dim_z = in->dims[2]-1;


         .      //perform edge flipping on feature cells
   746,252      for(int cell_ind=0; cell_ind<cells.size(); cell_ind++){

   474,880          int x=cell_ind/(dim_y*dim_z);
   678,400          int y=(cell_ind%(dim_y*dim_z))/dim_z;
   678,400          int z=(cell_ind%(dim_y*dim_z))%dim_z;
         .  
         .          //make sure cell is a feature cell
   814,080          if(cells[cell_ind].feature==0) continue;

         .  
         .          /* cell is a feature cell */
         .  
         .          //get neighbor cell indexes
     3,884          vector<int> neighbor_inds;

     1,942          if(x!=0){
    10,681              int index = (x-1)*(dim_y*dim_z)+(y)*(dim_z)+(z);
     5,826              neighbor_inds.push_back(index);

         .          }
     3,884          if(x!=dim_x-1){
    10,681              int index = (x+1)*(dim_y*dim_z)+(y)*(dim_z)+(z);
     5,826              neighbor_inds.push_back(index);

         .          }
     1,942          if(y!=0){
    10,681              int index = (x)*(dim_y*dim_z)+(y-1)*(dim_z)+(z);
     5,826              neighbor_inds.push_back(index);

         .          }
     3,884          if(y!=dim_y-1){
    10,681              int index = (x)*(dim_y*dim_z)+(y+1)*(dim_z)+(z);
     5,826              neighbor_inds.push_back(index);

         .          }
     1,942          if(z!=0){
    10,681              int index = (x)*(dim_y*dim_z)+(y)*(dim_z)+(z-1);
     5,826              neighbor_inds.push_back(index);

         .          }
     3,884          if(z!=dim_z-1){
    10,681              int index = (x)*(dim_y*dim_z)+(y)*(dim_z)+(z+1);
     5,826              neighbor_inds.push_back(index);

         .          }
         .  
         .          //iterate through neighbors
    75,738          for(int neighbor_iter=0; neighbor_iter<neighbor_inds.size(); neighbor_iter++){

         .  
         .              //index=index for target cell
         .              //n_index=index for current neighboring cell
    52,438              int neighbor_ind=neighbor_inds[neighbor_iter];
       650  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .  
         .              //make sure neighbor is on surface and a feature cell
   109,063              if((!cells[neighbor_ind].isSurface)||(cells[neighbor_ind].feature==0)) continue;

         .  
         .              /* neighbor is on surface and a feature cell */
         .  
         .              //get all shared edges+triangles
     3,472              vector<shared_triangle> shared_triangles;

       802  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    42,933              for(int i=0; i<cells[cell_ind].triangles.size(); i++){


   115,518                  for(int j=0; j<cells[neighbor_ind].triangles.size(); j++){


         .                      //get edges for each triangle
    19,464                      vector<TRIANGLE> cell_tr;

    38,928                      vector<TRIANGLE> neighbor_tr;


    97,324                      cell_tr.push_back(cells[cell_ind].triangles[i]);
       738  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)    97,320                      neighbor_tr.push_back(cells[neighbor_ind].triangles[j]);    48,660                      vector<vector<XYZ> > cell_tr_edges = getEdges(cell_tr);

73,515,298  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:getEdges(std::vector<TRIANGLE, std::allocator<TRIANGLE> > const&) (4866x)
    48,660                      vector<vector<XYZ> > neighbor_tr_edges = getEdges(neighbor_tr);

73,509,989  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:getEdges(std::vector<TRIANGLE, std::allocator<TRIANGLE> > const&) (4866x)
     4,866                      bool is_shared=false;
   211,908                      for(int n=0; n<cell_tr_edges.size(); n++){

   630,588                          for(int m=0; m<neighbor_tr_edges.size(); m++){

         .                              //check if edges are the same
 1,809,526                              if(sameEdge(cell_tr_edges[n],neighbor_tr_edges[m])){

18,220,500  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:sameEdge(std::vector<XYZ, std::allocator<XYZ> >, std::vector<XYZ, std::allocator<XYZ> >) (42082x)


       214                                  is_shared=true;
       860                                  shared_triangle s_tri;
       650  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    13,054  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:shared_triangle::shared_triangle() (214x)
     2,786                                  s_tri.shared_edge = cell_tr_edges[n];

       722  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

       428                                  s_tri.cell_triangle_index = i;
       428                                  s_tri.neighbor_triangle_index = j;
     1,288                                  shared_triangles.push_back(s_tri);
       890  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     1,288                                  break;
       690  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    54,784  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:shared_triangle::~shared_triangle() (214x)
         .                              }
         .                          }
    28,554                          if(is_shared) break;
         .                      }
    19,464                  }

         .              }
         .  
         .              /* construct new triangles from shared edges and remove altered triangles from gridcells */
    12,758              for(int tri=0; tri<shared_triangles.size(); tri++){

         .                  /* Create new triangles */
       856                  TRIANGLE t1;
    11,342  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:TRIANGLE::TRIANGLE() (214x)
     2,782                  for(int i=0; i<3; i++){
    26,326                      t1.p[i] = cells[cell_ind].triangles[shared_triangles[tri].cell_triangle_index].p[i];
       794  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    14,124  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (642x)


         .                  }
         .                  //perform point switch
     2,782                  for(int i=0; i<3; i++){
    14,128                      if(t1.p[i]==cells[cell_ind].feature_point){
       562  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    59,064  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:operator==(XYZ const&, XYZ const&) (642x)

     6,634                          t1.p[(i+2)%3] = cells[neighbor_ind].feature_point;
     4,708  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (214x)

         .                      }
         .                  }
         .  
       856                  TRIANGLE t2;
    11,342  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:TRIANGLE::TRIANGLE() (214x)
     2,782                  for(int i=0; i<3; i++){
    26,322                      t2.p[i] = cells[neighbor_ind].triangles[shared_triangles[tri].neighbor_triangle_index].p[i];

    14,124  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (642x)


         .                  }
         .                  //perform point switch
     2,782                  for(int i=0; i<3; i++){
    14,124                      if(t2.p[i]==cells[neighbor_ind].feature_point){

    59,064  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:operator==(XYZ const&, XYZ const&) (642x)
     6,634                          t2.p[(i+2)%3] = cells[cell_ind].feature_point;

     4,708  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (214x)
         .                      }
         .                  }
         .  
         .                  //check if triangles are degenerate
     2,782                  if(XYZ::dist(t1.p[0],t1.p[1])>=0.00001){
    15,836  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (214x)
     2,996                      if(XYZ::dist(t1.p[1],t1.p[2])>=0.00001){
    15,836  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (214x)
     4,066                          if(XYZ::dist(t1.p[2],t1.p[0])>=0.00001) new_triangles.push_back(t1);
    15,836  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (214x)

         .                      }
         .                  }
     2,782                  if(XYZ::dist(t2.p[0],t2.p[1])>=0.00001){
    15,836  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (214x)
     2,996                      if(XYZ::dist(t2.p[1],t2.p[2])>=0.00001){
    15,836  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (214x)
     4,066                          if(XYZ::dist(t2.p[2],t2.p[0])>=0.00001) new_triangles.push_back(t2);

    15,836  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (214x)
         .                      }
         .                  }
         .  
         .                  /* remove triangles from cells */
         .                  //remove triangle from target cell by shifting all subsequent triangles down
    12,167                  for(int i=shared_triangles[tri].cell_triangle_index; i<cells[cell_ind].triangles.size()-1; i++){     4,225                      for(int j=0; j<3; j++){
    47,775                          cells[cell_ind].triangles[i].p[j]=cells[cell_ind].triangles[i+1].p[j];


    21,450  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (975x)
         .                      }
         .                  }
     2,358                  cells[cell_ind].triangles.pop_back();


       794  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .                  //remove triangle from neighbor cell by shifting all subsequent triangles down
    12,224                  for(int i=shared_triangles[tri].neighbor_triangle_index; i<cells[neighbor_ind].triangles.size()-1; i++){     4,264                      for(int j=0; j<3; j++){
    48,216                          cells[neighbor_ind].triangles[i].p[j]=cells[neighbor_ind].triangles[i+1].p[j];


    21,648  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::operator=(XYZ const&) (984x)
         .                      }
         .                  }
     2,354                  cells[neighbor_ind].triangles.pop_back();


         .  
         .                  //decrement subsequent triangle indexes
     2,996                  for(int i=tri+1; i<shared_triangles.size(); i++){

         .                      if(shared_triangles[i].cell_triangle_index>shared_triangles[tri].cell_triangle_index)
         .                          shared_triangles[i].cell_triangle_index-=1;
         .                      if(shared_triangles[i].neighbor_triangle_index>shared_triangles[tri].neighbor_triangle_index)
         .                          shared_triangles[i].neighbor_triangle_index-=1;
         .                  }
         .  
         .              }//end of shared edge handling (for loop through shared edges)
         .  
     3,472          }//done iterating through neighbors (for loop through neighbor cells)
       794  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .  
     3,884      }//end of edge flipping (for loop through all cells)

         .  
         .      //return new triangles from edge flipping
         1      return new_triangles;
         6  }
         .  
         .  
         .  //run marching cubes and save to ply file
        17  void mcubes(gridPtr in, gridPtr surfaceMap, const vector<Eigen::Vector3f> &normals, float isolevel, float feat_thresh, float corner_thresh, const char* filename, const bool USING_FEATURES){
         .      //get GridCell data
        47      vector<GRIDCELL> cells = getGridCells(in, surfaceMap, normals, feat_thresh, corner_thresh, USING_FEATURES);


     3,109  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
1,071,245,227  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:getGridCells(boost::shared_ptr<grid>, boost::shared_ptr<grid>, std::vector<Eigen::Matrix<float, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<float, 3, 1, 0, 3, 1> > > const&, float, float, bool) (1x)
         .      //populate triangle data
   746,252      for(int i=0; i<cells.size(); i++){

 1,153,288          Polygonise(cells[i],isolevel, normals, USING_FEATURES);
188,380,086  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:Polygonise(GRIDCELL&, float, std::vector<Eigen::Matrix<float, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<float, 3, 1, 0, 3, 1> > > const&, bool) (67840x)

     1,861  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
         .      }
         .  
         8      vector<TRIANGLE> new_triangles;


         2      if(USING_FEATURES){
        35          new_triangles=flipEdges(cells, in);
286,593,941  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:flipEdges(std::vector<GRIDCELL, std::allocator<GRIDCELL> >&, boost::shared_ptr<grid>) (1x)

     1,835  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)         .      }
         .      //new_triangles populated with triangles from flipped edges (if using features)
         .  
         .      //populate list of all triangles
         8      vector<TRIANGLE> all_triangles;


   746,252      for(int i=0; i<cells.size(); i++){

 1,403,980          for(int j=0; j<cells[i].triangles.size(); j++){


   127,800              all_triangles.push_back(cells[i].triangles[j]);         .          }
         .      }
         .  
     4,720      for(int i=0; i<new_triangles.size(); i++){

     5,564          all_triangles.push_back(new_triangles[i]);


         .      }
         .  
         .      //list of triangles complete
         .  
         .  
         .      //create hashtable for checking point collisions
        39      pointHashmap indexer(all_triangles, in);
 1,831,795  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:pointHashmap::~pointHashmap() (1x)
     1,685  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
29,300,025  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.cpp:pointHashmap::pointHashmap(std::vector<TRIANGLE, std::allocator<TRIANGLE> >, boost::shared_ptr<grid>) (1x)
         .      //all points are now indexed
         .  
         .      //create ply file
        16      ofstream myfile;
     2,217  => ???:std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream() (1x)
     5,624  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
       132  => ???:std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream() (1x)
        19      myfile.open(filename);
     3,739  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

     1,328  => ???:std::basic_ofstream<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode) (1x)
         .      //create header
        18      myfile<<"ply"<<endl;
     5,182  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
     1,854  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
     5,735  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
        10      myfile<<"format ascii 1.0"<<endl;
       222  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
       251  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
        19      myfile<<"element vertex "<<indexer.numPoints<<endl;
       356  => ???:std::ostream::operator<<(int) (1x)
     2,274  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       204  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
       251  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
        10      myfile<<"property float x"<<endl;
       251  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
       222  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
        10      myfile<<"property float y"<<endl;
       222  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
       251  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
        10      myfile<<"property float z"<<endl;
       222  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
       251  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
        23      myfile<<"element face "<<all_triangles.size()<<endl;

       335  => ???:std::ostream::operator<<(unsigned long) (1x)
     2,207  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       204  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
       251  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
        10      myfile<<"property list uchar int vertex_indices"<<endl;
       251  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
       227  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
        10      myfile<<"end_header"<<endl;
       204  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
       251  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
         .      //stream points data
    13,637      for(int i=0; i<indexer.numPoints; i++){
    13,632          Eigen::Vector3f pnt;

    51,120          pnt[0]=indexer.points[i].x;


    51,120          pnt[1]=indexer.points[i].y;


    51,120          pnt[2]=indexer.points[i].z;


    57,940          pnt = in->getCloudPoint(pnt);

     1,904  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 6,255,222  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::getCloudPoint(Eigen::Matrix<float, 3, 1, 0, 3, 1> const&) (3408x)
   160,180          myfile<<pnt[0]<<" "<<pnt[1]<<" "<<pnt[2]<<endl;
25,408,098  => ???:std::ostream::operator<<(float) (10224x)
     2,172  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   855,408  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (3408x)
 1,410,912  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (6816x)

         .      }
         .      //stream triangle data
    75,010      for(int i=0; i<all_triangles.size(); i++){

    95,456          int index_1 = indexer.index(all_triangles[i].p[0]);

10,487,110  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.cpp:pointHashmap::index(XYZ const&) (6818x)
       707  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    95,452          int index_2 = indexer.index(all_triangles[i].p[1]);
10,494,002  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.cpp:pointHashmap::index(XYZ const&) (6818x)

    95,452          int index_3 = indexer.index(all_triangles[i].p[2]);
10,485,032  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.cpp:pointHashmap::index(XYZ const&) (6818x)

    40,908          if(index_1==-1 || index_2==-1 || index_3==-1){
         .              cerr<<"Hashmap failed. Point not found."<<endl;
         .              myfile.close();
         .              exit(1);
         .          }
   224,994          myfile<<"3 "<<index_1<<" "<<index_2<<" "<<index_3<<endl;
 7,041,285  => ???:std::ostream::operator<<(int) (20454x)
 4,254,432  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (20454x)
 1,711,318  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (6818x)
         .      }
         .      //close file
        16      myfile.close();
     3,541  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

       748  => ???:std::basic_ofstream<char, std::char_traits<char> >::close() (1x)
         .  
        26  }
       213  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.cpp:__static_initialization_and_destruction_0(int, int) (1x)
         .  
         .  
         .  

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
         Ir 

-- line 19 ----------------------------------------
          .  #endif
          .  
          .  namespace Eigen {
          .  
          .  namespace internal {
          .  
          .  struct constructor_without_unaligned_array_assert {};
          .  
  1,729,066  template<typename T, int Size> void check_static_allocation_size()
          .  {
          .    // if EIGEN_STACK_ALLOCATION_LIMIT is defined to 0, then no limit
          .    #if EIGEN_STACK_ALLOCATION_LIMIT
          .    EIGEN_STATIC_ASSERT(Size * sizeof(T) <= EIGEN_STACK_ALLOCATION_LIMIT, OBJECT_ALLOCATED_ON_STACK_IS_TOO_BIG);
          .    #endif
  1,729,066  }
          .  
          .  /** \internal
          .    * Static array. If the MatrixOrArrayOptions require auto-alignment, the array will be automatically aligned:
          .    * to 16 bytes boundary if the total size is a multiple of 16 bytes.
          .    */
          .  template <typename T, int Size, int MatrixOrArrayOptions,
          .            int Alignment = (MatrixOrArrayOptions&DontAlign) ? 0
          .                          : (((Size*sizeof(T))%16)==0) ? 16
          .                          : 0 >
          .  struct plain_array
          .  {
          .    T array[Size];
          .  
  3,157,560    plain_array() 
          .    { 
  1,578,792      check_static_allocation_size<T,Size>();
      1,024  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  1,578,780    }
          .  
          .    plain_array(constructor_without_unaligned_array_assert) 
          .    { 
          .      check_static_allocation_size<T,Size>();
          .    }
          .  };
          .  
          .  #if defined(EIGEN_DISABLE_UNALIGNED_ARRAY_ASSERT)
          .    #define EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT(sizemask)
          .  #elif EIGEN_GNUC_AT_LEAST(4,7) 
          .    // GCC 4.7 is too aggressive in its optimizations and remove the alignement test based on the fact the array is declared to be aligned.
          .    // See this bug report: http://gcc.gnu.org/bugzilla/show_bug.cgi?id=53900
          .    // Hiding the origin of the array pointer behind a function argument seems to do the trick even if the function is inlined:
          .    template<typename PtrType>
     75,143    EIGEN_ALWAYS_INLINE PtrType eigen_unaligned_array_assert_workaround_gcc47(PtrType array) { return array; }
          .    #define EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT(sizemask) \
          .      eigen_assert((reinterpret_cast<size_t>(eigen_unaligned_array_assert_workaround_gcc47(array)) & sizemask) == 0 \
          .                && "this assertion is explained here: " \
          .                "http://eigen.tuxfamily.org/dox-devel/group__TopicUnalignedArrayAssert.html" \
          .                " **** READ THIS WEB PAGE !!! ****");
          .  #else
          .    #define EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT(sizemask) \
          .      eigen_assert((reinterpret_cast<size_t>(array) & sizemask) == 0 \
-- line 73 ----------------------------------------
-- line 76 ----------------------------------------
          .                " **** READ THIS WEB PAGE !!! ****");
          .  #endif
          .  
          .  template <typename T, int Size, int MatrixOrArrayOptions>
          .  struct plain_array<T, Size, MatrixOrArrayOptions, 16>
          .  {
          .    EIGEN_USER_ALIGN16 T array[Size];
          .  
    300,572    plain_array() 
          .    { 
    375,715      EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT(0xf);
    148,213      check_static_allocation_size<T,Size>();

    150,286    }
          .  
          .    plain_array(constructor_without_unaligned_array_assert) 
          .    { 
          .      check_static_allocation_size<T,Size>();
          .    }
          .  };
          .  
          .  template <typename T, int MatrixOrArrayOptions, int Alignment>
-- line 96 ----------------------------------------
-- line 117 ----------------------------------------
          .    */
          .  template<typename T, int Size, int _Rows, int _Cols, int _Options> class DenseStorage;
          .  
          .  // purely fixed-size matrix
          .  template<typename T, int Size, int _Rows, int _Cols, int _Options> class DenseStorage
          .  {
          .      internal::plain_array<T,Size,_Options> m_data;
          .    public:
  8,624,584      DenseStorage() {}

          .      DenseStorage(internal::constructor_without_unaligned_array_assert)
          .        : m_data(internal::constructor_without_unaligned_array_assert()) {}
          .      DenseStorage(const DenseStorage& other) : m_data(other.m_data) {}
          .      DenseStorage& operator=(const DenseStorage& other)
          .      {
          .        if (this != &other) m_data = other.m_data;
          .        return *this;
          .      }
        206      DenseStorage(DenseIndex,DenseIndex,DenseIndex) {}

          .      void swap(DenseStorage& other) { std::swap(m_data,other.m_data); }
256,528,763      static DenseIndex rows(void) {return _Rows;}
407,814,140      static DenseIndex cols(void) {return _Cols;}
          .      void conservativeResize(DenseIndex,DenseIndex,DenseIndex) {}
    236,544      void resize(DenseIndex,DenseIndex,DenseIndex) {}
 11,889,774      const T *data() const { return m_data.array; }
241,456,455      T *data() { return m_data.array; }
          .  };
          .  
          .  // null matrix
          .  template<typename T, int _Rows, int _Cols, int _Options> class DenseStorage<T, 0, _Rows, _Cols, _Options>
          .  {
          .    public:
          .      DenseStorage() {}
          .      DenseStorage(internal::constructor_without_unaligned_array_assert) {}
-- line 149 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
     Ir 

-- line 56 ----------------------------------------
      .      CoeffReadCost = _MatrixTypeNested::CoeffReadCost,
      .      MatrixTypeOuterStride = outer_stride_at_compile_time<MatrixType>::ret,
      .      InnerStrideAtCompileTime = MatrixTypeOuterStride == Dynamic ? Dynamic : MatrixTypeOuterStride+1,
      .      OuterStrideAtCompileTime = 0
      .    };
      .  };
      .  }
      .  
     23  template<typename MatrixType, int _DiagIndex> class Diagonal

    977  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      .     : public internal::dense_xpr_base< Diagonal<MatrixType,_DiagIndex> >::type
      .  {
      .    public:
      .  
      .      enum { DiagIndex = _DiagIndex };
      .      typedef typename internal::dense_xpr_base<Diagonal>::type Base;
      .      EIGEN_DENSE_PUBLIC_INTERFACE(Diagonal)
      .  
     30      inline Diagonal(MatrixType& matrix, Index a_index = DiagIndex) : m_matrix(matrix), m_index(a_index) {}

  2,050  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

      .  
      .      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Diagonal)
      .  
     18      inline Index rows() const
      .      { return m_index.value()<0 ? (std::min<Index>)(m_matrix.cols(),m_matrix.rows()+m_index.value()) : (std::min<Index>)(m_matrix.rows(),m_matrix.cols()-m_index.value()); }
      .  
     12      inline Index cols() const { return 1; }
      .  
      .      inline Index innerStride() const
      .      {
      .        return m_matrix.outerStride() + 1;
      .      }
      .  
      .      inline Index outerStride() const
      .      {
-- line 88 ----------------------------------------
-- line 104 ----------------------------------------
      .        return m_matrix.const_cast_derived().coeffRef(row+rowOffset(), row+colOffset());
      .      }
      .  
      .      inline const Scalar& coeffRef(Index row, Index) const
      .      {
      .        return m_matrix.const_cast_derived().coeffRef(row+rowOffset(), row+colOffset());
      .      }
      .  
327,040      inline CoeffReturnType coeff(Index row, Index) const
      .      {
981,132        return m_matrix.coeff(row+rowOffset(), row+colOffset());  2,875  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
280,320      }
      .  
      .      inline Scalar& coeffRef(Index idx)
      .      {
      .        EIGEN_STATIC_ASSERT_LVALUE(MatrixType)
      .        return m_matrix.const_cast_derived().coeffRef(idx+rowOffset(), idx+colOffset());
      .      }
      .  
      .      inline const Scalar& coeffRef(Index idx) const
-- line 123 ----------------------------------------
-- line 143 ----------------------------------------
      .  
      .    protected:
      .      typename MatrixType::Nested m_matrix;
      .      const internal::variable_if_dynamicindex<Index, DiagIndex> m_index;
      .  
      .    private:
      .      // some compilers may fail to optimize std::max etc in case of compile-time constants...
      .      EIGEN_STRONG_INLINE Index absDiagIndex() const { return m_index.value()>0 ? m_index.value() : -m_index.value(); }
186,880      EIGEN_STRONG_INLINE Index rowOffset() const { return m_index.value()>0 ? 0 : -m_index.value(); }
186,880      EIGEN_STRONG_INLINE Index colOffset() const { return m_index.value()>0 ? m_index.value() : 0; }
      .      // triger a compile time error is someone try to call packet
      .      template<int LoadMode> typename MatrixType::PacketReturnType packet(Index) const;
      .      template<int LoadMode> typename MatrixType::PacketReturnType packet(Index,Index) const;
      .  };
      .  
      .  /** \returns an expression of the main diagonal of the matrix \c *this
      .    *
      .    * \c *this is not required to be square.
-- line 160 ------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 184 ----------------------------------------
        .        * of stored coefficients. */
        .      inline Index nonZeros() const { return size(); }
        .  
        .      /** \returns the outer size.
        .        *
        .        * \note For a vector, this returns just 1. For a matrix (non-vector), this is the major dimension
        .        * with respect to the \ref TopicStorageOrders "storage order", i.e., the number of columns for a
        .        * column-major matrix, and the number of rows for a row-major matrix. */
  219,186      Index outerSize() const
        .      {
        .        return IsVectorAtCompileTime ? 1
   73,062             : int(IsRowMajor) ? this->rows() : this->cols();
  146,124      }
        .  
        .      /** \returns the inner size.
        .        *
        .        * \note For a vector, this is just the size. For a matrix (non-vector), this is the minor dimension
        .        * with respect to the \ref TopicStorageOrders "storage order", i.e., the number of rows for a 
        .        * column-major matrix, and the number of columns for a row-major matrix. */
  637,156      Index innerSize() const
        .      {
        .        return IsVectorAtCompileTime ? this->size()
  637,168             : int(IsRowMajor) ? this->cols() : this->rows();
    1,103  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  318,578      }
        .  
        .      /** Only plain matrices/arrays, not expressions, may be resized; therefore the only useful resize methods are
        .        * Matrix::resize() and Array::resize(). The present method only asserts that the new size equals the old size, and does
        .        * nothing else.
        .        */
        .      void resize(Index newSize)
        .      {
        .        EIGEN_ONLY_USED_FOR_DEBUG(newSize);
-- line 215 ----------------------------------------
-- line 364 ----------------------------------------
        .        // size types on MSVC.
        .        return typename internal::eval<Derived>::type(derived());
        .      }
        .  
        .      /** swaps *this with the expression \a other.
        .        *
        .        */
        .      template<typename OtherDerived>
   11,732      void swap(const DenseBase<OtherDerived>& other,
        .                int = OtherDerived::ThisConstantIsPrivateInPlainObjectBase)
        .      {
   33,536        SwapWrapper<Derived>(derived()).lazyAssign(other.derived());
    5,467  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)
    6,704      }
        .  
        .      /** swaps *this with the matrix or array \a other.
        .        *
        .        */
        .      template<typename OtherDerived>
        .      void swap(PlainObjectBase<OtherDerived>& other)
        .      {
        .        SwapWrapper<Derived>(derived()).lazyAssign(other.derived());
-- line 384 ----------------------------------------
-- line 493 ----------------------------------------
        .      // disable the use of evalTo for dense objects with a nice compilation error
        .      template<typename Dest> inline void evalTo(Dest& ) const
        .      {
        .        EIGEN_STATIC_ASSERT((internal::is_same<Dest,void>::value),THE_EVAL_EVALTO_FUNCTION_SHOULD_NEVER_BE_CALLED_FOR_DENSE_OBJECTS);
        .      }
        .  
        .    protected:
        .      /** Default constructor. Do nothing. */
4,637,360      DenseBase()
4,637,446      {

        .        /* Just checks for self-consistency of the flags.
        .         * Only do it when debugging Eigen, as this borders on paranoiac and could slow compilation down
        .         */
        .  #ifdef EIGEN_INTERNAL_DEBUGGING
        .        EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, int(IsRowMajor))
        .                          && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, int(!IsRowMajor))),
        .                            INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION)
        .  #endif
2,318,680      }
        .  
        .    private:
        .      explicit DenseBase(int);
        .      DenseBase(int,int);
        .      template<typename OtherDerived> explicit DenseBase(const DenseBase<OtherDerived>&);
        .  };
        .  
        .  } // end namespace Eigen
-- line 519 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 93 ----------------------------------------
         .  #ifndef EIGEN_PARSED_BY_DOXYGEN
         .      /** type of the equivalent square matrix */
         .      typedef Matrix<Scalar,EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime),
         .                            EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;
         .  #endif // not EIGEN_PARSED_BY_DOXYGEN
         .  
         .      /** \returns the size of the main diagonal, which is min(rows(),cols()).
         .        * \sa rows(), cols(), SizeAtCompileTime. */
    11,454      inline Index diagonalSize() const { return (std::min)(rows(),cols()); }         .  
         .      /** \brief The plain matrix type corresponding to this expression.
         .        *
         .        * This is not necessarily exactly the return type of eval(). In the case of plain matrices,
         .        * the return type of eval() is a const reference to a matrix, not a matrix! It is however guaranteed
         .        * that the return type of eval() is either PlainObject or const PlainObject&.
         .        */
         .      typedef Matrix<typename internal::traits<Derived>::Scalar,
-- line 109 ----------------------------------------
-- line 493 ----------------------------------------
         .      template<int Size> VectorBlock<Derived,Size> end();
         .      template<int Size> const VectorBlock<const Derived,Size> end() const;
         .  
         .      Minor<Derived> minor(Index row, Index col);
         .      const Minor<Derived> minor(Index row, Index col) const;
         .  #endif
         .  
         .    protected:
10,260,684      MatrixBase() : Base() {}
       930  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .  
         .    private:
         .      explicit MatrixBase(int);
         .      MatrixBase(int,int);
         .      template<typename OtherDerived> explicit MatrixBase(const MatrixBase<OtherDerived>&);
         .    protected:
         .      // mixing arrays and matrices is not legal
         .      template<typename OtherDerived> Derived& operator+=(const ArrayBase<OtherDerived>& )
-- line 509 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 59 ----------------------------------------
        .  class CwiseUnaryOp : internal::no_assignment_operator,
        .    public CwiseUnaryOpImpl<UnaryOp, XprType, typename internal::traits<XprType>::StorageKind>
        .  {
        .    public:
        .  
        .      typedef typename CwiseUnaryOpImpl<UnaryOp, XprType,typename internal::traits<XprType>::StorageKind>::Base Base;
        .      EIGEN_GENERIC_PUBLIC_INTERFACE(CwiseUnaryOp)
        .  
   39,240      inline CwiseUnaryOp(const XprType& xpr, const UnaryOp& func = UnaryOp())
  130,820        : m_xpr(xpr), m_functor(func) {}    3,674  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
        .  
   35,970      EIGEN_STRONG_INLINE Index rows() const { return m_xpr.rows(); }

   35,970      EIGEN_STRONG_INLINE Index cols() const { return m_xpr.cols(); }

        .  
        .      /** \returns the functor representing the unary operation */
  343,350      const UnaryOp& functor() const { return m_functor; }
        .  
        .      /** \returns the nested expression */
        .      const typename internal::remove_all<typename XprType::Nested>::type&
  343,350      nestedExpression() const { return m_xpr; }
        .  
        .      /** \returns the nested expression */
        .      typename internal::remove_all<typename XprType::Nested>::type&
        .      nestedExpression() { return m_xpr.const_cast_derived(); }
        .  
        .    protected:
        .      typename XprType::Nested m_xpr;
        .      const UnaryOp m_functor;
        .  };
        .  
        .  // This is the generic implementation for dense storage.
        .  // It can be used for any expression types implementing the dense concept.
        .  template<typename UnaryOp, typename XprType>
   65,408  class CwiseUnaryOpImpl<UnaryOp,XprType,Dense>
    1,464  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .    : public internal::dense_xpr_base<CwiseUnaryOp<UnaryOp, XprType> >::type
        .  {
        .    public:
        .  
        .      typedef CwiseUnaryOp<UnaryOp, XprType> Derived;
        .      typedef typename internal::dense_xpr_base<CwiseUnaryOp<UnaryOp, XprType> >::type Base;
        .      EIGEN_DENSE_PUBLIC_INTERFACE(Derived)
        .  
  343,350      EIGEN_STRONG_INLINE const Scalar coeff(Index rowId, Index colId) const
        .      {
1,324,374        return derived().functor()(derived().nestedExpression().coeff(rowId, colId));
    4,163  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)

  294,300      }
        .  
        .      template<int LoadMode>
        .      EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const
        .      {
        .        return derived().functor().packetOp(derived().nestedExpression().template packet<LoadMode>(rowId, colId));
        .      }
        .  
        .      EIGEN_STRONG_INLINE const Scalar coeff(Index index) const
-- line 112 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 17 ----------------------------------------
        .  // associative functors:
        .  
        .  /** \internal
        .    * \brief Template functor to compute the sum of two scalars
        .    *
        .    * \sa class CwiseBinaryOp, MatrixBase::operator+, class VectorwiseOp, MatrixBase::sum()
        .    */
        .  template<typename Scalar> struct scalar_sum_op {
  365,310    EIGEN_EMPTY_STRUCT_CTOR(scalar_sum_op)
        .    EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a + b; }
        .    template<typename Packet>
        .    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
        .    { return internal::padd(a,b); }
        .    template<typename Packet>
  365,310    EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const
  438,376    { return internal::predux(a); }
    1,113  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_sum_op<Scalar> > {
        .    enum {
        .      Cost = NumTraits<Scalar>::AddCost,
        .      PacketAccess = packet_traits<Scalar>::HasAdd
        .    };
        .  };
-- line 40 ----------------------------------------
-- line 75 ----------------------------------------
        .  template<typename LhsScalar,typename RhsScalar> struct scalar_conj_product_op {
        .  
        .    enum {
        .      Conj = NumTraits<LhsScalar>::IsComplex
        .    };
        .    
        .    typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;
        .    
  803,682    EIGEN_EMPTY_STRUCT_CTOR(scalar_conj_product_op)
        .    EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const
        .    { return conj_helper<LhsScalar,RhsScalar,Conj,false>().pmul(a,b); }
        .    
        .    template<typename Packet>
  438,372    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
  657,562    { return conj_helper<Packet,Packet,Conj,false>().pmul(a,b); }
    1,159  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  };
        .  template<typename LhsScalar,typename RhsScalar>
        .  struct functor_traits<scalar_conj_product_op<LhsScalar,RhsScalar> > {
        .    enum {
        .      Cost = NumTraits<LhsScalar>::MulCost,
        .      PacketAccess = internal::is_same<LhsScalar, RhsScalar>::value && packet_traits<LhsScalar>::HasMul
        .    };
        .  };
-- line 97 ----------------------------------------
-- line 181 ----------------------------------------
        .  // other binary functors:
        .  
        .  /** \internal
        .    * \brief Template functor to compute the difference of two scalars
        .    *
        .    * \sa class CwiseBinaryOp, MatrixBase::operator-
        .    */
        .  template<typename Scalar> struct scalar_difference_op {
1,242,060    EIGEN_EMPTY_STRUCT_CTOR(scalar_difference_op)
        .    EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a - b; }
        .    template<typename Packet>
  438,372    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
  584,500    { return internal::psub(a,b); }
      975  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_difference_op<Scalar> > {
        .    enum {
        .      Cost = NumTraits<Scalar>::AddCost,
        .      PacketAccess = packet_traits<Scalar>::HasSub
        .    };
        .  };
-- line 201 ----------------------------------------
-- line 206 ----------------------------------------
        .    * \sa class CwiseBinaryOp, Cwise::operator/()
        .    */
        .  template<typename LhsScalar,typename RhsScalar> struct scalar_quotient_op {
        .    enum {
        .      // TODO vectorize mixed product
        .      Vectorizable = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasDiv && packet_traits<RhsScalar>::HasDiv
        .    };
        .    typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;
       11    EIGEN_EMPTY_STRUCT_CTOR(scalar_quotient_op)
        .    EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a / b; }
        .    template<typename Packet>
        6    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
       12    { return internal::pdiv(a,b); }
    1,213  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  };
        .  template<typename LhsScalar,typename RhsScalar>
        .  struct functor_traits<scalar_quotient_op<LhsScalar,RhsScalar> > {
        .    enum {
        .      Cost = (NumTraits<LhsScalar>::MulCost + NumTraits<RhsScalar>::MulCost), // rough estimate!
        .      PacketAccess = scalar_quotient_op<LhsScalar,RhsScalar>::Vectorizable
        .    };
        .  };
-- line 226 ----------------------------------------
-- line 550 ----------------------------------------
        .  struct functor_traits<scalar_quotient1_op<Scalar> >
        .  { enum { Cost = 2 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };
        .  
        .  // nullary functors
        .  
        .  template<typename Scalar>
        .  struct scalar_constant_op {
        .    typedef typename packet_traits<Scalar>::type Packet;
  114,470    EIGEN_STRONG_INLINE scalar_constant_op(const scalar_constant_op& other) : m_other(other.m_other) { }
   69,220    EIGEN_STRONG_INLINE scalar_constant_op(const Scalar& other) : m_other(other) { }
        .    template<typename Index>
       36    EIGEN_STRONG_INLINE const Scalar operator() (Index, Index = 0) const { return m_other; }
        .    template<typename Index>
  855,137    EIGEN_STRONG_INLINE const Packet packetOp(Index, Index = 0) const { return internal::pset1<Packet>(m_other); }

        .    const Scalar m_other;
        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_constant_op<Scalar> >
        .  // FIXME replace this packet test by a safe one
        .  { enum { Cost = 1, PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };
        .  
        .  template<typename Scalar> struct scalar_identity_op {
-- line 571 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
           Ir 

-- line 71 ----------------------------------------
            .    template<typename _Tp, typename _Alloc>
            .      struct _Vector_base
            .      {
            .        typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
            .          rebind<_Tp>::other _Tp_alloc_type;
            .        typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
            .         	pointer;
            .  
    5,003,632        struct _Vector_impl 
        1,143  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

            .        : public _Tp_alloc_type
            .        {
            .  	pointer _M_start;
            .  	pointer _M_finish;
            .  	pointer _M_end_of_storage;
            .  
    1,022,108  	_Vector_impl()
    2,555,306  	: _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
          944  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      511,054  	{ }
            .  
    1,901,705  	_Vector_impl(_Tp_alloc_type const& __a)
    4,564,112  	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
        1,167  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      760,682  	{ }
            .  
            .  #if __cplusplus >= 201103L
            .  	_Vector_impl(_Tp_alloc_type&& __a)
            .  	: _Tp_alloc_type(std::move(__a)),
            .  	  _M_start(0), _M_finish(0), _M_end_of_storage(0)
            .  	{ }
            .  #endif
            .  
-- line 100 ----------------------------------------
-- line 105 ----------------------------------------
            .  	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
            .  	}
            .        };
            .        
            .      public:
            .        typedef _Alloc allocator_type;
            .  
            .        _Tp_alloc_type&
    3,799,596        _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3,799,596        { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
            .  
            .        const _Tp_alloc_type&
    5,078,442        _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    5,078,442        { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
            .  
            .        allocator_type
            .        get_allocator() const _GLIBCXX_NOEXCEPT
            .        { return allocator_type(_M_get_Tp_allocator()); }
            .  
    1,022,108        _Vector_base()
    1,533,198        : _M_impl() { }
        1,256  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

            .  
          110        _Vector_base(const allocator_type& __a)
          175        : _M_impl(__a) { }

            .  
            .        _Vector_base(size_t __n)
            .        : _M_impl()
            .        { _M_create_storage(__n); }
            .  
    2,662,268        _Vector_base(size_t __n, const allocator_type& __a)
    2,281,960        : _M_impl(__a)

          897  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    4,183,580        { _M_create_storage(__n); }
          889  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

            .  
            .  #if __cplusplus >= 201103L
            .        _Vector_base(_Tp_alloc_type&& __a)
            .        : _M_impl(std::move(__a)) { }
            .  
            .        _Vector_base(_Vector_base&& __x)
            .        : _M_impl(std::move(__x._M_get_Tp_allocator()))
            .        { this->_M_impl._M_swap_data(__x._M_impl); }
-- line 144 ----------------------------------------
-- line 151 ----------------------------------------
            .  	else
            .  	  {
            .  	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
            .  	    _M_create_storage(__n);
            .  	  }
            .        }
            .  #endif
            .  
    2,501,800        ~_Vector_base()
    2,501,808        { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage

   11,496,027  		      - this->_M_impl._M_start); }
        1,458  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

            .  
            .      public:
            .        _Vector_impl _M_impl;
            .  
            .        pointer
    5,202,715        _M_allocate(size_t __n)
            .        { return __n != 0 ? _M_impl.allocate(__n) : 0; }
            .  
            .        void
    7,770,702        _M_deallocate(pointer __p, size_t __n)
            .        {
    2,590,234  	if (__p)
    5,350,973  	  _M_impl.deallocate(__p, __n);

    2,590,234        }
            .  
            .      private:
            .        void
    1,901,620        _M_create_storage(size_t __n)
            .        {
    3,042,604  	this->_M_impl._M_start = this->_M_allocate(__n);

        1,103  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    1,521,296  	this->_M_impl._M_finish = this->_M_impl._M_start;
    3,781,100  	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
      760,648        }
            .      };
            .  
            .  
            .    /**
            .     *  @brief A standard container which offers fixed time access to
            .     *  individual elements in any order.
            .     *
            .     *  @ingroup sequences
-- line 192 ----------------------------------------
-- line 240 ----------------------------------------
            .        using _Base::_M_get_Tp_allocator;
            .  
            .      public:
            .        // [23.2.4.1] construct/copy/destroy
            .        // (assign() and get_allocator() are also listed in this section)
            .        /**
            .         *  @brief  Default constructor creates no elements.
            .         */
    1,022,112        vector()
    1,533,203        : _Base() { }

            .  
            .        /**
            .         *  @brief  Creates a %vector with no elements.
            .         *  @param  __a  An allocator object.
            .         */
            .        explicit
           15        vector(const allocator_type& __a)
           28        : _Base(__a) { }

        1,351  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
            .  
            .  #if __cplusplus >= 201103L
            .        /**
            .         *  @brief  Creates a %vector with default constructed elements.
            .         *  @param  __n  The number of elements to initially create.
            .         *  @param  __a  An allocator.
            .         *
            .         *  This constructor fills the %vector with @a __n default
-- line 265 ----------------------------------------
-- line 287 ----------------------------------------
            .         *  @brief  Creates a %vector with copies of an exemplar element.
            .         *  @param  __n  The number of elements to initially create.
            .         *  @param  __value  An element to copy.
            .         *  @param  __a  An allocator.
            .         *
            .         *  This constructor fills the %vector with @a __n copies of @a __value.
            .         */
            .        explicit
       59,024        vector(size_type __n, const value_type& __value = value_type(),
            .  	     const allocator_type& __a = allocator_type())
       51,654        : _Base(__n, __a)
          801  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

       88,544        { _M_fill_initialize(__n, __value); }
          873  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

            .  #endif
            .  
            .        /**
            .         *  @brief  %Vector copy constructor.
            .         *  @param  __x  A %vector of identical element and allocator types.
            .         *
            .         *  The newly-created %vector uses a copy of the allocation
            .         *  object used by @a __x.  All the elements of @a __x are copied,
            .         *  but any extra memory in
            .         *  @a __x (for fast expansion) will not be copied.
            .         */
    2,983,568        vector(const vector& __x)
            .        : _Base(__x.size(),
    7,086,006          _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
        1,941  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
    1,118,838        { this->_M_impl._M_finish =
            .  	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
            .  				      this->_M_impl._M_start,
    8,204,840  				      _M_get_Tp_allocator());
    2,237,676        }
            .  
            .  #if __cplusplus >= 201103L
            .        /**
            .         *  @brief  %Vector move constructor.
            .         *  @param  __x  A %vector of identical element and allocator types.
            .         *
            .         *  The newly-created %vector contains the exact contents of @a __x.
            .         *  The contents of @a __x are a valid, but unspecified %vector.
-- line 325 ----------------------------------------
-- line 390 ----------------------------------------
            .        template<typename _InputIterator,
            .  	       typename = std::_RequireInputIter<_InputIterator>>
            .          vector(_InputIterator __first, _InputIterator __last,
            .  	       const allocator_type& __a = allocator_type())
            .  	: _Base(__a)
            .          { _M_initialize_dispatch(__first, __last, __false_type()); }
            .  #else
            .        template<typename _InputIterator>
          112          vector(_InputIterator __first, _InputIterator __last,
            .  	       const allocator_type& __a = allocator_type())
           92  	: _Base(__a)
          785  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

            .          {
            .  	  // Check whether it's an integral type.  If so, it's not an iterator.
            .  	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
          120  	  _M_initialize_dispatch(__first, __last, _Integral());
        1,073  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

           70  	}
            .  #endif
            .  
            .        /**
            .         *  The dtor only erases the elements, and note that if the
            .         *  elements themselves are pointers, the pointed-to memory is
            .         *  not touched in any way.  Managing the pointer is the user's
            .         *  responsibility.
            .         */
    2,501,800        ~vector() _GLIBCXX_NOEXCEPT
    2,001,448        { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,

    9,006,512  		      _M_get_Tp_allocator()); }


        1,343  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
            .  
            .        /**
            .         *  @brief  %Vector assignment operator.
            .         *  @param  __x  A %vector of identical element and allocator types.
            .         *
            .         *  All the elements of @a __x are copied, but any extra memory in
            .         *  @a __x (for fast expansion) will not be copied.  Unlike the
            .         *  copy constructor, the allocator object is not copied.
-- line 424 ----------------------------------------
-- line 530 ----------------------------------------
            .  
            .        // iterators
            .        /**
            .         *  Returns a read/write iterator that points to the first
            .         *  element in the %vector.  Iteration is done in ordinary
            .         *  element order.
            .         */
            .        iterator
    2,639,744        begin() _GLIBCXX_NOEXCEPT
    5,939,424        { return iterator(this->_M_impl._M_start); }

            .  
            .        /**
            .         *  Returns a read-only (constant) iterator that points to the
            .         *  first element in the %vector.  Iteration is done in ordinary
            .         *  element order.
            .         */
            .        const_iterator
    1,492,660        begin() const _GLIBCXX_NOEXCEPT
    4,477,980        { return const_iterator(this->_M_impl._M_start); }

            .  
            .        /**
            .         *  Returns a read/write iterator that points one past the last
            .         *  element in the %vector.  Iteration is done in ordinary
            .         *  element order.
            .         */
            .        iterator
    2,582,412        end() _GLIBCXX_NOEXCEPT
    6,456,006        { return iterator(this->_M_impl._M_finish); }

            .  
            .        /**
            .         *  Returns a read-only (constant) iterator that points one past
            .         *  the last element in the %vector.  Iteration is done in
            .         *  ordinary element order.
            .         */
            .        const_iterator
    1,492,672        end() const _GLIBCXX_NOEXCEPT
    4,478,025        { return const_iterator(this->_M_impl._M_finish); }

            .  
            .        /**
            .         *  Returns a read/write reverse iterator that points to the
            .         *  last element in the %vector.  Iteration is done in reverse
            .         *  element order.
            .         */
            .        reverse_iterator
            .        rbegin() _GLIBCXX_NOEXCEPT
-- line 574 ----------------------------------------
-- line 637 ----------------------------------------
            .        const_reverse_iterator
            .        crend() const noexcept
            .        { return const_reverse_iterator(begin()); }
            .  #endif
            .  
            .        // [23.2.4.2] capacity
            .        /**  Returns the number of elements in the %vector.  */
            .        size_type
   13,251,339        size() const _GLIBCXX_NOEXCEPT
   48,129,105        { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
            .  
            .        /**  Returns the size() of the largest possible %vector.  */
            .        size_type
    5,279,904        max_size() const _GLIBCXX_NOEXCEPT
   11,879,644        { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }


            .  
            .  #if __cplusplus >= 201103L
            .        /**
            .         *  @brief  Resizes the %vector to the specified number of elements.
            .         *  @param  __new_size  Number of elements the %vector should contain.
            .         *
            .         *  This function will %resize the %vector to the specified
            .         *  number of elements.  If the number is smaller than the
-- line 659 ----------------------------------------
-- line 717 ----------------------------------------
            .        { _M_shrink_to_fit(); }
            .  #endif
            .  
            .        /**
            .         *  Returns the total number of elements that the %vector can
            .         *  hold before needing to allocate more memory.
            .         */
            .        size_type
          663        capacity() const _GLIBCXX_NOEXCEPT
            .        { return size_type(this->_M_impl._M_end_of_storage
        2,861  			 - this->_M_impl._M_start); }
            .  
            .        /**
            .         *  Returns true if the %vector is empty.  (Thus begin() would
            .         *  equal end().)
            .         */
            .        bool
            .        empty() const _GLIBCXX_NOEXCEPT
            .        { return begin() == end(); }
-- line 735 ----------------------------------------
-- line 762 ----------------------------------------
            .         *  @return  Read/write reference to data.
            .         *
            .         *  This operator allows for easy, array-style, data access.
            .         *  Note that data access with this operator is unchecked and
            .         *  out_of_range lookups are not defined. (For checked lookups
            .         *  see at().)
            .         */
            .        reference
   78,641,280        operator[](size_type __n)
  141,196,023        { return *(this->_M_impl._M_start + __n); }
            .  
            .        /**
            .         *  @brief  Subscript access to the data contained in the %vector.
            .         *  @param __n The index of the element for which data should be
            .         *  accessed.
            .         *  @return  Read-only (constant) reference to data.
            .         *
            .         *  This operator allows for easy, array-style, data access.
            .         *  Note that data access with this operator is unchecked and
            .         *  out_of_range lookups are not defined. (For checked lookups
            .         *  see at().)
            .         */
            .        const_reference
1,736,930,364        operator[](size_type __n) const
3,040,577,256        { return *(this->_M_impl._M_start + __n); }
            .  
            .      protected:
            .        /// Safety check used only from at().
            .        void
            .        _M_range_check(size_type __n) const
            .        {
            .  	if (__n >= this->size())
            .  	  __throw_out_of_range(__N("vector::_M_range_check"));
-- line 794 ----------------------------------------
-- line 893 ----------------------------------------
            .         *
            .         *  This is a typical stack operation.  The function creates an
            .         *  element at the end of the %vector and assigns the given data
            .         *  to it.  Due to the nature of a %vector this operation can be
            .         *  done in constant time if the %vector has preallocated space
            .         *  available.
            .         */
            .        void
    7,963,015        push_back(const value_type& __x)
            .        {
    9,555,618  	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
            .  	  {
    4,735,078  	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,

    2,841,042  	                             __x);
    5,682,084  	    ++this->_M_impl._M_finish;
            .  	  }
            .  	else
            .  #if __cplusplus >= 201103L
            .  	  _M_emplace_back_aux(__x);
            .  #else
    7,101,559  	  _M_insert_aux(end(), __x);


        3,367  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
            .  #endif
    3,185,206        }
            .  
            .  #if __cplusplus >= 201103L
            .        void
            .        push_back(value_type&& __x)
            .        { emplace_back(std::move(__x)); }
            .  
            .        template<typename... _Args>
            .          void
-- line 923 ----------------------------------------
-- line 929 ----------------------------------------
            .         *
            .         *  This is a typical stack operation. It shrinks the %vector by one.
            .         *
            .         *  Note that no data is returned, and if the last element's
            .         *  data is needed, it should be retrieved before pop_back() is
            .         *  called.
            .         */
            .        void
        1,712        pop_back()
            .        {
        2,140  	--this->_M_impl._M_finish;
        3,000  	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);

          946  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          856        }
            .  
            .  #if __cplusplus >= 201103L
            .        /**
            .         *  @brief  Inserts an object in %vector before specified iterator.
            .         *  @param  __position  An iterator into the %vector.
            .         *  @param  __args  Arguments.
            .         *  @return  An iterator that points to the inserted data.
            .         *
-- line 949 ----------------------------------------
-- line 1015 ----------------------------------------
            .         *  This function will insert a specified number of copies of
            .         *  the given data before the location specified by @a position.
            .         *
            .         *  Note that this kind of operation could be expensive for a
            .         *  %vector and if it is frequently used the user should
            .         *  consider using std::list.
            .         */
            .        void
            7        insert(iterator __position, size_type __n, const value_type& __x)
            8        { _M_fill_insert(__position, __n, __x); }

            .  
            .        /**
            .         *  @brief  Inserts a range into the %vector.
            .         *  @param  __position  An iterator into the %vector.
            .         *  @param  __first  An input iterator.
            .         *  @param  __last   An input iterator.
            .         *
            .         *  This function will insert copies of the data in the range
-- line 1032 ----------------------------------------
-- line 1127 ----------------------------------------
            .  
            .      protected:
            .        /**
            .         *  Memory expansion handler.  Uses the member allocation function to
            .         *  obtain @a n bytes of memory, and then copies [first,last) into it.
            .         */
            .        template<typename _ForwardIterator>
            .          pointer
        1,768          _M_allocate_and_copy(size_type __n,
            .  			     _ForwardIterator __first, _ForwardIterator __last)
            .          {
        1,551  	  pointer __result = this->_M_allocate(__n);

            .  	  __try
            .  	    {
        1,334  	      std::__uninitialized_copy_a(__first, __last, __result,
        1,361  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        1,109  					  _M_get_Tp_allocator());

          442  	      return __result;
            .  	    }
            .  	  __catch(...)
            .  	    {
            .  	      _M_deallocate(__result, __n);
            .  	      __throw_exception_again;
            .  	    }
          884  	}
            .  
            .  
            .        // Internal constructor functions follow.
            .  
            .        // Called by the range constructor to implement [23.1.1]/9
            .  
            .        // _GLIBCXX_RESOLVE_LIB_DEFECTS
            .        // 438. Ambiguity in the "do the right thing" clause
            .        template<typename _Integer>
            .          void
           84          _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
            .          {
          126  	  this->_M_impl._M_start = _M_allocate(static_cast<size_type>(__n));

           28  	  this->_M_impl._M_end_of_storage =
           84  	    this->_M_impl._M_start + static_cast<size_type>(__n);
          122  	  _M_fill_initialize(static_cast<size_type>(__n), __value);

           28  	}
            .  
            .        // Called by the range constructor to implement [23.1.1]/9
            .        template<typename _InputIterator>
            .          void
            .          _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
            .  			       __false_type)
            .          {
            .  	  typedef typename std::iterator_traits<_InputIterator>::
-- line 1175 ----------------------------------------
-- line 1204 ----------------------------------------
            .  	    std::__uninitialized_copy_a(__first, __last,
            .  					this->_M_impl._M_start,
            .  					_M_get_Tp_allocator());
            .  	}
            .  
            .        // Called by the first initialize_dispatch above and by the
            .        // vector(n,value,a) constructor.
            .        void
       44,352        _M_fill_initialize(size_type __n, const value_type& __value)
            .        {
       36,968  	std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value, 
          953  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

       51,752  				      _M_get_Tp_allocator());

          905  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       29,568  	this->_M_impl._M_finish = this->_M_impl._M_end_of_storage;
       14,784        }
            .  
            .  #if __cplusplus >= 201103L
            .        // Called by the vector(n) constructor.
            .        void
            .        _M_default_initialize(size_type __n)
            .        {
            .  	std::__uninitialized_default_n_a(this->_M_impl._M_start, __n, 
            .  					 _M_get_Tp_allocator());
-- line 1225 ----------------------------------------
-- line 1328 ----------------------------------------
            .  
            .        template<typename... _Args>
            .          void
            .          _M_emplace_back_aux(_Args&&... __args);
            .  #endif
            .  
            .        // Called by the latter.
            .        size_type
    4,619,552        _M_check_len(size_type __n, const char* __s) const
            .        {
   10,559,038  	if (max_size() - size() < __n)


            .  	  __throw_length_error(__N(__s));
            .  
   12,538,787  	const size_type __len = size() + std::max(size(), __n);


    8,579,162  	return (__len < size() || __len > max_size()) ? max_size() : __len;


    2,639,744        }
            .  
            .        // Internal erase functions follow.
            .  
            .        // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
            .        // _M_assign_aux.
            .        void
            .        _M_erase_at_end(pointer __pos)
            .        {
-- line 1351 ------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------
         Ir 

-- line 18 ----------------------------------------
          .    * In other words, an EigenBase object is an object that can be copied into a MatrixBase.
          .    *
          .    * Besides MatrixBase-derived classes, this also includes special matrix classes such as diagonal matrices, etc.
          .    *
          .    * Notice that this class is trivial, it is only used to disambiguate overloaded functions.
          .    *
          .    * \sa \ref TopicClassHierarchy
          .    */
  5,829,495  template<typename Derived> struct EigenBase
          .  {
          .  //   typedef typename internal::plain_matrix_type<Derived>::type PlainObject;
          .  
          .    typedef typename internal::traits<Derived>::StorageKind StorageKind;
          .    typedef typename internal::traits<Derived>::Index Index;
          .  
          .    /** \returns a reference to the derived object */
258,589,959    Derived& derived() { return *static_cast<Derived*>(this); }
          .    /** \returns a const reference to the derived object */
 29,586,150    const Derived& derived() const { return *static_cast<const Derived*>(this); }
          .  
     54,324    inline Derived& const_cast_derived() const
     54,324    { return *static_cast<Derived*>(const_cast<EigenBase*>(this)); }
          .    inline const Derived& const_derived() const
          .    { return *static_cast<const Derived*>(this); }
          .  
          .    /** \returns the number of rows. \sa cols(), RowsAtCompileTime */
337,277,136    inline Index rows() const { return derived().rows(); }


          .    /** \returns the number of columns. \sa rows(), ColsAtCompileTime*/
337,191,038    inline Index cols() const { return derived().cols(); }


          .    /** \returns the number of coefficients, which is rows()*cols().
          .      * \sa rows(), cols(), SizeAtCompileTime. */
403,464,357    inline Index size() const { return rows() * cols(); }

      2,648  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

          .  
          .    /** \internal Don't use it, but do the equivalent: \code dst = *this; \endcode */
          .    template<typename Dest> inline void evalTo(Dest& dst) const
          .    { derived().evalTo(dst); }
          .  
          .    /** \internal Don't use it, but do the equivalent: \code dst += *this; \endcode */
          .    template<typename Dest> inline void addTo(Dest& dst) const
          .    {
-- line 57 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.cpp
--------------------------------------------------------------------------------
     Ir 

-- line 2 ----------------------------------------
      .  #include "hasher.h"
      .  
      .  using namespace std;
      .  using namespace boost;
      .  
      .  typedef unsigned long hash_id;
      .  
      .  //construct hashmap and points list
     51  pointHashmap::pointHashmap(vector<TRIANGLE> triangles, gridPtr g){


  3,392  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)     15      dims = g->dims;


    834  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      .      //go through list of triangles and generate unordered map and points list
      2      numPoints=0;
 75,011      for(int i=0; i<triangles.size(); i++){

 88,634          for(int j=0; j<3; j++){
429,538              hash_id id = hashXYZ(triangles[i].p[j]);

9,674,742  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:pointHashmap::hashXYZ(XYZ const&) (20454x)
    714  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
450,000              if(map.find(id)==map.end()){


  3,510  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)

 34,084                  map[id]=numPoints;

  1,154  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 68,160                  points.push_back(triangles[i].p[j]);


 17,040                  numPoints++;
      .              }
      .          }
      .      }
      4  }
      .  
      .  //get index in points list of point
      .  //returns -1 if not in list
102,270  int pointHashmap::index(const XYZ& pnt){
143,178      hash_id id = hashXYZ(pnt);
9,674,742  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:pointHashmap::hashXYZ(XYZ const&) (20454x)
449,988      if(map.find(id)==map.end()) return -1;163,636      return map.at(id);

  1,170  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 40,926  }
 14,301  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.cpp:__static_initialization_and_destruction_0(int, int) (1x)

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
     Ir 

-- line 30 ----------------------------------------
      .  template<typename MatrixType>
      .  class SparseView : public SparseMatrixBase<SparseView<MatrixType> >
      .  {
      .    typedef typename MatrixType::Nested MatrixTypeNested;
      .    typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;
      .  public:
      .    EIGEN_SPARSE_PUBLIC_INTERFACE(SparseView)
      .  
      7    explicit SparseView(const MatrixType& mat, const Scalar& reference = Scalar(0),
      .                        const RealScalar &epsilon = NumTraits<Scalar>::dummy_precision())
     29      : m_matrix(mat), m_reference(reference), m_epsilon(epsilon) {}


  2,258  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
      .  
      .    class InnerIterator;
      .  
     15    inline Index rows() const { return m_matrix.rows(); }
    993  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     15    inline Index cols() const { return m_matrix.cols(); }
    985  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      .  
      .    inline Index innerSize() const { return m_matrix.innerSize(); }
      .    inline Index outerSize() const { return m_matrix.outerSize(); }
      .  
      .  protected:
      .    MatrixTypeNested m_matrix;
      .    Scalar m_reference;
      .    typename NumTraits<Scalar>::Real m_epsilon;
-- line 53 ----------------------------------------
-- line 54 ----------------------------------------
      .  };
      .  
      .  template<typename MatrixType>
      .  class SparseView<MatrixType>::InnerIterator : public _MatrixTypeNested::InnerIterator
      .  {
      .    typedef typename SparseView::Index Index;
      .  public:
      .    typedef typename _MatrixTypeNested::InnerIterator IterBase;
      6    InnerIterator(const SparseView& view, Index outer) :
     15    IterBase(view.m_matrix, outer), m_view(view)
  1,233  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      .    {
      8      incrementToNonZero();

  1,369  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      2    }
      .  
 93,440    EIGEN_STRONG_INLINE InnerIterator& operator++()
      .    {
 93,444      IterBase::operator++();

  1,193  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 93,440      incrementToNonZero();

 23,360      return *this;
 46,720    }
      .  
      .    using IterBase::value;
      .  
      .  protected:
      .    const SparseView& m_view;
      .  
      .  private:
163,527    void incrementToNonZero()
      .    {
817,625      while((bool(*this)) && internal::isMuchSmallerThan(value(), m_view.m_reference, m_view.m_epsilon))


  3,587  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)

      .      {
      .        IterBase::operator++();
      .      }
140,166    }
      .  };
      .  
      .  template<typename Derived>
      7  const SparseView<Derived> MatrixBase<Derived>::sparseView(const Scalar& m_reference,
      .                                                            const typename NumTraits<Scalar>::Real& m_epsilon) const
      .  {
     19    return SparseView<Derived>(derived(), m_reference, m_epsilon);
  2,306  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


      3  }
      .  
      .  } // end namespace Eigen
      .  
      .  #endif

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 110 ----------------------------------------
         .     *  can inherit from this class to save some work.  The typedefs are then
         .     *  used in specializations and overloading.
         .     *
         .     *  In particular, there are no default implementations of requirements
         .     *  such as @c operator++ and the like.  (How could there be?)
         .    */
         .    template<typename _Category, typename _Tp, typename _Distance = ptrdiff_t,
         .             typename _Pointer = _Tp*, typename _Reference = _Tp&>
 5,853,375      struct iterator
         .      {
         .        /// One of the @link iterator_tags tag types@endlink.
         .        typedef _Category  iterator_category;
         .        /// The type "pointed to" by the iterator.
         .        typedef _Tp        value_type;
         .        /// Distance between iterators is represented as this type.
         .        typedef _Distance  difference_type;
         .        /// This type represents a pointer-to-value_type.
-- line 126 ----------------------------------------
-- line 204 ----------------------------------------
         .    //@}
         .  
         .    // If _Iterator has a base returns it otherwise _Iterator is returned
         .    // untouched
         .    template<typename _Iterator, bool _HasBase>
         .      struct _Iter_base
         .      {
         .        typedef _Iterator iterator_type;
15,933,708        static iterator_type _S_base(_Iterator __it)
15,933,708        { return __it; }
         .      };
         .  
         .    template<typename _Iterator>
         .      struct _Iter_base<_Iterator, true>
         .      {
         .        typedef typename _Iterator::iterator_type iterator_type;
        72        static iterator_type _S_base(_Iterator __it)
       127        { return __it.base(); }

         .      };
         .  
         .  #if __cplusplus >= 201103L
         .    template<typename _InIter>
         .      using _RequireInputIter = typename
         .        enable_if<is_convertible<typename
         .  		iterator_traits<_InIter>::iterator_category,
         .  			       input_iterator_tag>::value>::type;
-- line 229 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
     Ir 

-- line 199 ----------------------------------------
      .  #endif
      .          typedef typename Node::node_pointer node_pointer;
      .          node_pointer node_;
      .  
      .      public:
      .  
      .          typedef typename Node::value_type value_type;
      .  
572,596          iterator() : node_() {}

  1,282  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      .  
323,810          explicit iterator(typename Node::link_pointer x) :
      .              node_(static_cast<node_pointer>(x)) {}
      .  
327,264          value_type& operator*() const {
409,084              return node_->value();

    938  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
163,632          }
      .  
      .          value_type* operator->() const {
      .              return &node_->value();
      .          }
      .  
 69,816          iterator& operator++() {
279,232              node_ = static_cast<node_pointer>(node_->next_);
 23,272              return *this;
 46,544          }
      .  
      .          iterator operator++(int) {
      .              iterator tmp(node_);
      .              node_ = static_cast<node_pointer>(node_->next_);
      .              return tmp;
      .          }
      .  
163,632          bool operator==(iterator const& x) const {
245,448              return node_ == x.node_;
 81,816          }
      .  
      .          bool operator!=(iterator const& x) const {
      .              return node_ != x.node_;
      .          }
      .      };
      .  
      .      template <typename Node, typename ConstNodePointer>
      .      struct c_iterator
-- line 241 ----------------------------------------
-- line 324 ----------------------------------------
      .  
      .          node_allocator& alloc_;
      .          node_pointer node_;
      .          bool node_constructed_;
      .          bool value_constructed_;
      .  
      .      public:
      .  
 13,632          node_constructor(node_allocator& n) :
      .              alloc_(n),
      .              node_(),
      .              node_constructed_(false),
 30,672              value_constructed_(false)
      .          {
  6,816          }
      .  
      .          ~node_constructor();
      .  
      .          void construct();
      .  
      .          template <BOOST_UNORDERED_EMPLACE_TEMPLATE>
 17,040          void construct_with_value(BOOST_UNORDERED_EMPLACE_ARGS)
      .          {
 13,636              construct();
  1,178  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 17,044              boost::unordered::detail::construct_value_impl(
  2,946  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 27,268                  alloc_, node_->value_ptr(), BOOST_UNORDERED_EMPLACE_FORWARD);
    970  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  6,816              value_constructed_ = true;
  6,816          }
      .  
      .          template <typename A0>
      .          void construct_with_value2(BOOST_FWD_REF(A0) a0)
      .          {
      .              construct();
      .              boost::unordered::detail::construct_value_impl(
      .                  alloc_, node_->value_ptr(),
      .                  BOOST_UNORDERED_EMPLACE_ARGS1(boost::forward<A0>(a0)));
-- line 359 ----------------------------------------
-- line 361 ----------------------------------------
      .          }
      .  
      .          value_type const& value() const {
      .              BOOST_ASSERT(node_ && node_constructed_ && value_constructed_);
      .              return node_->value();
      .          }
      .  
      .          // no throw
 13,632          node_pointer release()
      .          {
 30,672              BOOST_ASSERT(node_ && node_constructed_);
 10,224              node_pointer p = node_;
  6,816              node_ = node_pointer();
  3,408              return p;
  6,816          }
      .  
      .      private:
      .          node_constructor(node_constructor const&);
      .          node_constructor& operator=(node_constructor const&);
      .      };
      .  
      .      template <typename Alloc>
 13,632      node_constructor<Alloc>::~node_constructor()
      .      {
 13,632          if (node_) {
      .              if (value_constructed_) {
      .                  boost::unordered::detail::destroy_value_impl(alloc_,
      .                      node_->value_ptr());
      .              }
      .  
      .              if (node_constructed_) {
      .                  node_allocator_traits::destroy(alloc_,
      .                      boost::addressof(*node_));
      .              }
      .  
      .              node_allocator_traits::deallocate(alloc_, node_, 1);
      .          }
  6,816      }
      .  
      .      template <typename Alloc>
 23,856      void node_constructor<Alloc>::construct()
      .      {
 13,632          if(!node_) {
  6,816              node_constructed_ = false;
  6,816              value_constructed_ = false;
      .  
 27,268              node_ = node_allocator_traits::allocate(alloc_, 1);

  1,202  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      .  
 17,044              node_allocator_traits::construct(alloc_,

  1,818  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 40,904                  boost::addressof(*node_), node());

  1,924  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

 27,268              node_->init(node_);

    930  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 10,224              node_constructed_ = true;
      .          }
      .          else {
      .              BOOST_ASSERT(node_constructed_);
      .  
      .              if (value_constructed_)
      .              {
      .                  boost::unordered::detail::destroy_value_impl(alloc_,
      .                      node_->value_ptr());
      .                  value_constructed_ = false;
      .              }
      .          }
 17,040      }
      .  
      .      ///////////////////////////////////////////////////////////////////
      .      //
      .      // Node Holder
      .      //
      .      // Temporary store for nodes. Deletes any that aren't used.
      .  
      .      template <typename NodeAlloc>
-- line 432 ----------------------------------------
-- line 560 ----------------------------------------
      .          enum { extra_node = true };
      .      };
      .  
      .      struct ptr_bucket
      .      {
      .          typedef ptr_bucket* link_pointer;
      .          link_pointer next_;
      .  
 23,919          ptr_bucket() : next_(0) {}
      .  
  5,151          link_pointer first_from_start()
      .          {
  1,717              return this;
  3,434          }
      .  
      .          enum { extra_node = false };
      .      };
      .  
      .      ///////////////////////////////////////////////////////////////////
      .      //
      .      // Hash Policy
      .  
-- line 581 ----------------------------------------
-- line 599 ----------------------------------------
      .              return boost::unordered::detail::prev_prime(max);
      .          }
      .      };
      .  
      .      template <typename SizeT>
      .      struct mix64_policy
      .      {
      .          template <typename Hash, typename T>
323,850          static inline SizeT apply_hash(Hash const& hf, T const& x) {
518,164              SizeT key = hf(x);
    661  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

323,850              key = (~key) + (key << 21); // key = (key << 21) - key - 1;
194,310              key = key ^ (key >> 24);
518,160              key = (key + (key << 3)) + (key << 8); // key * 265
194,310              key = key ^ (key >> 14);
518,160              key = (key + (key << 2)) + (key << 4); // key * 21
194,310              key = key ^ (key >> 28);
194,310              key = key + (key << 31);
 64,770              return key;
129,540          }
      .  
402,516          static inline SizeT to_bucket(SizeT bucket_count, SizeT hash) {
301,887              return hash & (bucket_count - 1);
201,258          }
      .  
     30          static inline SizeT new_bucket_count(SizeT min) {
     22              if (min <= 4) return 4;
      9              --min;
     27              min |= min >> 1;
     27              min |= min >> 2;
     27              min |= min >> 4;
     27              min |= min >> 8;
     27              min |= min >> 16;
     27              min |= min >> 32;
     18              return min + 1;
     20          }
      .  
      .          static inline SizeT prev_bucket_count(SizeT max) {
      .              max |= max >> 1;
      .              max |= max >> 2;
      .              max |= max >> 4;
      .              max |= max >> 8;
      .              max |= max >> 16;
      .              max |= max >> 32;
-- line 641 ----------------------------------------
-- line 695 ----------------------------------------
      .  
      .          typedef typename boost::aligned_storage<
      .              sizeof(function_pair),
      .              boost::alignment_of<function_pair>::value>::type aligned_function;
      .  
      .          bool current_; // The currently active functions.
      .          aligned_function funcs_[2];
      .  
388,620          function_pair const& current() const {
      .              return *static_cast<function_pair const*>(
906,780                  static_cast<void const*>(&funcs_[current_]));
259,080          }
      .  
      .          function_pair& current() {
      .              return *static_cast<function_pair*>(
      .                  static_cast<void*>(&funcs_[current_]));
      .          }
      .  
     11          void construct(bool which, H const& hf, P const& eq)
      .          {
     23              new((void*) &funcs_[which]) function_pair(hf, eq);


  1,146  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      6          }
      .  
      .          void construct(bool which, function_pair const& f)
      .          {
      .              new((void*) &funcs_[which]) function_pair(f);
      .          }
      .          
      .          void construct(bool which, function_pair& f,
      .                  boost::unordered::detail::move_tag m)
      .          {
      .              new((void*) &funcs_[which]) function_pair(f, m);
      .          }
      .  
      6          void destroy(bool which)
      .          {
     12              boost::unordered::detail::destroy((function_pair*)(&funcs_[which]));
  1,154  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      2          }
      .          
      .      public:
      .  
      .          typedef boost::unordered::detail::set_hash_functions<H, P,
      .                  nothrow_move_assignable> set_hash_functions;
      .  
      6          functions(H const& hf, P const& eq)
      2              : current_(false)
      .          {
     13              construct(current_, hf, eq);

  1,146  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      2          }
      .  
      .          functions(functions const& bf)
      .              : current_(false)
      .          {
      .              construct(current_, bf.current());
      .          }
      .  
      .          functions(functions& bf, boost::unordered::detail::move_tag m)
-- line 751 ----------------------------------------
-- line 754 ----------------------------------------
      .              if (nothrow_move_constructible) {
      .                  construct(current_, bf.current(), m);
      .              }
      .              else {
      .                  construct(current_, bf.current());
      .              }
      .          }
      .  
      4          ~functions() {
     12              this->destroy(current_);
  1,050  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      2          }
      .  
259,080          H const& hash_function() const {
453,394              return current().first();

  1,074  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

129,540          }
      .  
259,080          P const& key_eq() const {
453,398              return current().second();
  2,132  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


129,540          }
      .      };
      .  
      .      template <class H, class P>
      .      class set_hash_functions<H, P, false>
      .      {
      .          set_hash_functions(set_hash_functions const&);
      .          set_hash_functions& operator=(set_hash_functions const&);
      .  
-- line 780 ------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 106 ----------------------------------------
        .  #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
        .      int id_;
        .  #endif
        .  
        .      friend class weak_count;
        .  
        .  public:
        .  
      280      shared_count(): pi_(0) // nothrow
        .  #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
        .          , id_(shared_count_id)
        .  #endif
        .      {
      112      }
        .  
      310      template<class Y> explicit shared_count( Y * p ): pi_( 0 )
        .  #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
        .          , id_(shared_count_id)
        .  #endif
        .      {
        .  #ifndef BOOST_NO_EXCEPTIONS
        .  
        .          try
        .          {
      459              pi_ = new sp_counted_impl_p<Y>( p );

    1,641  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      113  => ???:operator new(unsigned long) (1x)
        .          }
        .          catch(...)
        .          {
        .              boost::checked_delete( p );
        .              throw;
        .          }
        .  
        .  #else
-- line 138 ----------------------------------------
-- line 141 ----------------------------------------
        .  
        .          if( pi_ == 0 )
        .          {
        .              boost::checked_delete( p );
        .              boost::throw_exception( std::bad_alloc() );
        .          }
        .  
        .  #endif
      170      }
        .  
        .  #if defined( BOOST_MSVC ) && BOOST_WORKAROUND( BOOST_MSVC, <= 1200 )
        .      template<class Y, class D> shared_count( Y * p, D d ): pi_(0)
        .  #else
        .      template<class P, class D> shared_count( P p, D d ): pi_(0)
        .  #endif
        .  #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
        .          , id_(shared_count_id)
-- line 157 ----------------------------------------
-- line 361 ----------------------------------------
        .  
        .  #endif
        .  
        .          r.release();
        .      }
        .  
        .  #endif
        .  
  656,236      ~shared_count() // nothrow
        .      {
1,312,220          if( pi_ != 0 ) pi_->release();

        .  #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
        .          id_ = 0;
        .  #endif
  328,118      }
        .  
1,475,559      shared_count(shared_count const & r): pi_(r.pi_) // nothrow
        .  #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
        .          , id_(shared_count_id)
        .  #endif
        .      {
1,311,596          if( pi_ != 0 ) pi_->add_ref_copy();

  327,902      }
        .  
        .  #if !defined( BOOST_NO_CXX11_RVALUE_REFERENCES )
        .  
        .      shared_count(shared_count && r): pi_(r.pi_) // nothrow
        .  #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
        .          , id_(shared_count_id)
        .  #endif
        .      {
-- line 391 ----------------------------------------
-- line 406 ----------------------------------------
        .              if( tmp != 0 ) tmp->add_ref_copy();
        .              if( pi_ != 0 ) pi_->release();
        .              pi_ = tmp;
        .          }
        .  
        .          return *this;
        .      }
        .  
      204      void swap(shared_count & r) // nothrow
        .      {
      153          sp_counted_base * tmp = r.pi_;
      204          r.pi_ = pi_;
      153          pi_ = tmp;
      102      }
        .  
        .      long use_count() const // nothrow
        .      {
        .          return pi_ != 0? pi_->use_count(): 0;
        .      }
        .  
        .      bool unique() const // nothrow
        .      {
-- line 427 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
     Ir 

-- line 76 ----------------------------------------
      .  
      .        std::vector<pcl::PCLPointField>& fields_;
      .      };
      .  
      .      // For converting message to template point cloud.
      .      template<typename PointT>
      .      struct FieldMapper
      .      {
      5        FieldMapper (const std::vector<pcl::PCLPointField>& fields,
      .                     std::vector<FieldMapping>& map)
      6          : fields_ (fields), map_ (map)
      .        {
      2        }
      .  
      .        template<typename Tag> void
     24        operator () ()
      .        {
    453          BOOST_FOREACH (const pcl::PCLPointField& field, fields_)
      .          {
     42            if (FieldMatches<PointT, Tag>()(field))

      .            {
      .              FieldMapping mapping;
     12              mapping.serialized_offset = field.offset;
      3              mapping.struct_offset = traits::offset<PointT, Tag>::value;
      3              mapping.size = sizeof (typename traits::datatype<PointT, Tag>::type);
     18              map_.push_back (mapping);

     12              return;
      .            }
      .          }
      .          // Disable thrown exception per #595: http://dev.pointclouds.org/issues/595
      .          PCL_WARN ("Failed to find match for field '%s'.\n", traits::name<PointT, Tag>::value);
      .          //throw pcl::InvalidConversionException (ss.str ());
     21        }
      .  
      .        const std::vector<pcl::PCLPointField>& fields_;
      .        std::vector<FieldMapping>& map_;
      .      };
      .  
      .      inline bool
      .      fieldOrdering (const FieldMapping& a, const FieldMapping& b)
     16      {
     24        return (a.serialized_offset < b.serialized_offset);
      8      }
      .  
      .    } //namespace detail
      .  
      .    template<typename PointT> void
      7    createMapping (const std::vector<pcl::PCLPointField>& msg_fields, MsgFieldMap& field_map)
      .    {
      .      // Create initial 1-1 mapping between serialized data segments and struct fields
      6      detail::FieldMapper<PointT> mapper (msg_fields, field_map);

      5      for_each_type< typename traits::fieldList<PointT>::type > (mapper);

      .  
      .      // Coalesce adjacent fields into single memcpy's where possible
      7      if (field_map.size() > 1)

      .      {
     11        std::sort(field_map.begin(), field_map.end(), detail::fieldOrdering);     11        MsgFieldMap::iterator i = field_map.begin(), j = i + 1;


     34        while (j != field_map.end())


      .        {
      .          // This check is designed to permit padding between adjacent fields.
      .          /// @todo One could construct a pathological case where the struct has a
      .          /// field where the serialized data has padding
     48          if (j->serialized_offset - i->serialized_offset == j->struct_offset - i->struct_offset)

      .          {
     52            i->size += (j->struct_offset + j->size) - (i->struct_offset + i->size);

     14            j = field_map.erase(j);

      .          }
      .          else
      .          {
      .            ++i;
      .            ++j;
      .          }
      .        }
      .      }
      5    }
      .  
      .    /** \brief Convert a PCLPointCloud2 binary data blob into a pcl::PointCloud<T> object using a field_map.
      .      * \param[in] msg the PCLPointCloud2 binary blob
      .      * \param[out] cloud the resultant pcl::PointCloud<T>
      .      * \param[in] field_map a MsgFieldMap object
      .      *
      .      * \note Use fromPCLPointCloud2 (PCLPointCloud2, PointCloud<T>) directly or create you
      .      * own MsgFieldMap using:
      .      *
      .      * \code
      .      * MsgFieldMap field_map;
      .      * createMapping<PointT> (msg.fields, field_map);
      .      * \endcode
      .      */
      .    template <typename PointT> void
     10    fromPCLPointCloud2 (const pcl::PCLPointCloud2& msg, pcl::PointCloud<PointT>& cloud,
      .                const MsgFieldMap& field_map)
      .    {
      .      // Copy info fields
      6      cloud.header   = msg.header;

      4      cloud.width    = msg.width;
      4      cloud.height   = msg.height;
      6      cloud.is_dense = msg.is_dense == 1;
      .  
      .      // Copy point data
      6      uint32_t num_points = msg.width * msg.height;
      6      cloud.points.resize (num_points);

      6      uint8_t* cloud_data = reinterpret_cast<uint8_t*>(&cloud.points[0]);

      .  
      .      // Check if we can copy adjacent points in a single memcpy
     19      if (field_map.size() == 1 &&

      4          field_map[0].serialized_offset == 0 &&

      4          field_map[0].struct_offset == 0 &&

      .          msg.point_step == sizeof(PointT))
      .      {
      .        uint32_t cloud_row_step = static_cast<uint32_t> (sizeof (PointT) * cloud.width);
      .        const uint8_t* msg_data = &msg.data[0];
      .        // Should usually be able to copy all rows at once
      .        if (msg.row_step == cloud_row_step)
      .        {
      .          memcpy (cloud_data, msg_data, msg.data.size ());
-- line 192 ----------------------------------------
-- line 196 ----------------------------------------
      .          for (uint32_t i = 0; i < msg.height; ++i, cloud_data += cloud_row_step, msg_data += msg.row_step)
      .            memcpy (cloud_data, msg_data, cloud_row_step);
      .        }
      .  
      .      }
      .      else
      .      {
      .        // If not, memcpy each group of contiguous fields separately
     11        for (uint32_t row = 0; row < msg.height; ++row)
      .        {
     10          const uint8_t* row_data = &msg.data[row * msg.row_step];

 37,796          for (uint32_t col = 0; col < msg.width; ++col)
      .          {
 52,906            const uint8_t* msg_data = row_data + col * msg.point_step;
997,656            BOOST_FOREACH (const detail::FieldMapping& mapping, field_map)
      .            {
105,816              memcpy (cloud_data + mapping.struct_offset, msg_data + mapping.serialized_offset, mapping.size);
  2,431  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
128,486  => /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/memcpy-sse2-unaligned.S:__memcpy_sse2_unaligned (7558x)
      .            }
  7,558            cloud_data += sizeof (PointT);
      .          }
      .        }
      .      }
      7    }
      .  
      .    /** \brief Convert a PCLPointCloud2 binary data blob into a pcl::PointCloud<T> object.
      .      * \param[in] msg the PCLPointCloud2 binary blob
      .      * \param[out] cloud the resultant pcl::PointCloud<T>
      .      */
      .    template<typename PointT> void
      6    fromPCLPointCloud2 (const pcl::PCLPointCloud2& msg, pcl::PointCloud<PointT>& cloud)
      .    {
      3      MsgFieldMap field_map;

      6      createMapping<PointT> (msg.fields, field_map);

     10      fromPCLPointCloud2 (msg, cloud, field_map);


      4    }
      .  
      .    /** \brief Convert a pcl::PointCloud<T> object to a PCLPointCloud2 binary data blob.
      .      * \param[in] cloud the input pcl::PointCloud<T>
      .      * \param[out] msg the resultant PCLPointCloud2 binary blob
      .      */
      .    template<typename PointT> void
      .    toPCLPointCloud2 (const pcl::PointCloud<PointT>& cloud, pcl::PCLPointCloud2& msg)
      .    {
-- line 238 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 34 ----------------------------------------
        .    };
        .  # else
        .  
        .    // declare iterator_base in namespace detail to work around MSVC bugs which
        .    // prevent derivation from an identically-named class in a different namespace.
        .    namespace detail {
        .     template <class Category, class T, class Distance, class Pointer, class Reference>
        .  #  if !defined(BOOST_MSVC_STD_ITERATOR)
1,124,784     struct iterator_base : std::iterator<Category, T, Distance, Pointer, Reference> {};
    1,282  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  #  else
        .     struct iterator_base : std::iterator<Category, T, Distance>
        .     {
        .       typedef Reference reference;
        .       typedef Pointer pointer;
        .       typedef Distance difference_type;
        .     };
        .  #  endif
        .    }
        .  
        .    template <class Category, class T, class Distance = std::ptrdiff_t,
        .              class Pointer = T*, class Reference = T&>
1,124,784    struct iterator : boost::detail::iterator_base<Category, T, Distance, Pointer, Reference> {};
    1,386  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  # endif
        .  } // namespace boost
        .  
        .  #endif // BOOST_ITERATOR_HPP

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
     Ir 

-- line 32 ----------------------------------------
      .    * \sa MatrixBase::applyOnTheLeft(), MatrixBase::applyOnTheRight()
      .    */
      .  template<typename Scalar> class JacobiRotation
      .  {
      .    public:
      .      typedef typename NumTraits<Scalar>::Real RealScalar;
      .  
      .      /** Default constructor without any initialization. */
113,530      JacobiRotation() {}
      .  
      .      /** Construct a planar rotation from a cosine-sine pair (\a c, \c s). */
433,245      JacobiRotation(const Scalar& c, const Scalar& s) : m_c(c), m_s(s) {}
      .  
786,180      Scalar& c() { return m_c; }
241,416      Scalar c() const { return m_c; }
932,456      Scalar& s() { return m_s; }
241,416      Scalar s() const { return m_s; }
      .  
      .      /** Concatenates two planar rotation */
 10,295      JacobiRotation operator*(const JacobiRotation& other)
      .      {
      .        using numext::conj;
 10,295        return JacobiRotation(m_c * other.m_c - conj(m_s) * other.m_s,

105,009                              conj(m_c * conj(other.m_s) + conj(m_s) * conj(other.m_c)));


  8,236      }
      .  
      .      /** Returns the transposed transformation */
643,784      JacobiRotation transpose() const { using numext::conj; return JacobiRotation(m_c, -conj(m_s)); }
  2,175  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


      .  
      .      /** Returns the adjoint transformation */
      .      JacobiRotation adjoint() const { using numext::conj; return JacobiRotation(conj(m_c), -m_s); }
      .  
      .      template<typename Derived>
      .      bool makeJacobi(const MatrixBase<Derived>&, typename Derived::Index p, typename Derived::Index q);
      .      bool makeJacobi(const RealScalar& x, const Scalar& y, const RealScalar& z);
      .  
-- line 67 ----------------------------------------
-- line 75 ----------------------------------------
      .  };
      .  
      .  /** Makes \c *this as a Jacobi rotation \a J such that applying \a J on both the right and left sides of the selfadjoint 2x2 matrix
      .    * \f$ B = \left ( \begin{array}{cc} x & y \\ \overline y & z \end{array} \right )\f$ yields a diagonal matrix \f$ A = J^* B J \f$
      .    *
      .    * \sa MatrixBase::makeJacobi(const MatrixBase<Derived>&, Index, Index), MatrixBase::applyOnTheLeft(), MatrixBase::applyOnTheRight()
      .    */
      .  template<typename Scalar>
 14,413  bool JacobiRotation<Scalar>::makeJacobi(const RealScalar& x, const Scalar& y, const RealScalar& z)
      .  {
      .    using std::sqrt;
      .    using std::abs;
      .    typedef typename NumTraits<Scalar>::Real RealScalar;
 16,472    if(y == Scalar(0))
      .    {
      .      m_c = Scalar(1);
      .      m_s = Scalar(0);
      .      return false;
      .    }
      .    else
      .    {
 35,003      RealScalar tau = (x-z)/(RealScalar(2)*abs(y));

 22,649      RealScalar w = sqrt(numext::abs2(tau) + RealScalar(1));


      .      RealScalar t;
  8,236      if(tau>RealScalar(0))
      .      {
  7,749        t = RealScalar(1) / (tau + w);
      .      }
      .      else
      .      {
  5,712        t = RealScalar(1) / (tau - w);
      .      }
 13,461      RealScalar sign_t = t > RealScalar(0) ? RealScalar(1) : RealScalar(-1);
 24,708      RealScalar n = RealScalar(1) / sqrt(numext::abs2(t)+RealScalar(1));


 59,711      m_s = - sign_t * (numext::conj(y) / abs(y)) * abs(t) * n;


  6,177      m_c = n;
  2,059      return true;
      .    }
  4,118  }
      .  
      .  /** Makes \c *this as a Jacobi rotation \c J such that applying \a J on both the right and left sides of the 2x2 selfadjoint matrix
      .    * \f$ B = \left ( \begin{array}{cc} \text{this}_{pp} & \text{this}_{pq} \\ (\text{this}_{pq})^* & \text{this}_{qq} \end{array} \right )\f$ yields
      .    * a diagonal matrix \f$ A = J^* B J \f$
      .    *
      .    * Example: \include Jacobi_makeJacobi.cpp
      .    * Output: \verbinclude Jacobi_makeJacobi.out
      .    *
      .    * \sa JacobiRotation::makeJacobi(RealScalar, Scalar, RealScalar), MatrixBase::applyOnTheLeft(), MatrixBase::applyOnTheRight()
      .    */
      .  template<typename Scalar>
      .  template<typename Derived>
 16,472  inline bool JacobiRotation<Scalar>::makeJacobi(const MatrixBase<Derived>& m, typename Derived::Index p, typename Derived::Index q)
      .  {
 86,486    return makeJacobi(numext::real(m.coeff(p,p)), m.coeff(p,q), numext::real(m.coeff(q,q)));  1,956  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
  8,236  }
      .  
      .  /** Makes \c *this as a Givens rotation \c G such that applying \f$ G^* \f$ to the left of the vector
      .    * \f$ V = \left ( \begin{array}{c} p \\ q \end{array} \right )\f$ yields:
      .    * \f$ G^* V = \left ( \begin{array}{c} r \\ 0 \end{array} \right )\f$.
      .    *
      .    * The value of \a z is returned if \a z is not null (the default is null).
      .    * Also note that G is built such that the cosine is always real.
      .    *
-- line 137 ----------------------------------------
-- line 269 ----------------------------------------
      .  /** \jacobi_module
      .    * Applies the rotation in the plane \a j to the rows \a p and \a q of \c *this, i.e., it computes B = J * B,
      .    * with \f$ B = \left ( \begin{array}{cc} \text{*this.row}(p) \\ \text{*this.row}(q) \end{array} \right ) \f$.
      .    *
      .    * \sa class JacobiRotation, MatrixBase::applyOnTheRight(), internal::apply_rotation_in_the_plane()
      .    */
      .  template<typename Derived>
      .  template<typename OtherScalar>
 28,826  inline void MatrixBase<Derived>::applyOnTheLeft(Index p, Index q, const JacobiRotation<OtherScalar>& j)
      .  {
 28,830    RowXpr x(this->row(p));
    962  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 28,826    RowXpr y(this->row(q));

 28,834    internal::apply_rotation_in_the_plane(x, y, j);

  1,634  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  8,236  }
      .  
      .  /** \ingroup Jacobi_Module
      .    * Applies the rotation in the plane \a j to the columns \a p and \a q of \c *this, i.e., it computes B = B * J
      .    * with \f$ B = \left ( \begin{array}{cc} \text{*this.col}(p) & \text{*this.col}(q) \end{array} \right ) \f$.
      .    *
      .    * \sa class JacobiRotation, MatrixBase::applyOnTheLeft(), internal::apply_rotation_in_the_plane()
      .    */
      .  template<typename Derived>
      .  template<typename OtherScalar>
 43,239  inline void MatrixBase<Derived>::applyOnTheRight(Index p, Index q, const JacobiRotation<OtherScalar>& j)
      .  {
 43,239    ColXpr x(this->col(p));

 43,239    ColXpr y(this->col(q));

 86,482    internal::apply_rotation_in_the_plane(x, y, j.transpose());
  1,674  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


 12,354  }
      .  
      .  namespace internal {
      .  template<typename VectorX, typename VectorY, typename OtherScalar>
 72,065  void /*EIGEN_DONT_INLINE*/ apply_rotation_in_the_plane(VectorX& _x, VectorY& _y, const JacobiRotation<OtherScalar>& j)
      .  {
      .    typedef typename VectorX::Index Index;
      .    typedef typename VectorX::Scalar Scalar;
      .    enum { PacketSize = packet_traits<Scalar>::size };
      .    typedef typename packet_traits<Scalar>::type Packet;
113,249    eigen_assert(_x.size() == _y.size());

  1,173  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 51,475    Index size = _x.size();

 51,479    Index incrx = _x.innerStride();

  1,282  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 51,475    Index incry = _y.innerStride();

      .  
 61,778    Scalar* EIGEN_RESTRICT x = &_x.coeffRef(0);
  1,194  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 61,770    Scalar* EIGEN_RESTRICT y = &_y.coeffRef(0);

      .    
 72,069    OtherScalar c = j.c();

    738  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 72,069    OtherScalar s = j.s();

    722  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 91,405    if (c==OtherScalar(1) && s==OtherScalar(0))
      .      return;
      .  
      .    /*** dynamic-size vectorized paths ***/
      .  
 24,696    if(VectorX::SizeAtCompileTime == Dynamic &&
      .      (VectorX::Flags & VectorY::Flags & PacketAccessBit) &&
      .      ((incrx==1 && incry==1) || PacketSize == 1))
      .    {
      .      // both vectors are sequentially stored in memory => vectorization
      .      enum { Peeling = 2 };
      .  
 37,044      Index alignedStart = internal::first_aligned(y, size);

 74,088      Index alignedEnd = alignedStart + ((size-alignedStart)/PacketSize)*PacketSize;
      .  
 30,870      const Packet pc = pset1<Packet>(c);

 30,870      const Packet ps = pset1<Packet>(s);

      .      conj_helper<Packet,Packet,NumTraits<Scalar>::IsComplex,false> pcj;
      .  
 38,630      for(Index i=0; i<alignedStart; ++i)
      .      {
 11,640        Scalar xi = x[i];
 11,640        Scalar yi = y[i];
 27,160        x[i] =  c * xi + numext::conj(s) * yi;

 31,040        y[i] = -s * xi + numext::conj(c) * yi;

      .      }
      .  
 30,870      Scalar* EIGEN_RESTRICT px = x + alignedStart;
 30,870      Scalar* EIGEN_RESTRICT py = y + alignedStart;
      .  
 55,566      if(internal::first_aligned(x, size)==alignedStart)

      .      {
 10,428        for(Index i=alignedStart; i<alignedEnd; i+=PacketSize)
      .        {
  4,740          Packet xi = pload<Packet>(px);

  4,740          Packet yi = pload<Packet>(py);

 26,544          pstore(px, padd(pmul(pc,xi),pcj.pmul(ps,yi)));
 26,544          pstore(py, psub(pcj.pmul(pc,yi),pmul(ps,xi)));
    948          px += PacketSize;
    948          py += PacketSize;
      .        }
      .      }
      .      else
      .      {
 62,712        Index peelingEnd = alignedStart + ((size-alignedStart)/(Peeling*PacketSize))*(Peeling*PacketSize);
 31,356        for(Index i=alignedStart; i<peelingEnd; i+=Peeling*PacketSize)
      .        {
      .          Packet xi   = ploadu<Packet>(px);
      .          Packet xi1  = ploadu<Packet>(px+PacketSize);
      .          Packet yi   = pload <Packet>(py);
      .          Packet yi1  = pload <Packet>(py+PacketSize);
      .          pstoreu(px, padd(pmul(pc,xi),pcj.pmul(ps,yi)));
      .          pstoreu(px+PacketSize, padd(pmul(pc,xi1),pcj.pmul(ps,yi1)));
      .          pstore (py, psub(pcj.pmul(pc,yi),pmul(ps,xi)));
      .          pstore (py+PacketSize, psub(pcj.pmul(pc,yi1),pmul(ps,xi1)));
      .          px += Peeling*PacketSize;
      .          py += Peeling*PacketSize;
      .        }
 15,678        if(alignedEnd!=peelingEnd)
      .        {
  3,344          Packet xi = ploadu<Packet>(x+peelingEnd);

  3,344          Packet yi = pload <Packet>(y+peelingEnd);

 12,970          pstoreu(x+peelingEnd, padd(pmul(pc,xi),pcj.pmul(ps,yi)));
  2,718  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
 12,966          pstore (y+peelingEnd, psub(pcj.pmul(pc,yi),pmul(ps,xi)));
  1,972  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
      .        }
      .      }
      .  
 90,536      for(Index i=alignedEnd; i<size; ++i)
      .      {
 80,238        Scalar xi = x[i];
 80,238        Scalar yi = y[i];
187,222        x[i] =  c * xi + numext::conj(s) * yi;

213,968        y[i] = -s * xi + numext::conj(c) * yi;

  6,174      }
      .    }
      .  
      .    /*** fixed-size vectorized path ***/
      .    else if(VectorX::SizeAtCompileTime != Dynamic &&
      .            (VectorX::Flags & VectorY::Flags & PacketAccessBit) &&
      .            (VectorX::Flags & VectorY::Flags & AlignedBit))
      .    {
      .      const Packet pc = pset1<Packet>(c);
-- line 398 ----------------------------------------
-- line 409 ----------------------------------------
      .        px += PacketSize;
      .        py += PacketSize;
      .      }
      .    }
      .  
      .    /*** non-vectorized path ***/
      .    else
      .    {
 61,706      for(Index i=0; i<size; ++i)
      .      {
 30,852        Scalar xi = *x;
 30,852        Scalar yi = *y;
113,124        *x =  c * xi + numext::conj(s) * yi;

133,692        *y = -s * xi + numext::conj(c) * yi;

 30,852        x += incrx;
 30,852        y += incry;
      .      }
      .    }
 41,180  }
      .  
      .  } // end namespace internal
      .  
      .  } // end namespace Eigen
      .  
      .  #endif // EIGEN_JACOBI_H

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 184 ----------------------------------------
        .        * of stored coefficients. */
        .      inline Index nonZeros() const { return size(); }
        .  
        .      /** \returns the outer size.
        .        *
        .        * \note For a vector, this returns just 1. For a matrix (non-vector), this is the major dimension
        .        * with respect to the \ref TopicStorageOrders "storage order", i.e., the number of columns for a
        .        * column-major matrix, and the number of rows for a row-major matrix. */
    1,776      Index outerSize() const
        .      {
        .        return IsVectorAtCompileTime ? 1
    1,776             : int(IsRowMajor) ? this->rows() : this->cols();

      888      }
        .  
        .      /** \returns the inner size.
        .        *
        .        * \note For a vector, this is just the size. For a matrix (non-vector), this is the minor dimension
        .        * with respect to the \ref TopicStorageOrders "storage order", i.e., the number of rows for a 
        .        * column-major matrix, and the number of columns for a row-major matrix. */
  168,208      Index innerSize() const
        .      {
        .        return IsVectorAtCompileTime ? this->size()
  168,212             : int(IsRowMajor) ? this->cols() : this->rows();

   84,104      }
        .  
        .      /** Only plain matrices/arrays, not expressions, may be resized; therefore the only useful resize methods are
        .        * Matrix::resize() and Array::resize(). The present method only asserts that the new size equals the old size, and does
        .        * nothing else.
        .        */
        .      void resize(Index newSize)
        .      {
        .        EIGEN_ONLY_USED_FOR_DEBUG(newSize);
-- line 215 ----------------------------------------
-- line 352 ----------------------------------------
        .      inline Derived& operator/=(const Scalar& other);
        .  
        .      typedef typename internal::add_const_on_value_type<typename internal::eval<Derived>::type>::type EvalReturnType;
        .      /** \returns the matrix or vector obtained by evaluating this expression.
        .        *
        .        * Notice that in the case of a plain matrix or vector (not an expression) this function just returns
        .        * a const reference, in order to avoid a useless copy.
        .        */
    1,570      EIGEN_STRONG_INLINE EvalReturnType eval() const
        .      {
        .        // Even though MSVC does not honor strong inlining when the return type
        .        // is a dynamic matrix, we desperately need strong inlining for fixed
        .        // size types on MSVC.
    3,144        return typename internal::eval<Derived>::type(derived());
    1,706  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


      942      }
        .  
        .      /** swaps *this with the expression \a other.
        .        *
        .        */
        .      template<typename OtherDerived>
    3,668      void swap(const DenseBase<OtherDerived>& other,
        .                int = OtherDerived::ThisConstantIsPrivateInPlainObjectBase)
        .      {
   10,488        SwapWrapper<Derived>(derived()).lazyAssign(other.derived());


    2,756  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


    2,096      }
        .  
        .      /** swaps *this with the matrix or array \a other.
        .        *
        .        */
        .      template<typename OtherDerived>
        .      void swap(PlainObjectBase<OtherDerived>& other)
        .      {
        .        SwapWrapper<Derived>(derived()).lazyAssign(other.derived());
-- line 384 ----------------------------------------
-- line 493 ----------------------------------------
        .      // disable the use of evalTo for dense objects with a nice compilation error
        .      template<typename Dest> inline void evalTo(Dest& ) const
        .      {
        .        EIGEN_STATIC_ASSERT((internal::is_same<Dest,void>::value),THE_EVAL_EVALTO_FUNCTION_SHOULD_NEVER_BE_CALLED_FOR_DENSE_OBJECTS);
        .      }
        .  
        .    protected:
        .      /** Default constructor. Do nothing. */
4,104,160      DenseBase()
4,104,444      {
    1,418  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .        /* Just checks for self-consistency of the flags.
        .         * Only do it when debugging Eigen, as this borders on paranoiac and could slow compilation down
        .         */
        .  #ifdef EIGEN_INTERNAL_DEBUGGING
        .        EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, int(IsRowMajor))
        .                          && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, int(!IsRowMajor))),
        .                            INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION)
        .  #endif
2,052,080      }
        .  
        .    private:
        .      explicit DenseBase(int);
        .      DenseBase(int,int);
        .      template<typename OtherDerived> explicit DenseBase(const DenseBase<OtherDerived>&);
        .  };
        .  
        .  } // end namespace Eigen
-- line 519 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
         Ir 

-- line 34 ----------------------------------------
          .  };
          .  
          .  template<> struct check_rows_cols_for_overflow<Dynamic> {
          .    template<typename Index>
          .    static EIGEN_ALWAYS_INLINE void run(Index rows, Index cols)
          .    {
          .      // http://hg.mozilla.org/mozilla-central/file/6c8a909977d3/xpcom/ds/CheckedInt.h#l242
          .      // we assume Index is signed
        108      Index max_index = (size_t(1) << (8 * sizeof(Index) - 1)) - 1; // assume Index is signed
          .      bool error = (rows == 0 || cols == 0) ? false
        132                 : (rows > max_index / cols);
         24      if (error)
         16        throw_std_bad_alloc();
          .    }
          .  };
          .  
          .  template <typename Derived,
          .            typename OtherDerived = Derived,
          .            bool IsVector = bool(Derived::IsVectorAtCompileTime) && bool(OtherDerived::IsVectorAtCompileTime)>
          .  struct conservative_resize_like_impl;
          .  
-- line 54 ----------------------------------------
-- line 127 ----------------------------------------
          .  
          .    public:
          .      enum { NeedsToAlign = SizeAtCompileTime != Dynamic && (internal::traits<Derived>::Flags & AlignedBit) != 0 };
          .      EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF(NeedsToAlign)
          .  
          .      Base& base() { return *static_cast<Base*>(this); }
          .      const Base& base() const { return *static_cast<const Base*>(this); }
          .  
333,386,947      EIGEN_STRONG_INLINE Index rows() const { return m_storage.rows(); }

334,608,995      EIGEN_STRONG_INLINE Index cols() const { return m_storage.cols(); }

          .  
  2,014,992      EIGEN_STRONG_INLINE const Scalar& coeff(Index rowId, Index colId) const
          .      {
          .        if(Flags & RowMajorBit)
          .          return m_storage.data()[colId + rowId * m_storage.cols()];
          .        else // column-major
  3,742,140          return m_storage.data()[rowId + colId * m_storage.rows()];


      2,482  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
  1,151,424      }
          .  
  7,356,570      EIGEN_STRONG_INLINE const Scalar& coeff(Index index) const
          .      {
 10,299,202        return m_storage.data()[index];

        874  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  2,942,628      }
          .  
  8,882,475      EIGEN_STRONG_INLINE Scalar& coeffRef(Index rowId, Index colId)
          .      {
          .        if(Flags & RowMajorBit)
          .          return m_storage.data()[colId + rowId * m_storage.cols()];
          .        else // column-major
 16,496,037          return m_storage.data()[rowId + colId * m_storage.rows()];


  5,075,700      }
          .  
    296,325      EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)
          .      {
    414,859        return m_storage.data()[index];

155,723,544      }
          .  
     22,890      EIGEN_STRONG_INLINE const Scalar& coeffRef(Index rowId, Index colId) const
          .      {
          .        if(Flags & RowMajorBit)
          .          return m_storage.data()[colId + rowId * m_storage.cols()];
          .        else // column-major
     42,510          return m_storage.data()[rowId + colId * m_storage.rows()];


     13,080      }
          .  
          .      EIGEN_STRONG_INLINE const Scalar& coeffRef(Index index) const
          .      {
          .        return m_storage.data()[index];
          .      }
          .  
          .      /** \internal */
          .      template<int LoadMode>
  1,534,323      EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const
          .      {
          .        return internal::ploadt<PacketScalar, LoadMode>
  1,095,953                 (m_storage.data() + (Flags & RowMajorBit

        999  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .                                     ? colId + rowId * m_storage.cols()
  2,411,091                                     : rowId + colId * m_storage.rows()));

      1,705  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    876,756      }
          .  
          .      /** \internal */
          .      template<int LoadMode>
          .      EIGEN_STRONG_INLINE PacketScalar packet(Index index) const
          .      {
          .        return internal::ploadt<PacketScalar, LoadMode>(m_storage.data() + index);
          .      }
          .  
          .      /** \internal */
          .      template<int StoreMode>
        136      EIGEN_STRONG_INLINE void writePacket(Index rowId, Index colId, const PacketScalar& val)
          .      {
         82        internal::pstoret<Scalar, PacketScalar, StoreMode>

         82                (m_storage.data() + (Flags & RowMajorBit

          .                                     ? colId + rowId * m_storage.cols()
        125                                     : rowId + colId * m_storage.rows()), val);

         68      }
          .  
          .      /** \internal */
          .      template<int StoreMode>
    193,218      EIGEN_STRONG_INLINE void writePacket(Index index, const PacketScalar& val)
          .      {
    386,444        internal::pstoret<Scalar, PacketScalar, StoreMode>(m_storage.data() + index, val);

      2,175  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

     64,406      }
          .  
          .      /** \returns a const pointer to the data array of this matrix */
          .      EIGEN_STRONG_INLINE const Scalar *data() const
          .      { return m_storage.data(); }
          .  
          .      /** \returns a pointer to the data array of this matrix */
    118,740      EIGEN_STRONG_INLINE Scalar *data()
    178,114      { return m_storage.data(); }

          .  
          .      /** Resizes \c *this to a \a rows x \a cols matrix.
          .        *
          .        * This method is intended for dynamic-size matrices, although it is legal to call it on any
          .        * matrix as long as fixed dimensions are left unchanged. If you only want to change the number
          .        * of rows and/or of columns, you can use resize(NoChange_t, Index), resize(Index, NoChange_t).
          .        *
          .        * If the current number of coefficients of \c *this exactly matches the
-- line 225 ----------------------------------------
-- line 227 ----------------------------------------
          .        * the current values are left unchanged. In all other cases, including
          .        * shrinking, the data is reallocated and all previous values are lost.
          .        *
          .        * Example: \include Matrix_resize_int_int.cpp
          .        * Output: \verbinclude Matrix_resize_int_int.out
          .        *
          .        * \sa resize(Index) for vectors, resize(NoChange_t, Index), resize(Index, NoChange_t)
          .        */
    157,812      EIGEN_STRONG_INLINE void resize(Index nbRows, Index nbCols)
          .      {
    420,808        eigen_assert(   EIGEN_IMPLIES(RowsAtCompileTime!=Dynamic,nbRows==RowsAtCompileTime)
          .                     && EIGEN_IMPLIES(ColsAtCompileTime!=Dynamic,nbCols==ColsAtCompileTime)
          .                     && EIGEN_IMPLIES(RowsAtCompileTime==Dynamic && MaxRowsAtCompileTime!=Dynamic,nbRows<=MaxRowsAtCompileTime)
          .                     && EIGEN_IMPLIES(ColsAtCompileTime==Dynamic && MaxColsAtCompileTime!=Dynamic,nbCols<=MaxColsAtCompileTime)
          .                     && nbRows>=0 && nbCols>=0 && "Invalid sizes when resizing a matrix or array.");
          .        internal::check_rows_cols_for_overflow<MaxSizeAtCompileTime>::run(nbRows, nbCols);
          .        #ifdef EIGEN_INITIALIZE_COEFFS
          .          Index size = nbRows*nbCols;
          .          bool size_changed = size != this->size();
          .          m_storage.resize(size, nbRows, nbCols);
          .          if(size_changed) EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
          .        #else
          .          internal::check_rows_cols_for_overflow<MaxSizeAtCompileTime>::run(nbRows, nbCols);
    236,727          m_storage.resize(nbRows*nbCols, nbRows, nbCols);

          .        #endif
     52,604      }
          .  
          .      /** Resizes \c *this to a vector of length \a size
          .        *
          .        * \only_for_vectors. This method does not work for
          .        * partially dynamic matrices when the static dimension is anything other
          .        * than 1. For example it will not work with Matrix<double, 2, Dynamic>.
          .        *
          .        * Example: \include Matrix_resize_int.cpp
          .        * Output: \verbinclude Matrix_resize_int.out
          .        *
          .        * \sa resize(Index,Index), resize(NoChange_t, Index), resize(Index, NoChange_t)
          .        */
     16,350      inline void resize(Index size)
          .      {
          .        EIGEN_STATIC_ASSERT_VECTOR_ONLY(PlainObjectBase)
     13,080        eigen_assert(((SizeAtCompileTime == Dynamic && (MaxSizeAtCompileTime==Dynamic || size<=MaxSizeAtCompileTime)) || SizeAtCompileTime == size) && size>=0);
          .        #ifdef EIGEN_INITIALIZE_COEFFS
          .          bool size_changed = size != this->size();
          .        #endif
          .        if(RowsAtCompileTime == 1)
          .          m_storage.resize(size, 1, size);
          .        else
     22,894          m_storage.resize(size, size, 1);
        976  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .        #ifdef EIGEN_INITIALIZE_COEFFS
          .          if(size_changed) EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
          .        #endif
      6,540      }
          .  
          .      /** Resizes the matrix, changing only the number of columns. For the parameter of type NoChange_t, just pass the special value \c NoChange
          .        * as in the example below.
          .        *
          .        * Example: \include Matrix_resize_NoChange_int.cpp
          .        * Output: \verbinclude Matrix_resize_NoChange_int.out
          .        *
          .        * \sa resize(Index,Index)
-- line 287 ----------------------------------------
-- line 307 ----------------------------------------
          .      /** Resizes \c *this to have the same dimensions as \a other.
          .        * Takes care of doing all the checking that's needed.
          .        *
          .        * Note that copying a row-vector into a vector (and conversely) is allowed.
          .        * The resizing, if any, is then done in the appropriate way so that row-vectors
          .        * remain row-vectors and vectors remain vectors.
          .        */
          .      template<typename OtherDerived>
    157,812      EIGEN_STRONG_INLINE void resizeLike(const EigenBase<OtherDerived>& _other)
          .      {
    131,505        const OtherDerived& other = _other.derived();

    289,336        internal::check_rows_cols_for_overflow<MaxSizeAtCompileTime>::run(other.rows(), other.cols());


    289,304        const Index othersize = other.rows()*other.cols();


          .        if(RowsAtCompileTime == 1)
          .        {
          .          eigen_assert(other.rows() == 1 || other.cols() == 1);
          .          resize(1, othersize);
          .        }
          .        else if(ColsAtCompileTime == 1)
          .        {
    274,674          eigen_assert(other.rows() == 1 || other.cols() == 1);


    160,252          resize(othersize, 1);

          .        }
     54,580        else resize(other.rows(), other.cols());    105,208      }
          .  
          .      /** Resizes the matrix to \a rows x \a cols while leaving old values untouched.
          .        *
          .        * The method is intended for matrices of dynamic size. If you only want to change the number
          .        * of rows and/or of columns, you can use conservativeResize(NoChange_t, Index) or
          .        * conservativeResize(Index, NoChange_t).
          .        *
          .        * Matrices are resized relative to the top-left element. In case values need to be 
-- line 339 ----------------------------------------
-- line 403 ----------------------------------------
          .        */
          .      EIGEN_STRONG_INLINE Derived& operator=(const PlainObjectBase& other)
          .      {
          .        return _set(other);
          .      }
          .  
          .      /** \sa MatrixBase::lazyAssign() */
          .      template<typename OtherDerived>
    115,160      EIGEN_STRONG_INLINE Derived& lazyAssign(const DenseBase<OtherDerived>& other)
          .      {
    138,219        _resize_to_match(other);

    230,338        return Base::lazyAssign(other.derived());


     46,064      }
          .  
          .      template<typename OtherDerived>
          .      EIGEN_STRONG_INLINE Derived& operator=(const ReturnByValue<OtherDerived>& func)
          .      {
          .        resize(func.rows(), func.cols());
          .        return Base::operator=(func);
          .      }
          .  
 10,349,508      EIGEN_STRONG_INLINE PlainObjectBase() : m_storage()


          .      {
          .  //       _check_template_params();
          .  //       EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
  1,724,916      }
          .  
          .  #ifndef EIGEN_PARSED_BY_DOXYGEN
          .      // FIXME is it still needed ?
          .      /** \internal */
          .      PlainObjectBase(internal::constructor_without_unaligned_array_assert)
          .        : m_storage(internal::constructor_without_unaligned_array_assert())
          .      {
          .  //       _check_template_params(); EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
-- line 436 ----------------------------------------
-- line 462 ----------------------------------------
          .      template<typename OtherDerived>
          .      EIGEN_STRONG_INLINE PlainObjectBase(const DenseBase<OtherDerived> &other)
          .        : m_storage()
          .      {
          .        _check_template_params();
          .        lazyAssign(other);
          .      }
          .  
        112      EIGEN_STRONG_INLINE PlainObjectBase(Index a_size, Index nbRows, Index nbCols)
        182        : m_storage(a_size, nbRows, nbCols)


          .      {
          .  //       _check_template_params();
          .  //       EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
         32      }
          .  
          .      /** \copydoc MatrixBase::operator=(const EigenBase<OtherDerived>&)
          .        */
          .      template<typename OtherDerived>
     16,350      EIGEN_STRONG_INLINE Derived& operator=(const EigenBase<OtherDerived> &other)
          .      {
     19,624        _resize_to_match(other);

      1,648  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     32,704        Base::operator=(other.derived());


      1,496  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     13,080        return this->derived();

      6,540      }
          .  
          .      /** \sa MatrixBase::operator=(const EigenBase<OtherDerived>&) */
          .      template<typename OtherDerived>
          .      EIGEN_STRONG_INLINE PlainObjectBase(const EigenBase<OtherDerived> &other)
          .        : m_storage(other.derived().rows() * other.derived().cols(), other.derived().rows(), other.derived().cols())
          .      {
          .        _check_template_params();
          .        internal::check_rows_cols_for_overflow<MaxSizeAtCompileTime>::run(other.derived().rows(), other.derived().cols());
-- line 493 ----------------------------------------
-- line 591 ----------------------------------------
          .      /** \internal Resizes *this in preparation for assigning \a other to it.
          .        * Takes care of doing all the checking that's needed.
          .        *
          .        * Note that copying a row-vector into a vector (and conversely) is allowed.
          .        * The resizing, if any, is then done in the appropriate way so that row-vectors
          .        * remain row-vectors and vectors remain vectors.
          .        */
          .      template<typename OtherDerived>
    131,510      EIGEN_STRONG_INLINE void _resize_to_match(const EigenBase<OtherDerived>& other)
          .      {
          .        #ifdef EIGEN_NO_AUTOMATIC_RESIZING
          .        eigen_assert((this->size()==0 || (IsVectorAtCompileTime ? (this->size() == other.size())
          .                   : (rows() == other.rows() && cols() == other.cols())))
          .          && "Size mismatch. Automatic resizing is disabled because EIGEN_NO_AUTOMATIC_RESIZING is defined");
          .        EIGEN_ONLY_USED_FOR_DEBUG(other);
          .        if(this->size()==0)
          .          resizeLike(other);
          .        #else
    157,843        resizeLike(other);

          .        #endif
     52,604      }
          .  
          .      /**
          .        * \brief Copies the value of the expression \a other into \c *this with automatic resizing.
          .        *
          .        * *this might be resized to match the dimensions of \a other. If *this was a null matrix (not already initialized),
          .        * it will be initialized.
          .        *
          .        * Note that copying a row-vector into a vector (and conversely) is allowed.
-- line 619 ----------------------------------------
-- line 620 ----------------------------------------
          .        * The resizing, if any, is then done in the appropriate way so that row-vectors
          .        * remain row-vectors and vectors remain vectors.
          .        *
          .        * \sa operator=(const MatrixBase<OtherDerived>&), _set_noalias()
          .        *
          .        * \internal
          .        */
          .      template<typename OtherDerived>
     98,730      EIGEN_STRONG_INLINE Derived& _set(const DenseBase<OtherDerived>& other)
          .      {
    217,242        _set_selector(other.derived(), typename internal::conditional<static_cast<bool>(int(OtherDerived::Flags) & EvalBeforeAssigningBit), internal::true_type, internal::false_type>::type());
      5,198  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


     78,984        return this->derived();

     39,492      }
          .  
          .      template<typename OtherDerived>
          .      EIGEN_STRONG_INLINE void _set_selector(const OtherDerived& other, const internal::true_type&) { _set_noalias(other.eval()); }
          .  
          .      template<typename OtherDerived>
    276,464      EIGEN_STRONG_INLINE void _set_selector(const OtherDerived& other, const internal::false_type&) { _set_noalias(other); }
      1,463  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .  
          .      /** \internal Like _set() but additionally makes the assumption that no aliasing effect can happen (which
          .        * is the case when creating a new matrix) so one can enforce lazy evaluation.
          .        *
          .        * \sa operator=(const MatrixBase<OtherDerived>&), _set()
          .        */
          .      template<typename OtherDerived>
    138,192      EIGEN_STRONG_INLINE Derived& _set_noalias(const DenseBase<OtherDerived>& other)
          .      {
          .        // I don't think we need this resize call since the lazyAssign will anyways resize
          .        // and lazyAssign will be called by the assign selector.
          .        //_resize_to_match(other);
          .        // the 'false' below means to enforce lazy evaluation. We don't use lazyAssign() because
          .        // it wouldn't allow to copy a row-vector into a column-vector.
    299,441        return internal::assign_selector<Derived,OtherDerived,false>::run(this->derived(), other.derived());     92,128      }
          .  
          .      template<typename T0, typename T1>
          .      EIGEN_STRONG_INLINE void _init2(Index nbRows, Index nbCols, typename internal::enable_if<Base::SizeAtCompileTime!=2,T0>::type* = 0)
          .      {
          .        EIGEN_STATIC_ASSERT(bool(NumTraits<T0>::IsInteger) &&
          .                            bool(NumTraits<T1>::IsInteger),
          .                            FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED)
          .        resize(nbRows,nbCols);
-- line 662 ----------------------------------------
-- line 679 ----------------------------------------
          .      void _swap(DenseBase<OtherDerived> const & other)
          .      {
          .        enum { SwapPointers = internal::is_same<Derived, OtherDerived>::value && Base::SizeAtCompileTime==Dynamic };
          .        internal::matrix_swap_impl<Derived, OtherDerived, bool(SwapPointers)>::run(this->derived(), other.const_cast_derived());
          .      }
          .  
          .    public:
          .  #ifndef EIGEN_PARSED_BY_DOXYGEN
  1,724,948      static EIGEN_STRONG_INLINE void _check_template_params()
          .      {
          .        EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
          .                          && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
          .                          && ((RowsAtCompileTime == Dynamic) || (RowsAtCompileTime >= 0))
          .                          && ((ColsAtCompileTime == Dynamic) || (ColsAtCompileTime >= 0))
          .                          && ((MaxRowsAtCompileTime == Dynamic) || (MaxRowsAtCompileTime >= 0))
          .                          && ((MaxColsAtCompileTime == Dynamic) || (MaxColsAtCompileTime >= 0))
          .                          && (MaxRowsAtCompileTime == RowsAtCompileTime || RowsAtCompileTime==Dynamic)
          .                          && (MaxColsAtCompileTime == ColsAtCompileTime || ColsAtCompileTime==Dynamic)
          .                          && (Options & (DontAlign|RowMajor)) == Options),
          .          INVALID_MATRIX_TEMPLATE_PARAMETERS)
  1,724,948      }
          .  #endif
          .  
          .  private:
          .      enum { ThisConstantIsPrivateInPlainObjectBase };
          .  };
          .  
          .  namespace internal {
          .  
-- line 707 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
           Ir 

-- line 18 ----------------------------------------
            .    * In other words, an EigenBase object is an object that can be copied into a MatrixBase.
            .    *
            .    * Besides MatrixBase-derived classes, this also includes special matrix classes such as diagonal matrices, etc.
            .    *
            .    * Notice that this class is trivial, it is only used to disambiguate overloaded functions.
            .    *
            .    * \sa \ref TopicClassHierarchy
            .    */
    5,140,215  template<typename Derived> struct EigenBase
            .  {
            .  //   typedef typename internal::plain_matrix_type<Derived>::type PlainObject;
            .  
            .    typedef typename internal::traits<Derived>::StorageKind StorageKind;
            .    typedef typename internal::traits<Derived>::Index Index;
            .  
            .    /** \returns a reference to the derived object */
  348,615,147    Derived& derived() { return *static_cast<Derived*>(this); }
            .    /** \returns a const reference to the derived object */
1,229,618,190    const Derived& derived() const { return *static_cast<const Derived*>(this); }
            .  
       92,940    inline Derived& const_cast_derived() const
       92,940    { return *static_cast<Derived*>(const_cast<EigenBase*>(this)); }
            .    inline const Derived& const_derived() const
            .    { return *static_cast<const Derived*>(this); }
            .  
            .    /** \returns the number of rows. \sa cols(), RowsAtCompileTime */
  983,230,761    inline Index rows() const { return derived().rows(); }


            .    /** \returns the number of columns. \sa rows(), ColsAtCompileTime*/
  982,721,449    inline Index cols() const { return derived().cols(); }

        1,602  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

            .    /** \returns the number of coefficients, which is rows()*cols().
            .      * \sa rows(), cols(), SizeAtCompileTime. */
1,491,047,994    inline Index size() const { return rows() * cols(); }

        1,972  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

            .  
            .    /** \internal Don't use it, but do the equivalent: \code dst = *this; \endcode */
            .    template<typename Dest> inline void evalTo(Dest& dst) const
            .    { derived().evalTo(dst); }
            .  
            .    /** \internal Don't use it, but do the equivalent: \code dst += *this; \endcode */
            .    template<typename Dest> inline void addTo(Dest& dst) const
            .    {
-- line 57 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 71 ----------------------------------------
        .  #if __cplusplus >= 201103L
        .    template<typename _T1, typename... _Args>
        .      inline void
        .      _Construct(_T1* __p, _Args&&... __args)
        .      { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
        .  #else
        .    template<typename _T1, typename _T2>
        .      inline void
3,646,655      _Construct(_T1* __p, const _T2& __value)
        .      {
        .        // _GLIBCXX_RESOLVE_LIB_DEFECTS
        .        // 402. wrong new expression in [some_]allocator::construct
8,000,440        ::new(static_cast<void*>(__p)) _T1(__value);


1,929,748      }
        .  #endif
        .  
        .    /**
        .     * Destroy the object pointed to by a pointer type.
        .     */
        .    template<typename _Tp>
        .      inline void
1,058,532      _Destroy(_Tp* __pointer)
1,587,788      { __pointer->~_Tp(); }

        .  
        .    template<bool>
        .      struct _Destroy_aux
        .      {
        .        template<typename _ForwardIterator>
        .          static void
  214,590          __destroy(_ForwardIterator __first, _ForwardIterator __last)
        .  	{
1,230,204  	  for (; __first != __last; ++__first)
1,852,427  	    std::_Destroy(std::__addressof(*__first));


   85,836  	}
        .      };
        .  
        .    template<>
        .      struct _Destroy_aux<true>
        .      {
        .        template<typename _ForwardIterator>
        .          static void
7,512,774          __destroy(_ForwardIterator, _ForwardIterator) { }
        .      };
        .  
        .    /**
        .     * Destroy a range of objects.  If the value_type of the object has
        .     * a trivial destructor, the compiler should optimize all of this
        .     * away, otherwise the objects' destructors must be invoked.
        .     */
        .    template<typename _ForwardIterator>
        .      inline void
6,475,235      _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        .      {
        .        typedef typename iterator_traits<_ForwardIterator>::value_type
        .                         _Value_type;
7,105,347        std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::

        .  	__destroy(__first, __last);
2,590,094      }
        .  
        .    /**
        .     * Destroy a range of objects using the supplied allocator.  For
        .     * nondefault allocators we do not optimize away invocation of 
        .     * destroy() even if _Tp has a trivial destructor.
        .     */
        .  
        .    template<typename _ForwardIterator, typename _Allocator>
        .      void
      564      _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        .  	     _Allocator& __alloc)
        .      {
        .        typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
  700,620        for (; __first != __last; ++__first)
1,627,100  	__traits::destroy(__alloc, std::__addressof(*__first));


      188      }
        .  
        .    template<typename _ForwardIterator, typename _Tp>
        .      inline void
7,770,282      _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        .  	     allocator<_Tp>&)
        .      {
7,105,347        _Destroy(__first, __last);

2,590,094      }
        .  
        .  _GLIBCXX_END_NAMESPACE_VERSION
        .  } // namespace std
        .  
        .  #endif /* _STL_CONSTRUCT_H */
        .  

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 48 ----------------------------------------
        .  class CwiseBinaryOpImpl<BinaryOp, Lhs, Rhs, Sparse>
        .    : public SparseMatrixBase<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >
        .  {
        .    public:
        .      class InnerIterator;
        .      class ReverseInnerIterator;
        .      typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> Derived;
        .      EIGEN_SPARSE_PUBLIC_INTERFACE(Derived)
        4      CwiseBinaryOpImpl()
        8      {

    1,489  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .        EIGEN_STATIC_ASSERT((
        .                  (!internal::is_same<typename internal::traits<Lhs>::StorageKind,
        .                                      typename internal::traits<Rhs>::StorageKind>::value)
        .              ||  ((Lhs::Flags&RowMajorBit) == (Rhs::Flags&RowMajorBit))),
        .              THE_STORAGE_ORDER_OF_BOTH_SIDES_MUST_MATCH);
        2      }
        .  };
        .  
        .  template<typename BinaryOp, typename Lhs, typename Rhs>
        .  class CwiseBinaryOpImpl<BinaryOp,Lhs,Rhs,Sparse>::InnerIterator
        .    : public internal::sparse_cwise_binary_op_inner_iterator_selector<BinaryOp,Lhs,Rhs,typename CwiseBinaryOpImpl<BinaryOp,Lhs,Rhs,Sparse>::InnerIterator>
        .  {
        .    public:
        .      typedef typename Lhs::Index Index;
        .      typedef internal::sparse_cwise_binary_op_inner_iterator_selector<
        .        BinaryOp,Lhs,Rhs, InnerIterator> Base;
        .  
        .      // NOTE: we have to prefix Index by "typename Lhs::" to avoid an ICE with VC11
  140,160      EIGEN_STRONG_INLINE InnerIterator(const CwiseBinaryOpImpl& binOp, typename Lhs::Index outer)
  256,964        : Base(binOp.derived(),outer)

    2,345  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   46,720      {}
        .  };
        .  
        .  /***************************************************************************
        .  * Implementation of inner-iterators
        .  ***************************************************************************/
        .  
        .  // template<typename T> struct internal::func_is_conjunction { enum { ret = false }; };
        .  // template<typename T> struct internal::func_is_conjunction<internal::scalar_product_op<T> > { enum { ret = true }; };
-- line 86 ----------------------------------------
-- line 98 ----------------------------------------
        .      typedef typename traits<CwiseBinaryXpr>::_LhsNested _LhsNested;
        .      typedef typename traits<CwiseBinaryXpr>::_RhsNested _RhsNested;
        .      typedef typename _LhsNested::InnerIterator LhsIterator;
        .      typedef typename _RhsNested::InnerIterator RhsIterator;
        .      typedef typename Lhs::Index Index;
        .  
        .    public:
        .  
  140,160      EIGEN_STRONG_INLINE sparse_cwise_binary_op_inner_iterator_selector(const CwiseBinaryXpr& xpr, Index outer)
  654,092        : m_lhsIter(xpr.lhs(),outer), m_rhsIter(xpr.rhs(),outer), m_functor(xpr.functor())
    4,030  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
        .      {
   93,444        this->operator++();
    2,116  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   46,720      }
        .  
1,440,770      EIGEN_STRONG_INLINE Derived& operator++()
        .      {
6,199,228        if (m_lhsIter && m_rhsIter && (m_lhsIter.index() == m_rhsIter.index()))


        .        {
  140,160          m_id = m_lhsIter.index();

  513,924          m_value = m_functor(m_lhsIter.value(), m_rhsIter.value());


    1,276  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   93,440          ++m_lhsIter;

  140,160          ++m_rhsIter;

        .        }
6,004,656        else if (m_lhsIter && (!m_rhsIter || (m_lhsIter.index() < m_rhsIter.index())))


        .        {
1,448,604          m_id = m_lhsIter.index();

4,345,812          m_value = m_functor(m_lhsIter.value(), Scalar(0));


1,207,170          ++m_lhsIter;

        .        }
  233,600        else if (m_rhsIter && (!m_lhsIter || (m_lhsIter.index() > m_rhsIter.index())))

        .        {
        .          m_id = m_rhsIter.index();
        .          m_value = m_functor(Scalar(0), m_rhsIter.value());
        .          ++m_rhsIter;
        .        }
        .        else
        .        {
   70,080          m_value = 0; // this is to avoid a compilation warning
   46,720          m_id = -1;
        .        }
  288,154        return *static_cast<Derived*>(this);
1,152,616      }
        .  
2,383,146      EIGEN_STRONG_INLINE Scalar value() const { return m_value; }
        .  
1,853,558      EIGEN_STRONG_INLINE Index index() const { return m_id; }
        .      EIGEN_STRONG_INLINE Index row() const { return Lhs::IsRowMajor ? m_lhsIter.row() : index(); }
        .      EIGEN_STRONG_INLINE Index col() const { return Lhs::IsRowMajor ? index() : m_lhsIter.col(); }
        .  
2,593,386      EIGEN_STRONG_INLINE operator bool() const { return m_id>=0; }
        .  
        .    protected:
        .      LhsIterator m_lhsIter;
        .      RhsIterator m_rhsIter;
        .      const BinaryOp& m_functor;
        .      Scalar m_value;
        .      Index m_id;
        .  };
-- line 155 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 129 ----------------------------------------
        .  
        .      /** \internal Represents a matrix with all coefficients equal to one another*/
        .      typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,Matrix<Scalar,Dynamic,Dynamic> > ConstantReturnType;
        .  
        .      /** type of the equivalent square matrix */
        .      typedef Matrix<Scalar,EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime),
        .                            EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;
        .  
  841,176      inline const Derived& derived() const { return *static_cast<const Derived*>(this); }
       36      inline Derived& derived() { return *static_cast<Derived*>(this); }
        3      inline Derived& const_cast_derived() const
        3      { return *static_cast<Derived*>(const_cast<SparseMatrixBase*>(this)); }
        .  
        .      typedef internal::special_scalar_op_base<Derived, Scalar, RealScalar, EigenBase<Derived> > Base;
        .      using Base::operator*;
        .  #endif // not EIGEN_PARSED_BY_DOXYGEN
        .  
        .  #define EIGEN_CURRENT_STORAGE_BASE_CLASS Eigen::SparseMatrixBase
        .  #   include "../plugins/CommonCwiseUnaryOps.h"
        .  #   include "../plugins/CommonCwiseBinaryOps.h"
-- line 148 ----------------------------------------
-- line 151 ----------------------------------------
        .  #   include "../plugins/BlockMethods.h"
        .  #   ifdef EIGEN_SPARSEMATRIXBASE_PLUGIN
        .  #     include EIGEN_SPARSEMATRIXBASE_PLUGIN
        .  #   endif
        .  #   undef EIGEN_CURRENT_STORAGE_BASE_CLASS
        .  #undef EIGEN_CURRENT_STORAGE_BASE_CLASS
        .  
        .      /** \returns the number of rows. \sa cols() */
  607,523      inline Index rows() const { return derived().rows(); }
      817  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


        .      /** \returns the number of columns. \sa rows() */
      146      inline Index cols() const { return derived().cols(); }


      833  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .      /** \returns the number of coefficients, which is \a rows()*cols().
        .        * \sa rows(), cols(). */
       73      inline Index size() const { return rows() * cols(); }


    2,642  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        .      /** \returns the number of nonzero coefficients which is in practice the number
        .        * of stored coefficients. */
        .      inline Index nonZeros() const { return derived().nonZeros(); }
        .      /** \returns true if either the number of rows or the number of columns is equal to 1.
        .        * In other words, this function returns
        .        * \code rows()==1 || cols()==1 \endcode
        .        * \sa rows(), cols(), IsVectorAtCompileTime. */
        .      inline bool isVector() const { return rows()==1 || cols()==1; }
        .      /** \returns the size of the storage major dimension,
        .        * i.e., the number of columns for a columns major matrix, and the number of rows otherwise */
  467,234      Index outerSize() const { return (int(Flags)&RowMajorBit) ? this->rows() : this->cols(); }
    1,513  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .      /** \returns the size of the inner dimension according to the storage order,
        .        * i.e., the number of rows for a columns major matrix, and the number of cols otherwise */
        .      Index innerSize() const { return (int(Flags)&RowMajorBit) ? this->cols() : this->rows(); }
        .  
       21      bool isRValue() const { return m_isRValue; }
       12      Derived& markAsRValue() { m_isRValue = true; return derived(); }

        .  
      256      SparseMatrixBase() : m_isRValue(false) { /* TODO check flags */ }

    1,553  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  
        .      
        .      template<typename OtherDerived>
        .      Derived& operator=(const ReturnByValue<OtherDerived>& other)
        .      {
        .        other.evalTo(derived());
        .        return derived();
        .      }
        .  
        .  
        .      template<typename OtherDerived>
        5      inline Derived& operator=(const SparseMatrixBase<OtherDerived>& other)
        .      {
       14        return assign(other.derived());
    1,617  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


        2      }
        .  
        .      inline Derived& operator=(const Derived& other)
        .      {
        .  //       if (other.isRValue())
        .  //         derived().swap(other.const_cast_derived());
        .  //       else
        .        return assign(other.derived());
        .      }
        .  
        .    protected:
        .  
        .      template<typename OtherDerived>
        7      inline Derived& assign(const OtherDerived& other)
        .      {
        1        const bool transpose = (Flags & RowMajorBit) != (OtherDerived::Flags & RowMajorBit);
        9        const Index outerSize = (int(OtherDerived::Flags) & RowMajorBit) ? other.rows() : other.cols();
    1,321  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        6        if ((!transpose) && other.isRValue())

        .        {
        .          // eval without temporary
        .          derived().resize(other.rows(), other.cols());
        .          derived().setZero();
        .          derived().reserve((std::max)(this->rows(),this->cols())*2);
        .          for (Index j=0; j<outerSize; ++j)
        .          {
        .            derived().startVec(j);
-- line 223 ----------------------------------------
-- line 226 ----------------------------------------
        .              Scalar v = it.value();
        .              derived().insertBackByOuterInner(j,it.index()) = v;
        .            }
        .          }
        .          derived().finalize();
        .        }
        .        else
        .        {
       10          assignGeneric(other);
    1,665  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .        }
        4        return derived();

        5      }
        .  
        .      template<typename OtherDerived>
        6      inline void assignGeneric(const OtherDerived& other)
        .      {
        .        //const bool transpose = (Flags & RowMajorBit) != (OtherDerived::Flags & RowMajorBit);
        .        eigen_assert(( ((internal::traits<Derived>::SupportedAccessPatterns&OuterRandomAccessPattern)==OuterRandomAccessPattern) ||
        .                    (!((Flags & RowMajorBit) != (OtherDerived::Flags & RowMajorBit)))) &&
        .                    "the transpose operation is supposed to be handled in SparseMatrix::operator=");
        .  
        .        enum { Flip = (Flags & RowMajorBit) != (OtherDerived::Flags & RowMajorBit) };
        .  
        9        const Index outerSize = other.outerSize();
    1,553  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .        //typedef typename internal::conditional<transpose, LinkedVectorMatrix<Scalar,Flags&RowMajorBit>, Derived>::type TempType;
        .        // thanks to shallow copies, we always eval to a tempary
       20        Derived temp(other.rows(), other.cols());

    1,337  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


        .  
       27        temp.reserve((std::max)(this->rows(),this->cols())*2);      689  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   93,445        for (Index j=0; j<outerSize; ++j)
        .        {
  140,160          temp.startVec(j);

3,068,428          for (typename OtherDerived::InnerIterator it(other.derived(), j); it; ++it)
    3,674  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        .          {
1,853,562            Scalar v = it.value();

    2,145  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
3,707,124            temp.insertBackByOuterInner(Flip?it.index():j,Flip?j:it.index()) = v;

    3,122  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

        .          }
        .        }
        4        temp.finalize();

        .  
       26        derived() = temp.markAsRValue();


    1,914  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


        4      }
        .  
        .    public:
        .  
        .      template<typename Lhs, typename Rhs>
        .      inline Derived& operator=(const SparseSparseProduct<Lhs,Rhs>& product);
        .  
        .      friend std::ostream & operator << (std::ostream & s, const SparseMatrixBase& m)
        .      {
-- line 275 ----------------------------------------
-- line 395 ----------------------------------------
        .      template<unsigned int UpLo> inline SparseSelfAdjointView<Derived, UpLo> selfadjointView();
        .  
        .      template<typename OtherDerived> Scalar dot(const MatrixBase<OtherDerived>& other) const;
        .      template<typename OtherDerived> Scalar dot(const SparseMatrixBase<OtherDerived>& other) const;
        .      RealScalar squaredNorm() const;
        .      RealScalar norm()  const;
        .      RealScalar blueNorm() const;
        .  
       32      Transpose<Derived> transpose() { return derived(); }


    2,005  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        .      const Transpose<const Derived> transpose() const { return derived(); }
        .      const AdjointReturnType adjoint() const { return transpose(); }
        .  
        .      // inner-vector
        .      typedef Block<Derived,IsRowMajor?1:Dynamic,IsRowMajor?Dynamic:1,true>       InnerVectorReturnType;
        .      typedef Block<const Derived,IsRowMajor?1:Dynamic,IsRowMajor?Dynamic:1,true> ConstInnerVectorReturnType;
        .      InnerVectorReturnType innerVector(Index outer);
        .      const ConstInnerVectorReturnType innerVector(Index outer) const;
-- line 411 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
         Ir 

-- line 19 ----------------------------------------
          .  #endif
          .  
          .  namespace Eigen {
          .  
          .  namespace internal {
          .  
          .  struct constructor_without_unaligned_array_assert {};
          .  
  1,844,696  template<typename T, int Size> void check_static_allocation_size()
          .  {
          .    // if EIGEN_STACK_ALLOCATION_LIMIT is defined to 0, then no limit
          .    #if EIGEN_STACK_ALLOCATION_LIMIT
          .    EIGEN_STATIC_ASSERT(Size * sizeof(T) <= EIGEN_STACK_ALLOCATION_LIMIT, OBJECT_ALLOCATED_ON_STACK_IS_TOO_BIG);
          .    #endif
  1,844,696  }
          .  
          .  /** \internal
          .    * Static array. If the MatrixOrArrayOptions require auto-alignment, the array will be automatically aligned:
          .    * to 16 bytes boundary if the total size is a multiple of 16 bytes.
          .    */
          .  template <typename T, int Size, int MatrixOrArrayOptions,
          .            int Alignment = (MatrixOrArrayOptions&DontAlign) ? 0
          .                          : (((Size*sizeof(T))%16)==0) ? 16
          .                          : 0 >
          .  struct plain_array
          .  {
          .    T array[Size];
          .  
  3,689,392    plain_array() 
          .    { 
  1,844,700      check_static_allocation_size<T,Size>();

        938  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  1,844,696    }
          .  
          .    plain_array(constructor_without_unaligned_array_assert) 
          .    { 
          .      check_static_allocation_size<T,Size>();
          .    }
          .  };
          .  
          .  #if defined(EIGEN_DISABLE_UNALIGNED_ARRAY_ASSERT)
-- line 58 ----------------------------------------
-- line 117 ----------------------------------------
          .    */
          .  template<typename T, int Size, int _Rows, int _Cols, int _Options> class DenseStorage;
          .  
          .  // purely fixed-size matrix
          .  template<typename T, int Size, int _Rows, int _Cols, int _Options> class DenseStorage
          .  {
          .      internal::plain_array<T,Size,_Options> m_data;
          .    public:
  7,417,958      DenseStorage() {}

        928  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .      DenseStorage(internal::constructor_without_unaligned_array_assert)
          .        : m_data(internal::constructor_without_unaligned_array_assert()) {}
          .      DenseStorage(const DenseStorage& other) : m_data(other.m_data) {}
          .      DenseStorage& operator=(const DenseStorage& other)
          .      {
          .        if (this != &other) m_data = other.m_data;
          .        return *this;
          .      }
  2,373,956      DenseStorage(DenseIndex,DenseIndex,DenseIndex) {}

          .      void swap(DenseStorage& other) { std::swap(m_data,other.m_data); }
251,470,252      static DenseIndex rows(void) {return _Rows;}
 91,928,830      static DenseIndex cols(void) {return _Cols;}
          .      void conservativeResize(DenseIndex,DenseIndex,DenseIndex) {}
  1,759,264      void resize(DenseIndex,DenseIndex,DenseIndex) {}
  4,065,252      const T *data() const { return m_data.array; }
338,893,755      T *data() { return m_data.array; }
          .  };
          .  
          .  // null matrix
          .  template<typename T, int _Rows, int _Cols, int _Options> class DenseStorage<T, 0, _Rows, _Cols, _Options>
          .  {
          .    public:
          .      DenseStorage() {}
          .      DenseStorage(internal::constructor_without_unaligned_array_assert) {}
-- line 149 ----------------------------------------
-- line 261 ----------------------------------------
          .  
          .  // purely dynamic matrix.
          .  template<typename T, int _Options> class DenseStorage<T, Dynamic, Dynamic, Dynamic, _Options>
          .  {
          .      T *m_data;
          .      DenseIndex m_rows;
          .      DenseIndex m_cols;
          .    public:
     46,805      DenseStorage() : m_data(0), m_rows(0), m_cols(0) {}
          .      DenseStorage(internal::constructor_without_unaligned_array_assert)
          .         : m_data(0), m_rows(0), m_cols(0) {}
          .      DenseStorage(DenseIndex size, DenseIndex nbRows, DenseIndex nbCols)
          .        : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_rows(nbRows), m_cols(nbCols)
          .      { EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN }
          .  #ifdef EIGEN_HAVE_RVALUE_REFERENCES
          .      DenseStorage(DenseStorage&& other)
          .        : m_data(std::move(other.m_data))
-- line 277 ----------------------------------------
-- line 284 ----------------------------------------
          .      {
          .        using std::swap;
          .        swap(m_data, other.m_data);
          .        swap(m_rows, other.m_rows);
          .        swap(m_cols, other.m_cols);
          .        return *this;
          .      }
          .  #endif
     76,590      ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, m_rows*m_cols); }

          .      void swap(DenseStorage& other)
          .      { std::swap(m_data,other.m_data); std::swap(m_rows,other.m_rows); std::swap(m_cols,other.m_cols); }
    930,321      DenseIndex rows(void) const {return m_rows;}
    279,447      DenseIndex cols(void) const {return m_cols;}
          .      void conservativeResize(DenseIndex size, DenseIndex nbRows, DenseIndex nbCols)
          .      {
          .        m_data = internal::conditional_aligned_realloc_new_auto<T,(_Options&DontAlign)==0>(m_data, size, m_rows*m_cols);
          .        m_rows = nbRows;
          .        m_cols = nbCols;
          .      }
     28,497      void resize(DenseIndex size, DenseIndex nbRows, DenseIndex nbCols)
          .      {
     28,497        if(size != m_rows*m_cols)
          .        {
     21,048          internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, m_rows*m_cols);

      3,508          if (size)
     12,278            m_data = internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size);

          .          else
          .            m_data = 0;
          .          EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN
          .        }
     12,213        m_rows = nbRows;
     12,213        m_cols = nbCols;
      8,142      }
    187,929      const T *data() const { return m_data; }
    275,478      T *data() { return m_data; }
          .    private:
          .      DenseStorage(const DenseStorage&);
          .      DenseStorage& operator=(const DenseStorage&);
          .  };
          .  
          .  // matrix with dynamic width and fixed height (so that matrix has dynamic size).
          .  template<typename T, int _Rows, int _Options> class DenseStorage<T, Dynamic, _Rows, Dynamic, _Options>
          .  {
          .      T *m_data;
          .      DenseIndex m_cols;
          .    public:
     33,228      DenseStorage() : m_data(0), m_cols(0) {}
          .      DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_cols(0) {}
     11,956      DenseStorage(DenseIndex size, DenseIndex, DenseIndex nbCols) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_cols(nbCols)

      1,494      { EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN }
          .  #ifdef EIGEN_HAVE_RVALUE_REFERENCES
          .      DenseStorage(DenseStorage&& other)
          .        : m_data(std::move(other.m_data))
          .        , m_cols(std::move(other.m_cols))
          .      {
          .        other.m_data = nullptr;
          .      }
          .      DenseStorage& operator=(DenseStorage&& other)
          .      {
          .        using std::swap;
          .        swap(m_data, other.m_data);
          .        swap(m_cols, other.m_cols);
          .        return *this;
          .      }
          .  #endif
     66,589      ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Rows*m_cols); }
        970  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .      void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_cols,other.m_cols); }
     23,655      static DenseIndex rows(void) {return _Rows;}
     43,575      DenseIndex cols(void) const {return m_cols;}
          .      void conservativeResize(DenseIndex size, DenseIndex, DenseIndex nbCols)
          .      {
          .        m_data = internal::conditional_aligned_realloc_new_auto<T,(_Options&DontAlign)==0>(m_data, size, _Rows*m_cols);
          .        m_cols = nbCols;
          .      }
      5,229      EIGEN_STRONG_INLINE void resize(DenseIndex size, DenseIndex, DenseIndex nbCols)
          .      {
      2,988        if(size != _Rows*m_cols)
          .        {
          .          internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Rows*m_cols);
          .          if (size)
          .            m_data = internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size);
          .          else
          .            m_data = 0;
          .          EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN
          .        }
      2,241        m_cols = nbCols;
      1,494      }
     10,458      const T *data() const { return m_data; }
     36,330      T *data() { return m_data; }
          .    private:
          .      DenseStorage(const DenseStorage&);
          .      DenseStorage& operator=(const DenseStorage&);
          .  };
          .  
          .  // matrix with dynamic height and fixed width (so that matrix has dynamic size).
          .  template<typename T, int _Cols, int _Options> class DenseStorage<T, Dynamic, Dynamic, _Cols, _Options>
          .  {
          .      T *m_data;
          .      DenseIndex m_rows;
          .    public:
     41,706      DenseStorage() : m_data(0), m_rows(0) {}
          .      DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_rows(0) {}
     13,176      DenseStorage(DenseIndex size, DenseIndex nbRows, DenseIndex) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_rows(nbRows)
        938  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      1,646      { EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN }
          .  #ifdef EIGEN_HAVE_RVALUE_REFERENCES
          .      DenseStorage(DenseStorage&& other)
          .        : m_data(std::move(other.m_data))
          .        , m_rows(std::move(other.m_rows))
          .      {
          .        other.m_data = nullptr;
          .      }
          .      DenseStorage& operator=(DenseStorage&& other)
          .      {
          .        using std::swap;
          .        swap(m_data, other.m_data);
          .        swap(m_rows, other.m_rows);
          .        return *this;
          .      }
          .  #endif
     81,863      ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Cols*m_rows); }
        970  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .      void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_rows,other.m_rows); }
 22,168,741      DenseIndex rows(void) const {return m_rows;}
 15,833,245      static DenseIndex cols(void) {return _Cols;}
          .      void conservativeResize(DenseIndex size, DenseIndex nbRows, DenseIndex)
          .      {
          .        m_data = internal::conditional_aligned_realloc_new_auto<T,(_Options&DontAlign)==0>(m_data, size, m_rows*_Cols);
          .        m_rows = nbRows;
          .      }
     22,386      EIGEN_STRONG_INLINE void resize(DenseIndex size, DenseIndex nbRows, DenseIndex)
          .      {
     12,792        if(size != m_rows*_Cols)
          .        {
     10,719          internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Cols*m_rows);

      2,382          if (size)
      8,337            m_data = internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size);

          .          else
          .            m_data = 0;
          .          EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN
          .        }
      9,594        m_rows = nbRows;
      6,396      }
  1,192,744      const T *data() const { return m_data; }
 21,169,932      T *data() { return m_data; }
          .    private:
          .      DenseStorage(const DenseStorage&);
          .      DenseStorage& operator=(const DenseStorage&);
          .  };
          .  
          .  } // end namespace Eigen
          .  
          .  #endif // EIGEN_MATRIX_H
-- line 434 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
     Ir 

-- line 279 ----------------------------------------
      .  pmadd(const Packet&  a,
      .           const Packet&  b,
      .           const Packet&  c)
      .  { return padd(pmul(a, b),c); }
      .  
      .  /** \internal \returns a packet version of \a *from.
      .    * If LoadMode equals #Aligned, \a from must be 16 bytes aligned */
      .  template<typename Packet, int LoadMode>
876,744  inline Packet ploadt(const typename unpacket_traits<Packet>::type* from)
      .  {
      .    if(LoadMode == Aligned)
876,748      return pload<Packet>(from);

  1,097  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      .    else
      .      return ploadu<Packet>(from);
438,372  }
      .  
      .  /** \internal copy the packet \a from to \a *to.
      .    * If StoreMode equals #Aligned, \a to must be 16 bytes aligned */
      .  template<typename Scalar, typename Packet, int LoadMode>
366,420  inline void pstoret(Scalar* to, const Packet& from)
      .  {
      .    if(LoadMode == Aligned)
436,674      pstore(to, from);

      .    else
      .      pstoreu(to, from);
146,568  }
      .  
      .  /** \internal default implementation of palign() allowing partial specialization */
      .  template<int Offset,typename PacketType>
      .  struct palign_impl
      .  {
      .    // by default data are aligned, so there is nothing to be done :)
      .    static inline void run(PacketType&, const PacketType&) {}
      .  };
-- line 312 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.h
--------------------------------------------------------------------------------
        Ir 

-- line 304 ----------------------------------------
         .     int normal_indexes[8];
         .     //feature 0=no feature
         .     //feature 1=edge
         .     //feature 2=corner
         .     int feature;
         .     XYZ feature_point;
         .     bool isSurface;
         .     vector<TRIANGLE> triangles;
 4,335,860  } GRIDCELL;

       738  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
     7,544  struct vec_out{
     1,476  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


         .      Eigen::VectorXf vec;
         .      vector<int> vec_inds;
         .  };
         .  
         .  //methods for doing feature detection and sample point computation
         .  
         .  //sets feature value in gridcell
         .  //0=no feature, return 1=edge, 2=corner
-- line 322 ----------------------------------------

28,617,279  <counts for unidentified lines in /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/mcubes.h>

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 119 ----------------------------------------
        .      Options = _Options,
        .      InnerStrideAtCompileTime = 1,
        .      OuterStrideAtCompileTime = (Options&RowMajor) ? ColsAtCompileTime : RowsAtCompileTime
        .    };
        .  };
        .  }
        .  
        .  template<typename _Scalar, int _Rows, int _Cols, int _Options, int _MaxRows, int _MaxCols>
  141,530  class Matrix
    1,010  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .    : public PlainObjectBase<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >
        .  {
        .    public:
        .  
        .      /** \brief Base class typedef.
        .        * \sa PlainObjectBase
        .        */
        .      typedef PlainObjectBase<Matrix> Base;
-- line 135 ----------------------------------------
-- line 146 ----------------------------------------
        .      /**
        .        * \brief Assigns matrices to each other.
        .        *
        .        * \note This is a special case of the templated operator=. Its purpose is
        .        * to prevent a default operator= from hiding the templated operator=.
        .        *
        .        * \callgraph
        .        */
  168,235      EIGEN_STRONG_INLINE Matrix& operator=(const Matrix& other)
        .      {
  201,890        return Base::_set(other);
    1,266  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   67,294      }
        .  
        .      /** \internal
        .        * \brief Copies the value of the expression \a other into \c *this with automatic resizing.
        .        *
        .        * *this might be resized to match the dimensions of \a other. If *this was a null matrix (not already initialized),
        .        * it will be initialized.
        .        *
        .        * Note that copying a row-vector into a vector (and conversely) is allowed.
        .        * The resizing, if any, is then done in the appropriate way so that row-vectors
        .        * remain row-vectors and vectors remain vectors.
        .        */
        .      template<typename OtherDerived>
   10,990      EIGEN_STRONG_INLINE Matrix& operator=(const MatrixBase<OtherDerived>& other)
        .      {
   13,216        return Base::_set(other);
    1,738  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    4,396      }
        .  
        .      /* Here, doxygen failed to copy the brief information when using \copydoc */
        .  
        .      /**
        .        * \brief Copies the generic expression \a other into *this.
        .        * \copydetails DenseBase::operator=(const EigenBase<OtherDerived> &other)
        .        */
        .      template<typename OtherDerived>
    2,490      EIGEN_STRONG_INLINE Matrix& operator=(const EigenBase<OtherDerived> &other)
        .      {
    2,996        return Base::operator=(other);
    1,674  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      996      }
        .  
        .      template<typename OtherDerived>
        .      EIGEN_STRONG_INLINE Matrix& operator=(const ReturnByValue<OtherDerived>& func)
        .      {
        .        return Base::operator=(func);
        .      }
        .  
        .      /** \brief Default constructor.
-- line 193 ----------------------------------------
-- line 195 ----------------------------------------
        .        * For fixed-size matrices, does nothing.
        .        *
        .        * For dynamic-size matrices, creates an empty matrix of size 0. Does not allocate any array. Such a matrix
        .        * is called a null matrix. This constructor is the unique way to create null matrices: resizing
        .        * a matrix to 0 is not supported.
        .        *
        .        * \sa resize(Index,Index)
        .        */
6,036,342      EIGEN_STRONG_INLINE Matrix() : Base()
    1,018  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .      {
1,507,014        Base::_check_template_params();

    1,178  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .        EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
1,531,976      }
        .  
        .      // FIXME is it still needed
        .      Matrix(internal::constructor_without_unaligned_array_assert)
        .        : Base(internal::constructor_without_unaligned_array_assert())
        .      { Base::_check_template_params(); EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED }
        .  
        .  #ifdef EIGEN_HAVE_RVALUE_REFERENCES
        .      Matrix(Matrix&& other)
-- line 215 ----------------------------------------
-- line 227 ----------------------------------------
        .  #endif
        .  
        .      /** \brief Constructs a vector or row-vector with given dimension. \only_for_vectors
        .        *
        .        * Note that this is only useful for dynamic-size vectors. For fixed-size vectors,
        .        * it is redundant to pass the dimension here, so it makes more sense to use the default
        .        * constructor Matrix() instead.
        .        */
    6,280      EIGEN_STRONG_INLINE explicit Matrix(Index dim)
    9,555        : Base(dim, RowsAtCompileTime == 1 ? 1 : dim, ColsAtCompileTime == 1 ? 1 : dim)

    1,026  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .      {
    2,520        Base::_check_template_params();

        .        EIGEN_STATIC_ASSERT_VECTOR_ONLY(Matrix)
    2,512        eigen_assert(dim >= 0);
        .        eigen_assert(SizeAtCompileTime == Dynamic || SizeAtCompileTime == dim);
        .        EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
    2,512      }
        .  
        .      #ifndef EIGEN_PARSED_BY_DOXYGEN
        .      template<typename T0, typename T1>
    3,941      EIGEN_STRONG_INLINE Matrix(const T0& x, const T1& y)
    2,256      {
    1,026  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    1,130        Base::_check_template_params();
    1,210  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    5,703        Base::template _init2<T0,T1>(x, y);
    1,410  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    2,815      }
        .      #else
        .      /** \brief Constructs an uninitialized matrix with \a rows rows and \a cols columns.
        .        *
        .        * This is useful for dynamic-size matrices. For fixed-size matrices,
        .        * it is redundant to pass these parameters, so one should use the default constructor
        .        * Matrix() instead. */
        .      Matrix(Index rows, Index cols);
        .      /** \brief Constructs an initialized 2D vector with given coefficients */
-- line 259 ----------------------------------------
-- line 279 ----------------------------------------
        .        m_storage.data()[2] = z;
        .        m_storage.data()[3] = w;
        .      }
        .  
        .      explicit Matrix(const Scalar *data);
        .  
        .      /** \brief Constructor copying the value of the expression \a other */
        .      template<typename OtherDerived>
    2,512      EIGEN_STRONG_INLINE Matrix(const MatrixBase<OtherDerived>& other)
    8,486               : Base(other.rows() * other.cols(), other.rows(), other.cols())

    3,324  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


        .      {
        .        // This test resides here, to bring the error messages closer to the user. Normally, these checks
        .        // are performed deeply within the library, thus causing long and scary error traces.
        .        EIGEN_STATIC_ASSERT((internal::is_same<Scalar, typename OtherDerived::Scalar>::value),
        .          YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY)
        .  
      628        Base::_check_template_params();

    1,888        Base::_set_noalias(other);

    2,002  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    2,198      }
        .      /** \brief Copy constructor */
1,434,736      EIGEN_STRONG_INLINE Matrix(const Matrix& other)
4,842,238              : Base(other.rows() * other.cols(), other.rows(), other.cols())
    1,002  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)        .      {
  358,684        Base::_check_template_params();

1,076,052        Base::_set_noalias(other);

1,076,052      }
        .      /** \brief Copy constructor with in-place evaluation */
        .      template<typename OtherDerived>
    1,884      EIGEN_STRONG_INLINE Matrix(const ReturnByValue<OtherDerived>& other)
    1,256      {

      628        Base::_check_template_params();

    5,032        Base::resize(other.rows(), other.cols());
    3,420  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)    1,888        other.evalTo(*this);
    1,986  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    1,256      }
        .  
        .      /** \brief Copy constructor for generic expressions.
        .        * \sa MatrixBase::operator=(const EigenBase<OtherDerived>&)
        .        */
        .      template<typename OtherDerived>
        .      EIGEN_STRONG_INLINE Matrix(const EigenBase<OtherDerived> &other)
        .        : Base(other.derived().rows() * other.derived().cols(), other.derived().rows(), other.derived().cols())
        .      {
-- line 320 ----------------------------------------
-- line 328 ----------------------------------------
        .      /** \internal
        .        * \brief Override MatrixBase::swap() since for dynamic-sized matrices
        .        * of same type it is enough to swap the data pointers.
        .        */
        .      template<typename OtherDerived>
        .      void swap(MatrixBase<OtherDerived> const & other)
        .      { this->_swap(other.derived()); }
        .  
  552,420      inline Index innerStride() const { return 1; }
  416,096      inline Index outerStride() const { return this->innerSize(); }

    1,018  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  
        .      /////////// Geometry module ///////////
        .  
        .      template<typename OtherDerived>
        .      explicit Matrix(const RotationBase<OtherDerived,ColsAtCompileTime>& r);
        .      template<typename OtherDerived>
        .      Matrix& operator=(const RotationBase<OtherDerived,ColsAtCompileTime>& r);
        .  
-- line 345 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 146 ----------------------------------------
        .      /**
        .        * \brief Assigns matrices to each other.
        .        *
        .        * \note This is a special case of the templated operator=. Its purpose is
        .        * to prevent a default operator= from hiding the templated operator=.
        .        *
        .        * \callgraph
        .        */
   98,000      EIGEN_STRONG_INLINE Matrix& operator=(const Matrix& other)
        .      {
  117,608        return Base::_set(other);
    1,383  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   39,200      }
        .  
        .      /** \internal
        .        * \brief Copies the value of the expression \a other into \c *this with automatic resizing.
        .        *
        .        * *this might be resized to match the dimensions of \a other. If *this was a null matrix (not already initialized),
        .        * it will be initialized.
        .        *
        .        * Note that copying a row-vector into a vector (and conversely) is allowed.
        .        * The resizing, if any, is then done in the appropriate way so that row-vectors
        .        * remain row-vectors and vectors remain vectors.
        .        */
        .      template<typename OtherDerived>
      725      EIGEN_STRONG_INLINE Matrix& operator=(const MatrixBase<OtherDerived>& other)
        .      {
      878        return Base::_set(other);
    1,800  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      290      }
        .  
        .      /* Here, doxygen failed to copy the brief information when using \copydoc */
        .  
        .      /**
        .        * \brief Copies the generic expression \a other into *this.
        .        * \copydetails DenseBase::operator=(const EigenBase<OtherDerived> &other)
        .        */
        .      template<typename OtherDerived>
   16,350      EIGEN_STRONG_INLINE Matrix& operator=(const EigenBase<OtherDerived> &other)
        .      {
   19,624        return Base::operator=(other);

    1,520  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    6,540      }
        .  
        .      template<typename OtherDerived>
        .      EIGEN_STRONG_INLINE Matrix& operator=(const ReturnByValue<OtherDerived>& func)
        .      {
        .        return Base::operator=(func);
        .      }
        .  
        .      /** \brief Default constructor.
-- line 193 ----------------------------------------
-- line 195 ----------------------------------------
        .        * For fixed-size matrices, does nothing.
        .        *
        .        * For dynamic-size matrices, creates an empty matrix of size 0. Does not allocate any array. Such a matrix
        .        * is called a null matrix. This constructor is the unique way to create null matrices: resizing
        .        * a matrix to 0 is not supported.
        .        *
        .        * \sa resize(Index,Index)
        .        */
6,899,616      EIGEN_STRONG_INLINE Matrix() : Base()

    1,127  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .      {
1,724,912        Base::_check_template_params();

        .        EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
1,724,900      }
        .  
        .      // FIXME is it still needed
        .      Matrix(internal::constructor_without_unaligned_array_assert)
        .        : Base(internal::constructor_without_unaligned_array_assert())
        .      { Base::_check_template_params(); EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED }
        .  
        .  #ifdef EIGEN_HAVE_RVALUE_REFERENCES
        .      Matrix(Matrix&& other)
-- line 215 ----------------------------------------
-- line 265 ----------------------------------------
        .      {
        .        Base::_check_template_params();
        .        EIGEN_STATIC_ASSERT_VECTOR_SPECIFIC_SIZE(Matrix, 3)
        .        m_storage.data()[0] = x;
        .        m_storage.data()[1] = y;
        .        m_storage.data()[2] = z;
        .      }
        .      /** \brief Constructs an initialized 4D vector with given coefficients */
       64      EIGEN_STRONG_INLINE Matrix(const Scalar& x, const Scalar& y, const Scalar& z, const Scalar& w)
       24      {

        8        Base::_check_template_params();

        .        EIGEN_STATIC_ASSERT_VECTOR_SPECIFIC_SIZE(Matrix, 4)
       56        m_storage.data()[0] = x;

       56        m_storage.data()[1] = y;

       56        m_storage.data()[2] = z;

       56        m_storage.data()[3] = w;

       16      }
        .  
        .      explicit Matrix(const Scalar *data);
        .  
        .      /** \brief Constructor copying the value of the expression \a other */
        .      template<typename OtherDerived>
   26,280      EIGEN_STRONG_INLINE Matrix(const MatrixBase<OtherDerived>& other)
   88,686               : Base(other.rows() * other.cols(), other.rows(), other.cols())        .      {
        .        // This test resides here, to bring the error messages closer to the user. Normally, these checks
        .        // are performed deeply within the library, thus causing long and scary error traces.
        .        EIGEN_STATIC_ASSERT((internal::is_same<Scalar, typename OtherDerived::Scalar>::value),
        .          YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY)
        .  
    6,573        Base::_check_template_params();

   19,713        Base::_set_noalias(other);

   19,710      }
        .      /** \brief Copy constructor */
        .      EIGEN_STRONG_INLINE Matrix(const Matrix& other)
        .              : Base(other.rows() * other.cols(), other.rows(), other.cols())
        .      {
        .        Base::_check_template_params();
        .        Base::_set_noalias(other);
        .      }
        .      /** \brief Copy constructor with in-place evaluation */
-- line 305 ----------------------------------------
-- line 328 ----------------------------------------
        .      /** \internal
        .        * \brief Override MatrixBase::swap() since for dynamic-sized matrices
        .        * of same type it is enough to swap the data pointers.
        .        */
        .      template<typename OtherDerived>
        .      void swap(MatrixBase<OtherDerived> const & other)
        .      { this->_swap(other.derived()); }
        .  
1,592,784      inline Index innerStride() const { return 1; }
  862,272      inline Index outerStride() const { return this->innerSize(); }

    1,159  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  
        .      /////////// Geometry module ///////////
        .  
        .      template<typename OtherDerived>
        .      explicit Matrix(const RotationBase<OtherDerived,ColsAtCompileTime>& r);
        .      template<typename OtherDerived>
        .      Matrix& operator=(const RotationBase<OtherDerived,ColsAtCompileTime>& r);
        .  
-- line 345 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp
--------------------------------------------------------------------------------
           Ir 

            .  
            .  #include "quadprog.h"
            .  
            .  using namespace std;
            .  
            .  //more formatting for rapid algorithm
            .  //takes advantage of sparseness
            6  vector<int> getIr(SparseMatrixPtr R){
           27      vector<int> ir (R->nonZeros());

          769  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
            1      int count=0;
      280,333      for (int k=0; k<R->outerSize(); ++k){


    2,834,820          for (Eigen::SparseMatrix<float>::InnerIterator it(*R,k); it; ++it){
    3,138,646              ir[count] = it.row();


          937  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      241,434              count++;
            .          }
            .      }
            1      return ir;
            .  
            5  }
            6  vector<int> getJc(SparseMatrixPtr R){
           24      vector<int> jc ((R->cols())+1);

            6      jc[0]=0;

            1      int sum=0;
      280,333      for (int k=0; k<R->outerSize(); ++k){


    2,834,820          for (Eigen::SparseMatrix<float>::InnerIterator it(*R,k); it; ++it){
      241,434              sum++;
            .          }
      233,600          jc[k+1]=sum;

            .      }
            1      return jc;
            5  }
            6  vector<float> getPr(SparseMatrixPtr R){
           23      vector<float> pr (R->nonZeros(), 0);

            1      int count=0;
      280,333      for (int k=0; k<R->outerSize(); ++k){


    2,834,820          for (Eigen::SparseMatrix<float>::InnerIterator it(*R,k); it; ++it){
    3,380,076              pr[count]=it.value();


      241,434              count++;
            .          }
            .      }
            1      return pr;
            5  }
            .  
            .  //row increment
            .  void doStep(int row, const vector<float>& in, vector<float>& out,
            .      const vector<int>& ir, const vector<int>& jc, const vector<float>& pr, const vector<float>& invdg,
            .      const vector<float>& lb, const vector<float>& ub)
  105,120,000  {
   23,360,000      float res = 0;
  105,120,000      int start = jc[row];

  116,800,000      int end   = jc[row+1];

            .      int i;
            .  
  552,948,000      for(i = start; i < end; i++)
3,380,076,004          res +=  pr[i]*in[ir[i]];


          705  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
            .  
  268,640,000      res = (in[row]-res*invdg[row])*0.5;

  142,243,887      if(res < lb[row]) res = lb[row];

  162,719,488      if(res > ub[row]) res = ub[row];

  116,800,000      out[row] = res;

   23,360,000  }
            .  
            .  //quadratic programming optimization algorithm
           10  vector<float> runQP(qp_argsPtr args, const vector<int> &featureIndexes, const bool USING_FEATURES){
            .      //get ir and jc
           24      vector<int> ir = getIr(args->R);   25,118,956  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp:getIr(boost::shared_ptr<Eigen::SparseMatrix<float, 0, int> >) (1x)
          986  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
           28      vector<int> jc = getJc(args->R);
          986  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)   12,733,469  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp:getJc(boost::shared_ptr<Eigen::SparseMatrix<float, 0, int> >) (1x)

           28      vector<float> pr = getPr(args->R);

          986  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   22,702,416  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp:getPr(boost::shared_ptr<Eigen::SparseMatrix<float, 0, int> >) (1x)            .  
           11      int size = args->R->rows();            .  
           18      vector<float>* buf1 = new vector<float>(args->x);


          729  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          481  => ???:operator new(unsigned long) (1x)
           21      vector<float>* buf2 = new vector<float>(size, 0);


          467  => ???:operator new(unsigned long) (1x)

            .      vector<float>* in;
            .      vector<float>* out;
            .  
            .      //perform algorithm
        5,011      for(int i = 0; i < args->iter; i++){

        2,000          if(i % 2){
          500              in = buf2;
          750              out = buf1;
            .          }
            .          else{
          500              in = buf1;
          500              out = buf2;
            .          }
            .  
   46,722,500          for(int r = 0; r < size; r++){
  338,720,004              doStep(r, *in, *out, ir, jc, pr, args->invdg, args->lb, args->ub);
9,896,053,209  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp:doStep(int, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&) (11680000x)
          986  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

            .          }
            .      }
            2      if(USING_FEATURES){
            .          //reset values at feature points
            1          int count=0;
      350,416          for(int i=0; i<args->x.size(); i++){


      280,320              if(i==featureIndexes[count]){

       10,340                  (*out)[i]=0.2; //<--------------------------------------could be related to band size

        1,034                  count++;
            .              }
            .          }
            .      }
            .  
           10      cout<<"quadratic program finished"<<endl;
          410  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
          341  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
           12      return *out;


            6  }
            .  
            .  
            .  
            .  //Function for computing weighted voxel grid for marching cubes
            .  //takes as input a binary volume
            9  gridPtr optimize(gridPtr volume, gridPtr featureMap, const bool USING_FEATURES){
            1      int BAND_SIZE=4.0;
            .      //prime quadratic programming arguments
            .      //prepare margin
           56      gridPtr margin = getsqrt(getsqdist(fastPerim(volume)));
   97,801,284  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getsqrt(boost::shared_ptr<grid>) (1x)


2,311,180,939  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:fastPerim(boost::shared_ptr<grid>) (1x)
7,421,264,406  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getsqdist(boost::shared_ptr<grid>) (1x)
        5,231  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (5x)
           18      cout<<"margin calculated"<<endl;
        5,182  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
          360  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
          341  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
            .      //prepare bands
           27      bandsPtr bnds = createBands(margin, BAND_SIZE);  594,831,863  => /home/davidwatkins/post_processing/mesh_reconstruction/narrow_band/narrowBand.cpp:createBands(boost::shared_ptr<grid>, float) (1x)
        1,840  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
           10      cout<<"bands created"<<endl;
          322  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
          341  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
            .      //get band point indexes
           32      vector<int> indexes = findIndexes(bnds->band);   90,058,697  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:findIndexes(boost::shared_ptr<grid>) (1x)
        2,402  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

            .      //create index map
           29      gridPtr indexMap = getIndexMap(bnds->band, indexes);


  110,239,753  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:getIndexMap(boost::shared_ptr<grid>, std::vector<int, std::allocator<int> > const&) (1x)
        1,867  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

           35      vector<int> featureIndexes = getFeatureIndexes(featureMap, indexMap);

          914  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   56,201,559  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.cpp:getFeatureIndexes(boost::shared_ptr<grid>, boost::shared_ptr<grid>) (1x)


           10      cout<<"indexes stored"<<endl;
          341  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
          327  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
            .  
            .      //prepare qp_args
           53      qp_argsPtr args = primeQP(volume, margin, bnds);

2,182,676,710  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.cpp:primeQP(boost::shared_ptr<grid>, boost::shared_ptr<grid>, boost::shared_ptr<bands>) (1x)
        2,551  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
            .  
            .      //run quadratic programming
           34      vector<float> x = runQP(args, featureIndexes, USING_FEATURES);


10,764,250,969  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp:runQP(boost::shared_ptr<qp_args>, std::vector<int, std::allocator<int> > const&, bool) (1x)

        2,572  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
            .  
            .      //prepare new voxel grid with imbedding function
           20      gridPtr F = copyGrid(volume);
   54,054,487  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:copyGrid(boost::shared_ptr<grid>) (1x)
        1,541  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


          826      for(int i=0; i<F->dims[0]; i++){


       27,594          for(int j=0; j<F->dims[1]; j++){


    1,124,442              for(int k=0; k<F->dims[2]; k++){


    4,749,030                  (*F)[i][j][k]=(2.0*(*F)[i][j][k]-1.0)*(BAND_SIZE+1.0);
    6,575,580  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (146124x)

    3,214,728  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (146124x)
   68,386,032  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (146124x)
            .              }
            .          }
            .      }
      256,972      for(int i=0; i<indexes.size(); i++){

      607,360          (*F)(indexes[i]) = x[i];

   53,517,760  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator()(int) (23360x)


            .      }
            .  
            6      return F;

           23  }
       14,301  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/quadprog.cpp:__static_initialization_and_destruction_0(int, int) (1x)

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h
--------------------------------------------------------------------------------
       Ir 

-- line 15 ----------------------------------------
        .  typedef unsigned long hash_id;
        .  
        .  class XYZ{
        .  public:
        .      float x;
        .      float y;
        .      float z;
        .  
6,276,145      XYZ(){}
  178,680      XYZ(float x_, float y_, float z_){
  268,020          x=x_; y=y_; z=z_;
   59,560      }
        .  
  431,185      static float dist(const XYZ& lhs, const XYZ& rhs){
1,121,081          float d = (rhs.x-lhs.x)*(rhs.x-lhs.x);
1,293,555          d+=(rhs.y-lhs.y)*(rhs.y-lhs.y);
1,293,555          d+=(rhs.z-lhs.z)*(rhs.z-lhs.z);
  603,659          return sqrt(d);

  344,948      }
        .  
    6,420      friend bool operator==(const XYZ& lhs, const XYZ& rhs){
   14,124          return dist(lhs, rhs)<0.000001;
   95,016  => /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h:XYZ::dist(XYZ const&, XYZ const&) (1284x)
    2,568      }
        .      friend bool operator!=(const XYZ& lhs, const XYZ& rhs){
        .          return !(lhs==rhs);
        .      }
  492,864      friend bool operator<(const XYZ& lhs, const XYZ& rhs){
  739,296          if (lhs.x < rhs.x)
   98,450              return true;
  443,946          else if (lhs.x > rhs.x)
   97,774              return false;
        .  
  150,624          if (lhs.y < rhs.y)
   20,786              return true;
   88,266          else if (lhs.y > rhs.y)
   17,198              return false;
        .  
   36,672          if (lhs.z < rhs.z)
        .              return true;
   36,672          else if (lhs.z > rhs.z)
   12,224              return false;
        .  
        .          return false;
  246,432      }
        .      friend bool operator<=(const XYZ& lhs, const XYZ& rhs){
        .          return ((lhs<rhs)||(lhs==rhs));
        .      }
        .      friend bool operator>(const XYZ& lhs, const XYZ& rhs){
        .          return !(lhs<=rhs);
        .      }
        .      friend bool operator>=(const XYZ& lhs, const XYZ& rhs){
        .          return !(lhs<rhs);
        .      }
        .  
3,005,584      XYZ& operator=(const XYZ& other){
2,254,188          if (this != &other) {
3,005,584              this->x=other.x;
3,005,584              this->y=other.y;
3,005,584              this->z=other.z;
        .          }
  751,396          return *this;
1,502,792      }
        .  };
        .  
        .  typedef struct {
        .     XYZ p[3];
   54,870  } TRIANGLE;
        .  
        .  
        5  class pointHashmap{
        .  public:
        .      vector<XYZ> points;
        .      int numPoints;
        .  
        .      //construct hashmap and points list
        .      pointHashmap(vector<TRIANGLE> triangles, gridPtr g);
        .  
        .      //get index in points list of point
        .      //returns -1 if not in list
        .      int index(const XYZ& pnt);
        .  
        .  private:
        .      Eigen::Vector3i dims;
        .      unordered_map<hash_id, int> map;
  245,448      hash_id hashXYZ(const XYZ& s){
1,268,148          hash_id val = (hash_id)((double)s.x*1000000000.0*(double)(dims[1]*dims[2]));

  859,068          val+=(hash_id)((double)s.y*1000000.0*(double)dims[2]);

  449,988          val+=(hash_id)((double)s.z*1000.0);
   40,908          return val;
  163,632      }
        .  
        .  };
        .  
        .  #endif

  265,217  <counts for unidentified lines in /home/davidwatkins/post_processing/mesh_reconstruction/marching_cubes/hasher.h>

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 108 ----------------------------------------
         .      Storage m_data;
         .      
         .      Eigen::Map<Matrix<Index,Dynamic,1> > innerNonZeros() { return Eigen::Map<Matrix<Index,Dynamic,1> >(m_innerNonZeros, m_innerNonZeros?m_outerSize:0); }
         .      const  Eigen::Map<const Matrix<Index,Dynamic,1> > innerNonZeros() const { return Eigen::Map<const Matrix<Index,Dynamic,1> >(m_innerNonZeros, m_innerNonZeros?m_outerSize:0); }
         .  
         .    public:
         .      
         .      /** \returns whether \c *this is in compressed form. */
 7,382,529      inline bool isCompressed() const { return m_innerNonZeros==0; }
         .  
         .      /** \returns the number of rows of the matrix */
 1,724,107      inline Index rows() const { return IsRowMajor ? m_outerSize : m_innerSize; }
         .      /** \returns the number of columns of the matrix */
 2,051,161      inline Index cols() const { return IsRowMajor ? m_innerSize : m_outerSize; }
         .  
         .      /** \returns the number of rows (resp. columns) of the matrix if the storage order column major (resp. row major) */
        28      inline Index innerSize() const { return m_innerSize; }
         .      /** \returns the number of columns (resp. rows) of the matrix if the storage order column major (resp. row major) */
 3,934,091      inline Index outerSize() const { return m_outerSize; }
         .      
         .      /** \returns a const pointer to the array of values.
         .        * This function is aimed at interoperability with other libraries.
         .        * \sa innerIndexPtr(), outerIndexPtr() */
 7,448,524      inline const Scalar* valuePtr() const { return &m_data.value(0); }
       913  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .      /** \returns a non-const pointer to the array of values.
         .        * This function is aimed at interoperability with other libraries.
         .        * \sa innerIndexPtr(), outerIndexPtr() */
         .      inline Scalar* valuePtr() { return &m_data.value(0); }
         .  
         .      /** \returns a const pointer to the array of inner indices.
         .        * This function is aimed at interoperability with other libraries.
         .        * \sa valuePtr(), outerIndexPtr() */
 7,448,524      inline const Index* innerIndexPtr() const { return &m_data.index(0); }

         .      /** \returns a non-const pointer to the array of inner indices.
         .        * This function is aimed at interoperability with other libraries.
         .        * \sa valuePtr(), outerIndexPtr() */
         .      inline Index* innerIndexPtr() { return &m_data.index(0); }
         .  
         .      /** \returns a const pointer to the array of the starting positions of the inner vectors.
         .        * This function is aimed at interoperability with other libraries.
         .        * \sa valuePtr(), innerIndexPtr() */
-- line 148 ----------------------------------------
-- line 163 ----------------------------------------
         .  
         .      /** \internal */
         .      inline Storage& data() { return m_data; }
         .      /** \internal */
         .      inline const Storage& data() const { return m_data; }
         .  
         .      /** \returns the value of the matrix at position \a i, \a j
         .        * This function returns Scalar(0) if the element is an explicit \em zero */
   280,320      inline Scalar coeff(Index row, Index col) const
         .      {
   747,520        eigen_assert(row>=0 && row<rows() && col>=0 && col<cols());


         .        
    93,440        const Index outer = IsRowMajor ? row : col;
    93,440        const Index inner = IsRowMajor ? col : row;
   607,360        Index end = m_innerNonZeros ? m_outerIndex[outer] + m_innerNonZeros[outer] : m_outerIndex[outer+1];
 1,027,844        return m_data.atInRange(m_outerIndex[outer], end, inner);

       977  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   186,880      }
         .  
         .      /** \returns a non-const reference to the value of the matrix at position \a i, \a j
         .        *
         .        * If the element does not exist then it is inserted via the insert(Index,Index) function
         .        * which itself turns the matrix into a non compressed form if that was not the case.
         .        *
         .        * This is a O(log(nnz_j)) operation (binary search) plus the cost of insert(Index,Index)
         .        * function if the element does not already exist.
-- line 187 ----------------------------------------
-- line 229 ----------------------------------------
         .      }
         .  
         .    public:
         .  
         .      class InnerIterator;
         .      class ReverseInnerIterator;
         .  
         .      /** Removes all non zeros but keep allocated memory */
         4      inline void setZero()
         .      {
         5        m_data.clear();

        11        memset(m_outerIndex, 0, (m_outerSize+1)*sizeof(Index));
    10,236  => /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/memset.S:memset (1x)
         4        if(m_innerNonZeros)
         .          memset(m_innerNonZeros, 0, (m_outerSize)*sizeof(Index));
         2      }
         .  
         .      /** \returns the number of non zero coefficients */
        16      inline Index nonZeros() const
         .      {
        16        if(m_innerNonZeros)
         .          return innerNonZeros().sum();
        24        return static_cast<Index>(m_data.size());
       897  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         8      }
         .  
         .      /** Preallocates \a reserveSize non zeros.
         .        *
         .        * Precondition: the matrix must be in compressed mode. */
        10      inline void reserve(Index reserveSize)
         .      {
        14        eigen_assert(isCompressed() && "This function does not make sense in non compressed mode.");

        16        m_data.reserve(reserveSize);

         4      }
         .      
         .      #ifdef EIGEN_PARSED_BY_DOXYGEN
         .      /** Preallocates \a reserveSize[\c j] non zeros for each column (resp. row) \c j.
         .        *
         .        * This function turns the matrix in non-compressed mode */
         .      template<class SizesType>
         .      inline void reserve(const SizesType& reserveSizes);
         .      #else
         .      template<class SizesType>
         .      inline void reserve(const SizesType& reserveSizes, const typename SizesType::value_type& enableif = typename SizesType::value_type())
         .      {
         .        EIGEN_UNUSED_VARIABLE(enableif);
         .        reserveInnerVectors(reserveSizes);
         .      }
         .      template<class SizesType>
        12      inline void reserve(const SizesType& reserveSizes, const typename SizesType::Scalar& enableif =
         .      #if (!defined(_MSC_VER)) || (_MSC_VER>=1500) // MSVC 2005 fails to compile with this typename
         .          typename
         .      #endif
         .          SizesType::Scalar())
         .      {
         8        EIGEN_UNUSED_VARIABLE(enableif);

        16        reserveInnerVectors(reserveSizes);

     1,316  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         4      }
         .      #endif // EIGEN_PARSED_BY_DOXYGEN
         .    protected:
         .      template<class SizesType>
        14      inline void reserveInnerVectors(const SizesType& reserveSizes)
         .      {
        16        if(isCompressed())
       889  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .        {
         2          std::size_t totalReserveSize = 0;
         .          // turn the matrix into non-compressed mode
        20          m_innerNonZeros = static_cast<Index*>(std::malloc(m_outerSize * sizeof(Index)));
       867  => /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:malloc (2x)
         8          if (!m_innerNonZeros) internal::throw_std_bad_alloc();
         .          
         .          // temporarily use m_innerSizes to hold the new starting points.
         6          Index* newOuterIndex = m_innerNonZeros;
         .          
         2          Index count = 0;
   410,482          for(Index j=0; j<m_outerSize; ++j)
         .          {
   574,658            newOuterIndex[j] = count;
 2,216,542            count += reserveSizes[j] + (m_outerIndex[j+1]-m_outerIndex[j]);

     1,124  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   820,940            totalReserveSize += reserveSizes[j];

         .          }
        18          m_data.reserve(totalReserveSize);
       945  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        18          Index previousOuterIndex = m_outerIndex[m_outerSize];
   246,296          for(Index j=m_outerSize-1; j>=0; --j)
         .          {
   903,034            Index innerNNZ = previousOuterIndex - m_outerIndex[j];
   492,564            for(Index i=innerNNZ-1; i>=0; --i)
         .            {
         .              m_data.index(newOuterIndex[j]+i) = m_data.index(m_outerIndex[j]+i);
         .              m_data.value(newOuterIndex[j]+i) = m_data.value(m_outerIndex[j]+i);
         .            }
   656,752            previousOuterIndex = m_outerIndex[j];
 1,067,222            m_outerIndex[j] = newOuterIndex[j];
   656,752            m_innerNonZeros[j] = innerNNZ;
         .          }
        76          m_outerIndex[m_outerSize] = m_outerIndex[m_outerSize-1] + m_innerNonZeros[m_outerSize-1] + reserveSizes[m_outerSize-1];

         .          
        38          m_data.resize(m_outerIndex[m_outerSize]);
       929  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .        }
         .        else
         .        {
         .          Index* newOuterIndex = static_cast<Index*>(std::malloc((m_outerSize+1)*sizeof(Index)));
         .          if (!newOuterIndex) internal::throw_std_bad_alloc();
         .          
         .          Index count = 0;
         .          for(Index j=0; j<m_outerSize; ++j)
-- line 331 ----------------------------------------
-- line 351 ----------------------------------------
         .              }
         .            }
         .          }
         .          
         .          std::swap(m_outerIndex, newOuterIndex);
         .          std::free(newOuterIndex);
         .        }
         .        
        10      }
         .    public:
         .  
         .      //--- low level purely coherent filling ---
         .  
         .      /** \internal
         .        * \returns a reference to the non zero coefficient at position \a row, \a col assuming that:
         .        * - the nonzero does not already exist
         .        * - the new coefficient is the last one according to the storage order
-- line 367 ----------------------------------------
-- line 373 ----------------------------------------
         .        * \sa insert, insertBackByOuterInner, startVec */
         .      inline Scalar& insertBack(Index row, Index col)
         .      {
         .        return insertBackByOuterInner(IsRowMajor?row:col, IsRowMajor?col:row);
         .      }
         .  
         .      /** \internal
         .        * \sa insertBack, startVec */
 1,853,558      inline Scalar& insertBackByOuterInner(Index outer, Index inner)
         .      {
 4,236,704        eigen_assert(size_t(m_outerIndex[outer+1]) == m_data.size() && "Invalid ordered insertion (invalid outer index)");

 8,123,008        eigen_assert( (m_outerIndex[outer+1]-m_outerIndex[outer]==0 || m_data.index(m_data.size()-1)<inner) && "Invalid ordered insertion (invalid inner index)");


 2,383,146        Index p = m_outerIndex[outer+1];
 2,647,940        ++m_outerIndex[outer+1];
 2,647,940        m_data.append(0, inner);

 2,118,352        return m_data.value(p);

 1,059,176      }
         .  
         .      /** \internal
         .        * \warning use it only if you know what you are doing */
 1,588,764      inline Scalar& insertBackByOuterInnerUnordered(Index outer, Index inner)
         .      {
 2,383,146        Index p = m_outerIndex[outer+1];
 2,647,940        ++m_outerIndex[outer+1];
 2,647,944        m_data.append(0, inner);

       929  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 2,118,352        return m_data.value(p);

   529,588      }
         .  
         .      /** \internal
         .        * \sa insertBack, insertBackByOuterInner */
   280,320      inline void startVec(Index outer)
         .      {
   654,080        eigen_assert(m_outerIndex[outer]==Index(m_data.size()) && "You must call startVec for each inner vector sequentially");

   467,200        eigen_assert(m_outerIndex[outer+1]==0 && "You must call startVec for each inner vector sequentially");
   700,800        m_outerIndex[outer+1] = m_outerIndex[outer];
   186,880      }
         .  
         .      /** \internal
         .        * Must be called after inserting a set of non zero entries using the low level compressed API.
         .        */
         8      inline void finalize()
         .      {
        12        if(isCompressed())

         .        {
        12          Index size = static_cast<Index>(m_data.size());

         6          Index i = m_outerSize;
         .          // find the last filled column
        24          while (i>=0 && m_outerIndex[i]==0)
         .            --i;
         2          ++i;
        10          while (i<=m_outerSize)
         .          {
         .            m_outerIndex[i] = size;
         .            ++i;
         .          }
         .        }
         4      }
         .  
         .      //---
         .  
         .      template<typename InputIterators>
         .      void setFromTriplets(const InputIterators& begin, const InputIterators& end);
         .  
         .      void sumupDuplicates();
         .  
-- line 437 ----------------------------------------
-- line 441 ----------------------------------------
         .        * same as insert(Index,Index) except that the indices are given relative to the storage order */
         .      Scalar& insertByOuterInner(Index j, Index i)
         .      {
         .        return insert(IsRowMajor ? j : i, IsRowMajor ? i : j);
         .      }
         .  
         .      /** Turns the matrix into the \em compressed format.
         .        */
         5      void makeCompressed()
         .      {
         6        if(isCompressed())

         1          return;
         .        
         .        Index oldStart = m_outerIndex[1];
         .        m_outerIndex[1] = m_innerNonZeros[0];
         .        for(Index j=1; j<m_outerSize; ++j)
         .        {
         .          Index nextOldStart = m_outerIndex[j+1];
         .          Index offset = oldStart - m_outerIndex[j];
         .          if(offset>0)
-- line 460 ----------------------------------------
-- line 467 ----------------------------------------
         .          }
         .          m_outerIndex[j+1] = m_outerIndex[j] + m_innerNonZeros[j];
         .          oldStart = nextOldStart;
         .        }
         .        std::free(m_innerNonZeros);
         .        m_innerNonZeros = 0;
         .        m_data.resize(m_outerIndex[m_outerSize]);
         .        m_data.squeeze();
         4      }
         .  
         .      /** Turns the matrix into the uncompressed mode */
         .      void uncompress()
         .      {
         .        if(m_innerNonZeros != 0)
         .          return; 
         .        m_innerNonZeros = static_cast<Index*>(std::malloc(m_outerSize * sizeof(Index)));
         .        for (Index i = 0; i < m_outerSize; i++)
         .        {
         .          m_innerNonZeros[i] = m_outerIndex[i+1] - m_outerIndex[i]; 
         .        }
         .      }
         .      
         .      /** Suppresses all nonzeros which are \b much \b smaller \b than \a reference under the tolerence \a epsilon */
         6      void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())
         .      {
        21        prune(default_prunning_func(reference,epsilon));
     2,117  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


         2      }
         .      
         .      /** Turns the matrix into compressed format, and suppresses all nonzeros which do not satisfy the predicate \a keep.
         .        * The functor type \a KeepFunc must implement the following function:
         .        * \code
         .        * bool operator() (const Index& row, const Index& col, const Scalar& value) const;
         .        * \endcode
         .        * \sa prune(Scalar,RealScalar)
         .        */
         .      template<typename KeepFunc>
         6      void prune(const KeepFunc& keep = KeepFunc())
         .      {
         .        // TODO optimize the uncompressed mode to avoid moving and allocating the data twice
         .        // TODO also implement a unit test
         8        makeCompressed();

       913  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
         1        Index k = 0;
   186,887        for(Index j=0; j<m_outerSize; ++j)
         .        {
   186,880          Index previousStart = m_outerIndex[j];
   186,880          m_outerIndex[j] = k;
   210,240          Index end = m_outerIndex[j+1];
 1,199,336          for(Index i=previousStart; i<end; ++i)
         .          {
 6,884,648            if(keep(IsRowMajor?j:m_data.index(i), IsRowMajor?m_data.index(i):j, m_data.value(i)))


     1,041  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .            {
 4,587,246              m_data.value(k) = m_data.value(i);

 4,587,246              m_data.index(k) = m_data.index(i);

   241,434              ++k;
         .            }
         .          }
         .        }
         9        m_outerIndex[m_outerSize] = k;
         9        m_data.resize(k,0);

         4      }
         .  
         .      /** Resizes the matrix to a \a rows x \a cols matrix leaving old values untouched.
         .        * \sa resizeNonZeros(Index), reserve(), setZero()
         .        */
         .      void conservativeResize(Index rows, Index cols) 
         .      {
         .        // No change
         .        if (this->rows() == rows && this->cols() == cols) return;
-- line 535 ----------------------------------------
-- line 588 ----------------------------------------
         .            m_outerIndex[i] = last; 
         .        }
         .        m_outerSize += outerChange;
         .      }
         .      
         .      /** Resizes the matrix to a \a rows x \a cols matrix and initializes it to zero.
         .        * \sa resizeNonZeros(Index), reserve(), setZero()
         .        */
        66      void resize(Index rows, Index cols)
         .      {
        22        const Index outerSize = IsRowMajor ? rows : cols;
        33        m_innerSize = IsRowMajor ? cols : rows;
        59        m_data.clear();

       897  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        44        if (m_outerSize != outerSize || m_outerSize==0)
         .        {
        59          std::free(m_outerIndex);
        56  => /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:free (8x)
     2,344  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       114          m_outerIndex = static_cast<Index*>(std::malloc((outerSize + 1) * sizeof(Index)));
     2,425  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     3,218  => /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:malloc (8x)
        44          if (!m_outerIndex) internal::throw_std_bad_alloc();
         .          
        33          m_outerSize = outerSize;
         .        }
        44        if(m_innerNonZeros)
         .        {
         .          std::free(m_innerNonZeros);
         .          m_innerNonZeros = 0;
         .        }
       125        memset(m_outerIndex, 0, (m_outerSize+1)*sizeof(Index));
    97,365  => /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/memset.S:memset (8x)
     2,366  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        22      }
         .  
         .      /** \internal
         .        * Resize the nonzero vector to \a size */
         .      void resizeNonZeros(Index size)
         .      {
         .        // TODO remove this function
         .        m_data.resize(size);
         .      }
         .  
         .      /** \returns a const expression of the diagonal coefficients */
        19      const Diagonal<const SparseMatrix> diagonal() const { return *this; }

       985  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
         .      /** Default constructor yielding an empty \c 0 \c x \c 0 matrix */
         .      inline SparseMatrix()
         .        : m_outerSize(-1), m_innerSize(0), m_outerIndex(0), m_innerNonZeros(0)
         .      {
         .        check_template_parameters();
         .        resize(0, 0);
         .      }
         .  
         .      /** Constructs a \a rows \c x \a cols empty matrix */
        77      inline SparseMatrix(Index rows, Index cols)
       199        : m_outerSize(0), m_innerSize(0), m_outerIndex(0), m_innerNonZeros(0)
       985  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


         .      {
        30        check_template_parameters();
       993  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        85        resize(rows, cols);
       833  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        55      }
         .  
         .      /** Constructs a sparse matrix from the sparse expression \a other */
         .      template<typename OtherDerived>
        12      inline SparseMatrix(const SparseMatrixBase<OtherDerived>& other)
        34        : m_outerSize(0), m_innerSize(0), m_outerIndex(0), m_innerNonZeros(0)


         .      {
         .        EIGEN_STATIC_ASSERT((internal::is_same<Scalar, typename OtherDerived::Scalar>::value),
         .          YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY)
         4        check_template_parameters();

        32        *this = other.derived();

     1,153  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        10      }
         .      
         .      /** Constructs a sparse matrix from the sparse selfadjoint view \a other */
         .      template<typename OtherDerived, unsigned int UpLo>
         .      inline SparseMatrix(const SparseSelfAdjointView<OtherDerived, UpLo>& other)
         .        : m_outerSize(0), m_innerSize(0), m_outerIndex(0), m_innerNonZeros(0)
         .      {
         .        check_template_parameters();
         .        *this = other;
-- line 661 ----------------------------------------
-- line 676 ----------------------------------------
         .      {
         .        check_template_parameters();
         .        initAssignment(other);
         .        other.evalTo(*this);
         .      }
         .  
         .      /** Swaps the content of two sparse matrices of the same type.
         .        * This is a fast operation that simply swaps the underlying pointers and parameters. */
        30      inline void swap(SparseMatrix& other)
         .      {
         .        //EIGEN_DBG_SPARSE(std::cout << "SparseMatrix:: swap\n");
        52        std::swap(m_outerIndex, other.m_outerIndex);

       665  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        48        std::swap(m_innerSize, other.m_innerSize);

        48        std::swap(m_outerSize, other.m_outerSize);

        48        std::swap(m_innerNonZeros, other.m_innerNonZeros);

        52        m_data.swap(other.m_data);
       929  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        12      }
         .  
         .      /** Sets *this to the identity matrix.
         .        * This function also turns the matrix into compressed mode, and drop any reserved memory. */
         .      inline void setIdentity()
         .      {
         .        eigen_assert(rows() == cols() && "ONLY FOR SQUARED MATRICES");
         .        this->m_data.resize(rows());
         .        Eigen::Map<Matrix<Index, Dynamic, 1> >(&this->m_data.index(0), rows()).setLinSpaced(0, rows()-1);
         .        Eigen::Map<Matrix<Scalar, Dynamic, 1> >(&this->m_data.value(0), rows()).setOnes();
         .        Eigen::Map<Matrix<Index, Dynamic, 1> >(this->m_outerIndex, rows()+1).setLinSpaced(0, rows());
         .        std::free(m_innerNonZeros);
         .        m_innerNonZeros = 0;
         .      }
         5      inline SparseMatrix& operator=(const SparseMatrix& other)
         .      {
        10        if (other.isRValue())

     1,041  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .        {
        15          swap(other.const_cast_derived());

     1,137  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .        }
         .        else if(this!=&other)
         .        {
         .          initAssignment(other);
         .          if(other.isCompressed())
         .          {
         .            memcpy(m_outerIndex, other.m_outerIndex, (m_outerSize+1)*sizeof(Index));
         .            m_data = other.m_data;
         .          }
         .          else
         .          {
         .            Base::operator=(other);
         .          }
         .        }
         1        return *this;
         2      }
         .  
         .      #ifndef EIGEN_PARSED_BY_DOXYGEN
         .      template<typename Lhs, typename Rhs>
         5      inline SparseMatrix& operator=(const SparseSparseProduct<Lhs,Rhs>& product)
        12      { return Base::operator=(product); }

     1,353  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .      
         .      template<typename OtherDerived>
         .      inline SparseMatrix& operator=(const ReturnByValue<OtherDerived>& other)
         .      {
         .        initAssignment(other);
         .        return Base::operator=(other.derived());
         .      }
         .      
-- line 739 ----------------------------------------
-- line 778 ----------------------------------------
         .          }
         .          s << std::endl;
         .        );
         .        s << static_cast<const SparseMatrixBase<SparseMatrix>&>(m);
         .        return s;
         .      }
         .  
         .      /** Destructor */
        52      inline ~SparseMatrix()
         .      {
        65        std::free(m_outerIndex);
     1,202  => /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:free (9x)
        65        std::free(m_innerNonZeros);
        63  => /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:free (9x)
        95      }
       865  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .  
         .  #ifndef EIGEN_PARSED_BY_DOXYGEN
         .      /** Overloaded for performance */
         .      Scalar sum() const;
         .  #endif
         .      
         .  #   ifdef EIGEN_SPARSEMATRIX_PLUGIN
         .  #     include EIGEN_SPARSEMATRIX_PLUGIN
-- line 798 ----------------------------------------
-- line 832 ----------------------------------------
         .  
         .      /** \internal
         .        * \sa insert(Index,Index) */
         .      EIGEN_DONT_INLINE Scalar& insertUncompressed(Index row, Index col);
         .  
         .  public:
         .      /** \internal
         .        * \sa insert(Index,Index) */
 1,197,372      EIGEN_STRONG_INLINE Scalar& insertBackUncompressed(Index row, Index col)
         .      {
   399,124        const Index outer = IsRowMajor ? row : col;
   399,124        const Index inner = IsRowMajor ? col : row;
         .  
 1,197,372        eigen_assert(!isCompressed());

 5,188,612        eigen_assert(m_innerNonZeros[outer]<=(m_outerIndex[outer+1] - m_outerIndex[outer]));
         .  
 3,592,116        Index p = m_outerIndex[outer] + m_innerNonZeros[outer]++;
 1,995,624        m_data.index(p) = inner;
       897  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 1,995,624        return (m_data.value(p) = 0);

       913  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   399,124      }
         .  
         .  private:
        26    static void check_template_parameters()
         .    {
         .      EIGEN_STATIC_ASSERT(NumTraits<Index>::IsSigned,THE_INDEX_TYPE_MUST_BE_A_SIGNED_TYPE);
         .      EIGEN_STATIC_ASSERT((Options&(ColMajor|RowMajor))==Options,INVALID_MATRIX_TEMPLATE_PARAMETERS);
        26    }
         .  
         .    struct default_prunning_func {
        15      default_prunning_func(const Scalar& ref, const RealScalar& eps) : reference(ref), epsilon(eps) {}
 1,853,558      inline bool operator() (const Index&, const Index&, const Scalar& value) const
         .      {
 2,383,146        return !internal::isMuchSmallerThan(value, reference, epsilon);

   529,588      }
         .      Scalar reference;
         .      RealScalar epsilon;
         .    };
         .  };
         .  
         .  template<typename Scalar, int _Options, typename _Index>
         .  class SparseMatrix<Scalar,_Options,_Index>::InnerIterator
         .  {
         .    public:
 3,724,260      InnerIterator(const SparseMatrix& mat, Index outer)
14,897,056        : m_values(mat.valuePtr()), m_indices(mat.innerIndexPtr()), m_outer(outer), m_id(mat.m_outerIndex[outer])

     1,770  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

         .      {
 3,724,264        if(mat.isCompressed())

       889  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 6,827,810          m_end = mat.m_outerIndex[outer+1];
         .        else
         .          m_end = m_id + mat.m_innerNonZeros[outer];
 1,241,420      }
         .  
38,807,648      inline InnerIterator& operator++() { m_id++; return *this; }
         .  
25,676,976      inline const Scalar& value() const { return m_values[m_id]; }
         .      inline Scalar& valueRef() { return const_cast<Scalar&>(m_values[m_id]); }
         .  
46,167,264      inline Index index() const { return m_indices[m_id]; }
         .      inline Index outer() const { return m_outer; }
 2,414,340      inline Index row() const { return IsRowMajor ? m_outer : index(); }

         .      inline Index col() const { return IsRowMajor ? index() : m_outer; }
         .  
53,859,740      inline operator bool() const { return (m_id < m_end); }
         .  
         .    protected:
         .      const Scalar* m_values;
         .      const Index* m_indices;
         .      const Index m_outer;
         .      Index m_id;
         .      Index m_end;
         .  };
-- line 902 ----------------------------------------
-- line 932 ----------------------------------------
         .      const Index m_outer;
         .      Index m_id;
         .      const Index m_start;
         .  };
         .  
         .  namespace internal {
         .  
         .  template<typename InputIterator, typename SparseMatrixType>
        16  void set_from_triplets(const InputIterator& begin, const InputIterator& end, SparseMatrixType& mat, int Options = 0)
         .  {
        12    EIGEN_UNUSED_VARIABLE(Options);
       913  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .    enum { IsRowMajor = SparseMatrixType::IsRowMajor };
         .    typedef typename SparseMatrixType::Scalar Scalar;
         .    typedef typename SparseMatrixType::Index Index;
        44    SparseMatrix<Scalar,IsRowMajor?ColMajor:RowMajor,Index> trMat(mat.rows(),mat.cols());
     2,459  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)         .  
        20    if(begin!=end)
     1,273  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .    {
         .      // pass 1: count the nnz per inner-vector
        28      Matrix<Index,Dynamic,1> wi(trMat.outerSize());


     2,021  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        12      wi.setZero();

     1,049  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 2,394,772      for(InputIterator it(begin); it!=end; ++it)
     1,145  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


         .      {
 9,578,988        eigen_assert(it->row()>=0 && it->row()<mat.rows() && it->col()>=0 && it->col()<mat.cols());


     2,670  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x) 3,392,558        wi(IsRowMajor ? it->col() : it->row())++;

     1,119  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


         .      }
         .  
         .      // pass 2: insert all the elements into trMat
        20      trMat.reserve(wi);

     1,281  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 2,394,768      for(InputIterator it(begin); it!=end; ++it)


 6,385,992        trMat.insertBackUncompressed(it->row(),it->col()) = it->value();
     1,714  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

         .  
         .      // pass 3:
        20      trMat.sumupDuplicates();

       913  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .    }
         .  
         .    // pass 4: transposed copy -> implicit sorting
        30    mat = trMat;

     1,946  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

         8  }
         .  
         .  }
         .  
         .  
         .  /** Fill the matrix \c *this with the list of \em triplets defined by the iterator range \a begin - \a end.
         .    *
         .    * A \em triplet is a tuple (i,j,value) defining a non-zero element.
         .    * The input list of triplets does not have to be sorted, and can contains duplicated elements.
-- line 978 ----------------------------------------
-- line 1006 ----------------------------------------
         .    * \endcode
         .    *
         .    * \warning The list of triplets is read multiple times (at least twice). Therefore, it is not recommended to define
         .    * an abstract iterator over a complex data-structure that would be expensive to evaluate. The triplets should rather
         .    * be explicitely stored into a std::vector for instance.
         .    */
         .  template<typename Scalar, int _Options, typename _Index>
         .  template<typename InputIterators>
        12  void SparseMatrix<Scalar,_Options,_Index>::setFromTriplets(const InputIterators& begin, const InputIterators& end)
         .  {
        18    internal::set_from_triplets(begin, end, *this);
     1,713  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         4  }
         .  
         .  /** \internal */
         .  template<typename Scalar, int _Options, typename _Index>
        10  void SparseMatrix<Scalar,_Options,_Index>::sumupDuplicates()
         .  {
        12    eigen_assert(!isCompressed());

         .    // TODO, in practice we should be able to use m_innerNonZeros for that task
        24    Matrix<Index,Dynamic,1> wi(innerSize());


       865  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        18    wi.fill(-1);

     1,057  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         2    Index count = 0;
         .    // for each inner-vector, wi[inner_index] will hold the position of first element into the index/value buffers
   738,866    for(Index j=0; j<outerSize(); ++j)

         .    {
   164,188      Index start   = count;
 1,313,504      Index oldEnd  = m_outerIndex[j]+m_innerNonZeros[j];
 1,783,376      for(Index k=m_outerIndex[j]; k<oldEnd; ++k)
         .      {
 1,995,620        Index i = m_data.index(k);

 2,394,744        if(wi(i)>=start)

         .        {
         .          // we already meet this entry => accumulate it
         .          m_data.value(wi(i)) += m_data.value(k);
         .        }
         .        else
         .        {
 3,791,678          m_data.value(count) = m_data.value(k);

 3,791,678          m_data.index(count) = m_data.index(k);

 1,796,058          wi(i) = count;

   199,562          ++count;
         .        }
         .      }
   656,752      m_outerIndex[j] = start;
         .    }
        18    m_outerIndex[m_outerSize] = count;
         .  
         .    // turn the matrix into compressed form
        10    std::free(m_innerNonZeros);
       252  => /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c:free (2x)
         4    m_innerNonZeros = 0;
        46    m_data.resize(m_outerIndex[m_outerSize]);


     1,156  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         8  }
         .  
         .  template<typename Scalar, int _Options, typename _Index>
         .  template<typename OtherDerived>
        35  EIGEN_DONT_INLINE SparseMatrix<Scalar,_Options,_Index>& SparseMatrix<Scalar,_Options,_Index>::operator=(const SparseMatrixBase<OtherDerived>& other)
         .  {
         .    EIGEN_STATIC_ASSERT((internal::is_same<Scalar, typename OtherDerived::Scalar>::value),
         .          YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY)
         .    
         6    const bool needToTranspose = (Flags & RowMajorBit) != (OtherDerived::Flags & RowMajorBit);
         .    if (needToTranspose)
         .    {
         .      // two passes algorithm:
         .      //  1 - compute the number of coeffs per dest inner vector
         .      //  2 - do the actual copy/eval
         .      // Since each coeff of the rhs has to be evaluated twice, let's evaluate it if needed
         .      typedef typename internal::nested<OtherDerived,2>::type OtherCopy;
         .      typedef typename internal::remove_all<OtherCopy>::type _OtherCopy;
        32      OtherCopy otherCopy(other.derived());

     1,060  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
       104      SparseMatrix dest(other.rows(),other.cols());


     2,018  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

       111      Eigen::Map<Matrix<Index, Dynamic, 1> > (dest.m_outerIndex,dest.outerSize()).setZero();

     4,361  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)         .  
         .      // pass 1
         .      // FIXME the above copy could be merged with that pass
 1,369,620      for (Index j=0; j<otherCopy.outerSize(); ++j)

11,183,980        for (typename _OtherCopy::InnerIterator it(otherCopy, j); it; ++it)
     2,830  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x) 9,958,880          ++dest.m_outerIndex[it.index()];
       953  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .  
         .      // prefix sum
         5      Index count = 0;
        70      Matrix<Index,Dynamic,1> positions(dest.outerSize()); 1,369,616      for (Index j=0; j<dest.outerSize(); ++j)

         .      {
 1,065,218        Index tmp = dest.m_outerIndex[j];
 1,065,218        dest.m_outerIndex[j] = count;
 1,369,570        positions[j] = count;

     1,081  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   304,348        count += tmp;
         .      }
        50      dest.m_outerIndex[dest.outerSize()] = count;

         .      // alloc
        45      dest.m_data.resize(count);

         .      // pass 2
 1,369,616      for (Index j=0; j<otherCopy.outerSize(); ++j)

         .      {
11,183,956        for (typename _OtherCopy::InnerIterator it(otherCopy, j); it; ++it)         .        {
12,674,928          Index pos = positions[it.index()]++;


 9,053,520          dest.m_data.index(pos) = j;

13,580,288          dest.m_data.value(pos) = it.value();


       953  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .        }
         .      }
        38      this->swap(dest);
       833  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        39      return *this;
       785  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         .    }
         .    else
         .    {
        10      if(other.isRValue())

     1,545  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .        initAssignment(other.derived());
         .      // there is no special optimization
        18      return Base::operator=(other.derived());
     3,170  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


         .    }
        22  }
         .  
         .  template<typename _Scalar, int _Options, typename _Index>
         .  EIGEN_DONT_INLINE typename SparseMatrix<_Scalar,_Options,_Index>::Scalar& SparseMatrix<_Scalar,_Options,_Index>::insertUncompressed(Index row, Index col)
         .  {
         .    eigen_assert(!isCompressed());
         .  
         .    const Index outer = IsRowMajor ? row : col;
         .    const Index inner = IsRowMajor ? col : row;
-- line 1127 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 106 ----------------------------------------
        .        * The default constructor is useful in cases in which the user intends to
        .        * perform decompositions via compute(). This constructor
        .        * can only be used if \p _MatrixType is a fixed-size matrix; use
        .        * SelfAdjointEigenSolver(Index) for dynamic-size matrices.
        .        *
        .        * Example: \include SelfAdjointEigenSolver_SelfAdjointEigenSolver.cpp
        .        * Output: \verbinclude SelfAdjointEigenSolver_SelfAdjointEigenSolver.out
        .        */
   13,080      SelfAdjointEigenSolver()
        .          : m_eivec(),
        .            m_eivalues(),
        .            m_subdiag(),
   52,324            m_isInitialized(false)

      896  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


    6,540      { }
        .  
        .      /** \brief Constructor, pre-allocates memory for dynamic-size matrices.
        .        *
        .        * \param [in]  size  Positive integer, size of the matrix whose
        .        * eigenvalues and eigenvectors will be computed.
        .        *
        .        * This constructor is useful for dynamic-size matrices, when the user
        .        * intends to perform decompositions via compute(). The \p size
-- line 127 ----------------------------------------
-- line 222 ----------------------------------------
        .        * matrix \f$ A \f$, then the matrix returned by this function is the
        .        * matrix \f$ V \f$ in the eigendecomposition \f$ A = V D V^{-1} \f$.
        .        *
        .        * Example: \include SelfAdjointEigenSolver_eigenvectors.cpp
        .        * Output: \verbinclude SelfAdjointEigenSolver_eigenvectors.out
        .        *
        .        * \sa eigenvalues()
        .        */
   13,080      const EigenvectorsType& eigenvectors() const
        .      {
   13,080        eigen_assert(m_isInitialized && "SelfAdjointEigenSolver is not initialized.");
   13,080        eigen_assert(m_eigenvectorsOk && "The eigenvectors have not been computed together with the eigenvalues.");
    3,270        return m_eivec;
    6,540      }
        .  
        .      /** \brief Returns the eigenvalues of given matrix.
        .        *
        .        * \returns A const reference to the column vector containing the eigenvalues.
        .        *
        .        * \pre The eigenvalues have been computed before.
        .        *
        .        * The eigenvalues are repeated according to their algebraic multiplicity,
-- line 243 ----------------------------------------
-- line 244 ----------------------------------------
        .        * so there are as many eigenvalues as rows in the matrix. The eigenvalues
        .        * are sorted in increasing order.
        .        *
        .        * Example: \include SelfAdjointEigenSolver_eigenvalues.cpp
        .        * Output: \verbinclude SelfAdjointEigenSolver_eigenvalues.out
        .        *
        .        * \sa eigenvectors(), MatrixBase::eigenvalues()
        .        */
   39,240      const RealVectorType& eigenvalues() const
        .      {
   39,240        eigen_assert(m_isInitialized && "SelfAdjointEigenSolver is not initialized.");
   19,620        return m_eivalues;
   19,620      }
        .  
        .      /** \brief Computes the positive-definite square root of the matrix.
        .        *
        .        * \returns the positive-definite square root of the matrix
        .        *
        .        * \pre The eigenvalues and eigenvectors of a positive-definite matrix
        .        * have been computed before.
        .        *
-- line 264 ----------------------------------------
-- line 348 ----------------------------------------
        .  
        .      void compute(const MatrixType& matA, const MatrixType& matB, bool computeEigenvectors = true)
        .      {
        .        compute(matA, matB, computeEigenvectors ? ComputeEigenvectors : EigenvaluesOnly);
        .      }
        .      #endif // EIGEN2_SUPPORT
        .  
        .    protected:
    6,540      static void check_template_parameters()
        .      {
        .        EIGEN_STATIC_ASSERT_NON_INTEGER(Scalar);
    6,540      }
        .      
        .      EigenvectorsType m_eivec;
        .      RealVectorType m_eivalues;
        .      typename TridiagonalizationType::SubDiagonalType m_subdiag;
        .      ComputationInfo m_info;
        .      bool m_isInitialized;
        .      bool m_eigenvectorsOk;
        .  };
-- line 367 ----------------------------------------
-- line 383 ----------------------------------------
        .    * "implicit symmetric QR step with Wilkinson shift"
        .    */
        .  namespace internal {
        .  template<typename RealScalar, typename Scalar, typename Index>
        .  static void tridiagonal_qr_step(RealScalar* diag, RealScalar* subdiag, Index start, Index end, Scalar* matrixQ, Index n);
        .  }
        .  
        .  template<typename MatrixType>
   26,160  SelfAdjointEigenSolver<MatrixType>& SelfAdjointEigenSolver<MatrixType>
        .  ::compute(const MatrixType& matrix, int options)
        .  {
    6,544    check_template_parameters();

    1,344  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .    
        .    using std::abs;
   35,970    eigen_assert(matrix.cols() == matrix.rows());


   26,160    eigen_assert((options&~(EigVecMask|GenEigMask))==0
        .            && (options&EigVecMask)!=EigVecMask
        .            && "invalid option parameter");
   16,350    bool computeEigenvectors = (options&ComputeEigenvectors)==ComputeEigenvectors;
   16,350    Index n = matrix.cols();

   26,164    m_eivalues.resize(n,1);

    1,553  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  
    6,540    if(n==1)
        .    {
        .      m_eivalues.coeffRef(0,0) = numext::real(matrix.coeff(0,0));
        .      if(computeEigenvectors)
        .        m_eivec.setOnes(n,n);
        .      m_info = Success;
        .      m_isInitialized = true;
        .      m_eigenvectorsOk = computeEigenvectors;
        .      return *this;
        .    }
        .  
        .    // declare some aliases
    9,810    RealVectorType& diag = m_eivalues;
    6,540    EigenvectorsType& mat = m_eivec;
        .  
        .    // map the matrix coefficients to [-1:1] to avoid over- and underflow.
   35,978    mat = matrix.template triangularView<Lower>();
    2,920  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


   42,518    RealScalar scale = mat.cwiseAbs().maxCoeff();
    2,632  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


   22,890    if(scale==RealScalar(0)) scale = RealScalar(1);
   35,978    mat.template triangularView<Lower>() /= scale;
    2,664  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


   26,164    m_subdiag.resize(n-1);

    1,128  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   32,704    internal::tridiagonalization_inplace(mat, diag, m_subdiag, computeEigenvectors);

    1,776  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .    
    9,810    Index end = n-1;
    3,270    Index start = 0;
    3,270    Index iter = 0; // total number of iterations
        .  
   29,600    while (end>0)
        .    {
  171,266      for (Index i = start; i<end; ++i)
1,176,527        if (internal::isMuchSmallerThan(abs(m_subdiag[i]),(abs(diag[i])+abs(diag[i+1]))))
    2,306  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
   65,400          m_subdiag[i] = 0;

        .  
        .      // find the largest unreduced block
  364,755      while (end>0 && m_subdiag[end-1]==0)

        .      {
    6,540        end--;
        .      }
   26,330      if (end<=0)
    3,270        break;
        .  
        .      // if we spent too many iterations, we give up
    9,895      iter++;
   79,160      if(iter > m_maxIterations * n) break;
        .  
   29,685      start = end - 1;
  199,314      while (start>0 && m_subdiag[start-1]!=0)

    6,634        start--;
        .  
  257,282      internal::tridiagonal_qr_step(diag.data(), m_subdiag.data(), start, end, computeEigenvectors ? m_eivec.data() : (Scalar*)0, n);    3,344  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)

        .    }
        .  
   26,160    if (iter <= m_maxIterations * n)
    9,810      m_info = Success;
        .    else
        .      m_info = NoConvergence;
        .  
        .    // Sort eigenvalues and corresponding vectors.
        .    // TODO make the sort optional ?
        .    // TODO use a better sort algorithm !!
   13,080    if (m_info == Success)
        .    {
   52,320      for (Index i = 0; i < n-1; ++i)
        .      {
        .        Index k;
  111,188        m_eivalues.segment(i,n-i).minCoeff(&k);
    2,424  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


   19,620        if (k > 0)
        .        {
   35,200          std::swap(m_eivalues[i], m_eivalues[k+i]);

      774  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    3,352          if(computeEigenvectors)
   38,556            m_eivec.col(i).swap(m_eivec.col(k+i));

    2,424  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

        .        }
        .      }
        .    }
        .    
        .    // scale back the eigen values
   22,894    m_eivalues *= scale;

    1,040  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  
    6,540    m_isInitialized = true;
    9,810    m_eigenvectorsOk = computeEigenvectors;
    3,270    return *this;
   16,350  }
        .  
        .  
        .  namespace internal {
        .    
        .  template<typename SolverType,int Size,bool IsComplex> struct direct_selfadjoint_eigenvalues
        .  {
        .    static inline void run(SolverType& eig, const typename SolverType::MatrixType& A, int options)
        .    { eig.compute(A,options); }
-- line 494 ----------------------------------------
-- line 732 ----------------------------------------
        .  ::computeDirect(const MatrixType& matrix, int options)
        .  {
        .    internal::direct_selfadjoint_eigenvalues<SelfAdjointEigenSolver,Size,NumTraits<Scalar>::IsComplex>::run(*this,matrix,options);
        .    return *this;
        .  }
        .  
        .  namespace internal {
        .  template<typename RealScalar, typename Scalar, typename Index>
   98,950  static void tridiagonal_qr_step(RealScalar* diag, RealScalar* subdiag, Index start, Index end, Scalar* matrixQ, Index n)
        .  {
        .    using std::abs;
  148,425    RealScalar td = (diag[end-1] - diag[end])*RealScalar(0.5);
   69,265    RealScalar e = subdiag[end-1];
        .    // Note that thanks to scaling, e^2 or td^2 cannot overflow, however they can still
        .    // underflow thus leading to inf/NaN values when using the following commented code:
        .  //   RealScalar e2 = numext::abs2(subdiag[end-1]);
        .  //   RealScalar mu = diag[end] - e2 / (td + (td>0 ? 1 : -1) * sqrt(td*td + e2));
        .    // This explain the following, somewhat more complicated, version:
   59,370    RealScalar mu = diag[end];
   69,265    if(td==0)
      100      mu -= abs(e);

        .    else
        .    {
  108,735      RealScalar e2 = numext::abs2(subdiag[end-1]);

   88,969      RealScalar h = numext::hypot(td,e);
    2,323  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   59,310      if(e2==0)  mu -= (e / (td + (td>0 ? 1 : -1))) * (e / h);
  155,748      else       mu -= e2 / (td + (td>0 ? h : -h));
        .    }
        .    
   69,265    RealScalar x = diag[start] - mu;
   59,370    RealScalar z = subdiag[start];
  125,486    for (Index k = start; k < end; ++k)
        .    {
   66,120      JacobiRotation<RealScalar> rot;

      953  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  115,707      rot.makeGivens(x, z);

      944  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  
        .      // do T = G' T G
  413,233      RealScalar sdk = rot.s() * diag[k] + rot.c() * subdiag[k];


    1,922  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
  429,754      RealScalar dkp1 = rot.s() * subdiag[k] + rot.c() * diag[k+1];


        .  
1,256,204      diag[k] = rot.c() * (rot.c() * diag[k] - rot.s() * subdiag[k]) - rot.s() * (rot.c() * subdiag[k] - rot.s() * diag[k+1]);


  330,580      diag[k+1] = rot.s() * sdk + rot.c() * dkp1;


  347,109      subdiag[k] = rot.c() * sdk - rot.s() * dkp1;


        .      
        .  
   49,587      if (k > start)
  192,386        subdiag[k - 1] = rot.c() * subdiag[k-1] - rot.s() * z;


        .  
   99,174      x = subdiag[k];
        .  
   66,116      if (k < end - 1)
        .      {
   99,510        z = -rot.s() * subdiag[k+1];

  119,412        subdiag[k + 1] = rot.c() * subdiag[k+1];

        .      }
        .      
        .      // apply the givens rotation to the unit matrix Q = Q * G
   33,058      if (matrixQ)
        .      {
  214,885        Map<Matrix<Scalar,Dynamic,Dynamic,ColMajor> > q(matrixQ,n,n);

    2,254  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

  165,294        q.applyOnTheRight(k,k+1,rot);
    1,720  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .      }
        .    }
   39,580  }
        .  
        .  } // end namespace internal
        .  
        .  } // end namespace Eigen
        .  
        .  #endif // EIGEN_SELFADJOINTEIGENSOLVER_H

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 187 ----------------------------------------
        .        typedef typename PointCloud::Ptr PointCloudPtr;
        .        typedef typename PointCloud::ConstPtr PointCloudConstPtr;
        .        typedef boost::shared_ptr< VoxelGrid<PointT> > Ptr;
        .        typedef boost::shared_ptr< const VoxelGrid<PointT> > ConstPtr;
        .   
        .  
        .      public:
        .        /** \brief Empty constructor. */
        5        VoxelGrid () : 
        .          leaf_size_ (Eigen::Vector4f::Zero ()),
        .          inverse_leaf_size_ (Eigen::Array4f::Zero ()),
        .          downsample_all_data_ (true), 
        .          save_leaf_layout_ (false),
        .          leaf_layout_ (),
        .          min_b_ (Eigen::Vector4i::Zero ()),
        .          max_b_ (Eigen::Vector4i::Zero ()),
        .          div_b_ (Eigen::Vector4i::Zero ()),
        .          divb_mul_ (Eigen::Vector4i::Zero ()),
        .          filter_field_name_ (""), 
        .          filter_limit_min_ (-FLT_MAX), 
        .          filter_limit_max_ (FLT_MAX),
        .          filter_limit_negative_ (false),
      142          min_points_per_voxel_ (0)

       54  => ???:std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (1x)


        1  => ???:std::allocator<char>::~allocator() (1x)

        1  => ???:std::allocator<char>::allocator() (1x)

   13,123  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (8x)        .        {
       10          filter_name_ = "VoxelGrid";
    2,272  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    1,547  => ???:std::string::operator=(char const*) (1x)
        5        }
        .  
        .        /** \brief Destructor. */
        9        virtual ~VoxelGrid ()
        .        {
       18        }


    1,862  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        .  
        .        /** \brief Set the voxel grid leaf size.
        .          * \param[in] leaf_size the voxel grid leaf size
        .          */
        .        inline void 
        .        setLeafSize (const Eigen::Vector4f &leaf_size) 
        .        { 
        .          leaf_size_ = leaf_size; 
-- line 225 ----------------------------------------
-- line 231 ----------------------------------------
        .        }
        .  
        .        /** \brief Set the voxel grid leaf size.
        .          * \param[in] lx the leaf size for X
        .          * \param[in] ly the leaf size for Y
        .          * \param[in] lz the leaf size for Z
        .          */
        .        inline void
        7        setLeafSize (float lx, float ly, float lz)
        .        {
       31          leaf_size_[0] = lx; leaf_size_[1] = ly; leaf_size_[2] = lz;

    1,178  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .          // Avoid division errors
       16          if (leaf_size_[3] == 0)

        9            leaf_size_[3] = 1;

        .          // Use multiplications instead of divisions
       40          inverse_leaf_size_ = Eigen::Array4f::Ones () / leaf_size_.array ();
    7,258  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)
        2        }
        .  
        .        /** \brief Get the voxel grid leaf size. */
        .        inline Eigen::Vector3f 
        .        getLeafSize () { return (leaf_size_.head<3> ()); }
        .  
        .        /** \brief Set to true if all fields need to be downsampled, or false if just XYZ.
        .          * \param[in] downsample the new value (true/false)
        .          */
        .        inline void 
       10        setDownsampleAllData (bool downsample) { downsample_all_data_ = downsample; }
        .  
        .        /** \brief Get the state of the internal downsampling parameter (true if
        .          * all fields need to be downsampled, false if just XYZ). 
        .          */
        .        inline bool 
        .        getDownsampleAllData () { return (downsample_all_data_); }
        .  
        .        /** \brief Set the minimum number of points required for a voxel to be used.
-- line 265 ----------------------------------------
-- line 272 ----------------------------------------
        .         */
        .        inline unsigned int
        .        getMinimumPointsNumberPerVoxel () { return min_points_per_voxel_; }
        .  
        .        /** \brief Set to true if leaf layout information needs to be saved for later access.
        .          * \param[in] save_leaf_layout the new value (true/false)
        .          */
        .        inline void 
       10        setSaveLeafLayout (bool save_leaf_layout) { save_leaf_layout_ = save_leaf_layout; }
        .  
        .        /** \brief Returns true if leaf layout information will to be saved for later access. */
        .        inline bool 
        .        getSaveLeafLayout () { return (save_leaf_layout_); }
        .  
        .        /** \brief Get the minimum coordinates of the bounding box (after
        .          * filtering is performed). 
        .          */
        .        inline Eigen::Vector3i 
       30        getMinBoxCoordinates () { return (min_b_.head<3> ()); }
    3,006  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


        .  
        .        /** \brief Get the minimum coordinates of the bounding box (after
        .          * filtering is performed). 
        .          */
        .        inline Eigen::Vector3i 
        .        getMaxBoxCoordinates () { return (max_b_.head<3> ()); }
        .  
        .        /** \brief Get the number of divisions along all 3 axes (after filtering
        .          * is performed). 
        .          */
        .        inline Eigen::Vector3i 
       30        getNrDivisions () { return (div_b_.head<3> ()); }


    4,618  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        .  
        .        /** \brief Get the multipliers to be applied to the grid coordinates in
        .          * order to find the centroid index (after filtering is performed). 
        .          */
        .        inline Eigen::Vector3i 
        .        getDivisionMultiplier () { return (divb_mul_.head<3> ()); }
        .  
        .        /** \brief Returns the index in the resulting downsampled cloud of the specified point.
-- line 310 ----------------------------------------
-- line 368 ----------------------------------------
        .                                   static_cast<int> (floor (y * inverse_leaf_size_[1])), 
        .                                   static_cast<int> (floor (z * inverse_leaf_size_[2])))); 
        .        }
        .  
        .        /** \brief Returns the index in the downsampled cloud corresponding to a given set of coordinates.
        .          * \param[in] ijk the coordinates (i,j,k) in the grid (-1 if empty)
        .          */
        .        inline int 
  511,434        getCentroidIndexAt (const Eigen::Vector3i &ijk)
        .        {
3,068,632          int idx = ((Eigen::Vector4i() << ijk, 0).finished() - min_b_).dot (divb_mul_);
   10,108  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (7x)  823,284          if (idx < 0 || idx >= static_cast<int> (leaf_layout_.size ())) // this checks also if leaf_layout_.size () == 0 i.e. everything was computed as needed

        .          {
        .            //if (verbose)
        .            //  PCL_ERROR ("[pcl::%s::getCentroidIndexAt] Specified coordinate is outside grid bounds, or leaf layout is not saved, make sure to call setSaveLeafLayout(true) and filter(output) first!\n", getClassName ().c_str ());
   42,768            return (-1);
        .          }
  516,780          return (leaf_layout_[idx]);

  365,310        }
        .  
        .        /** \brief Provide the name of the field to be used for filtering data. In conjunction with  \a setFilterLimits,
        .          * points having values outside this interval will be discarded.
        .          * \param[in] field_name the name of the field that contains values used for filtering
        .          */
        .        inline void
        .        setFilterFieldName (const std::string &field_name)
        .        {
-- line 394 ------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 105 ----------------------------------------
        .          { typedef allocator<_Tp1> other; };
        .  
        .  #if __cplusplus >= 201103L
        .        // _GLIBCXX_RESOLVE_LIB_DEFECTS
        .        // 2103. std::allocator propagate_on_container_move_assignment
        .        typedef true_type propagate_on_container_move_assignment;
        .  #endif
        .  
2,619,761        allocator() throw() { }

        .  
1,901,705        allocator(const allocator& __a) throw()
3,042,756        : __allocator_base<_Tp>(__a) { }
      852  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  
        .        template<typename _Tp1>
       45          allocator(const allocator<_Tp1>&) throw() { }

      785  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  
6,275,961        ~allocator() throw() { }

        .  
        .        // Inherit everything else.
        .      };
        .  
        .    template<typename _T1, typename _T2>
        .      inline bool
        .      operator==(const allocator<_T1>&, const allocator<_T2>&)
        .      { return true; }
-- line 129 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
     Ir 

-- line 140 ----------------------------------------
      .    *
      .    * This function implements the continuous Givens rotation generation algorithm
      .    * found in Anderson (2000), Discontinuous Plane Rotations and the Symmetric Eigenvalue Problem.
      .    * LAPACK Working Note 150, University of Tennessee, UT-CS-00-454, December 4, 2000.
      .    *
      .    * \sa MatrixBase::applyOnTheLeft(), MatrixBase::applyOnTheRight()
      .    */
      .  template<typename Scalar>
115,703  void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* z)
      .  {
132,236    makeGivens(p, q, z, typename internal::conditional<NumTraits<Scalar>::IsComplex, internal::true_type, internal::false_type>::type());

  1,144  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 33,058  }
      .  
      .  
      .  // specialization for complexes
      .  template<typename Scalar>
      .  void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* r, internal::true_type)
      .  {
      .    using std::sqrt;
      .    using std::abs;
-- line 159 ----------------------------------------
-- line 207 ----------------------------------------
      .        m_s = -conj(ps) * (q/u);
      .        if(r) *r = ps * u;
      .      }
      .    }
      .  }
      .  
      .  // specialization for reals
      .  template<typename Scalar>
115,703  void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* r, internal::false_type)
      .  {
      .    using std::sqrt;
      .    using std::abs;
132,232    if(q==Scalar(0))
      .    {
      .      m_c = p<Scalar(0) ? Scalar(-1) : Scalar(1);
      .      m_s = Scalar(0);
      .      if(r) *r = abs(p);
      .    }
132,232    else if(p==Scalar(0))
      .    {
      9      m_c = Scalar(0);
     24      m_s = q<Scalar(0) ? Scalar(1) : Scalar(-1);
      6      if(r) *r = abs(q);
      .    }
297,468    else if(abs(p) > abs(q))

      .    {
 82,782      Scalar t = q/p;
151,767      Scalar u = sqrt(Scalar(1) + numext::abs2(t));


 68,985      if(p<Scalar(0))
 31,776        u = -u;
 55,188      m_c = Scalar(1)/u;
110,376      m_s = -t * m_c;
 41,391      if(r) *r = p * u;
      .    }
      .    else
      .    {
 16,374      Scalar t = p/q;
 30,019      Scalar u = sqrt(Scalar(1) + numext::abs2(t));


 13,645      if(q<Scalar(0))
  1,524        u = -u;
 10,916      m_s = -Scalar(1)/u;
 21,832      m_c = -t * m_s;
  5,458      if(r) *r = q * u;
      .    }
      .  
 33,058  }
      .  
      .  /****************************************************************************************
      .  *   Implementation of MatrixBase methods
      .  ****************************************************************************************/
      .  
      .  /** \jacobi_module
      .    * Applies the clock wise 2D rotation \a j to the set of 2D vectors of cordinates \a x and \a y:
      .    * \f$ \left ( \begin{array}{cc} x \\ y \end{array} \right )  =  J \left ( \begin{array}{cc} x \\ y \end{array} \right ) \f$
-- line 260 ----------------------------------------
-- line 284 ----------------------------------------
      .  /** \ingroup Jacobi_Module
      .    * Applies the rotation in the plane \a j to the columns \a p and \a q of \c *this, i.e., it computes B = B * J
      .    * with \f$ B = \left ( \begin{array}{cc} \text{*this.col}(p) & \text{*this.col}(q) \end{array} \right ) \f$.
      .    *
      .    * \sa class JacobiRotation, MatrixBase::applyOnTheLeft(), internal::apply_rotation_in_the_plane()
      .    */
      .  template<typename Derived>
      .  template<typename OtherScalar>
115,703  inline void MatrixBase<Derived>::applyOnTheRight(Index p, Index q, const JacobiRotation<OtherScalar>& j)
      .  {
115,707    ColXpr x(this->col(p));
  1,352  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

115,703    ColXpr y(this->col(q));

231,414    internal::apply_rotation_in_the_plane(x, y, j.transpose());
  3,171  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


 33,058  }
      .  
      .  namespace internal {
      .  template<typename VectorX, typename VectorY, typename OtherScalar>
115,703  void /*EIGEN_DONT_INLINE*/ apply_rotation_in_the_plane(VectorX& _x, VectorY& _y, const JacobiRotation<OtherScalar>& j)
      .  {
      .    typedef typename VectorX::Index Index;
      .    typedef typename VectorX::Scalar Scalar;
      .    enum { PacketSize = packet_traits<Scalar>::size };
      .    typedef typename packet_traits<Scalar>::type Packet;
181,823    eigen_assert(_x.size() == _y.size());
  1,568  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 82,645    Index size = _x.size();

 82,649    Index incrx = _x.innerStride();
  1,696  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 82,645    Index incry = _y.innerStride();

      .  
 99,178    Scalar* EIGEN_RESTRICT x = &_x.coeffRef(0);

  1,608  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 99,174    Scalar* EIGEN_RESTRICT y = &_y.coeffRef(0);

      .    
115,707    OtherScalar c = j.c();

    984  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
115,707    OtherScalar s = j.s();

    968  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
117,215    if (c==OtherScalar(1) && s==OtherScalar(0))
      .      return;
      .  
      .    /*** dynamic-size vectorized paths ***/
      .  
 66,116    if(VectorX::SizeAtCompileTime == Dynamic &&
      .      (VectorX::Flags & VectorY::Flags & PacketAccessBit) &&
      .      ((incrx==1 && incry==1) || PacketSize == 1))
      .    {
      .      // both vectors are sequentially stored in memory => vectorization
      .      enum { Peeling = 2 };
      .  
 99,174      Index alignedStart = internal::first_aligned(y, size);

198,348      Index alignedEnd = alignedStart + ((size-alignedStart)/PacketSize)*PacketSize;
      .  
 82,649      const Packet pc = pset1<Packet>(c);
  1,489  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 82,645      const Packet ps = pset1<Packet>(s);

      .      conj_helper<Packet,Packet,NumTraits<Scalar>::IsComplex,false> pcj;
      .  
175,465      for(Index i=0; i<alignedStart; ++i)
      .      {
139,230        Scalar xi = x[i];
139,230        Scalar yi = y[i];
324,874        x[i] =  c * xi + numext::conj(s) * yi;

  2,240  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
371,280        y[i] = -s * xi + numext::conj(c) * yi;

      .      }
      .  
 82,645      Scalar* EIGEN_RESTRICT px = x + alignedStart;
 82,645      Scalar* EIGEN_RESTRICT py = y + alignedStart;
      .  
148,761      if(internal::first_aligned(x, size)==alignedStart)

      .      {
      .        for(Index i=alignedStart; i<alignedEnd; i+=PacketSize)
      .        {
      .          Packet xi = pload<Packet>(px);
      .          Packet yi = pload<Packet>(py);
      .          pstore(px, padd(pmul(pc,xi),pcj.pmul(ps,yi)));
      .          pstore(py, psub(pcj.pmul(pc,yi),pmul(ps,xi)));
      .          px += PacketSize;
      .          py += PacketSize;
      .        }
      .      }
      .      else
      .      {
198,348        Index peelingEnd = alignedStart + ((size-alignedStart)/(Peeling*PacketSize))*(Peeling*PacketSize);
 99,174        for(Index i=alignedStart; i<peelingEnd; i+=Peeling*PacketSize)
      .        {
      .          Packet xi   = ploadu<Packet>(px);
      .          Packet xi1  = ploadu<Packet>(px+PacketSize);
      .          Packet yi   = pload <Packet>(py);
      .          Packet yi1  = pload <Packet>(py+PacketSize);
      .          pstoreu(px, padd(pmul(pc,xi),pcj.pmul(ps,yi)));
      .          pstoreu(px+PacketSize, padd(pmul(pc,xi1),pcj.pmul(ps,yi1)));
      .          pstore (py, psub(pcj.pmul(pc,yi),pmul(ps,xi)));
      .          pstore (py+PacketSize, psub(pcj.pmul(pc,yi1),pmul(ps,xi1)));
      .          px += Peeling*PacketSize;
      .          py += Peeling*PacketSize;
      .        }
 49,587        if(alignedEnd!=peelingEnd)
      .        {
      .          Packet xi = ploadu<Packet>(x+peelingEnd);
      .          Packet yi = pload <Packet>(y+peelingEnd);
      .          pstoreu(x+peelingEnd, padd(pmul(pc,xi),pcj.pmul(ps,yi)));
      .          pstore (y+peelingEnd, psub(pcj.pmul(pc,yi),pmul(ps,xi)));
      .        }
      .      }
      .  
204,702      for(Index i=alignedEnd; i<size; ++i)
      .      {
158,292        Scalar xi = x[i];
158,292        Scalar yi = y[i];
369,348        x[i] =  c * xi + numext::conj(s) * yi;

422,112        y[i] = -s * xi + numext::conj(c) * yi;

 16,529      }
      .    }
      .  
      .    /*** fixed-size vectorized path ***/
      .    else if(VectorX::SizeAtCompileTime != Dynamic &&
      .            (VectorX::Flags & VectorY::Flags & PacketAccessBit) &&
      .            (VectorX::Flags & VectorY::Flags & AlignedBit))
      .    {
      .      const Packet pc = pset1<Packet>(c);
-- line 398 ----------------------------------------
-- line 419 ----------------------------------------
      .        Scalar xi = *x;
      .        Scalar yi = *y;
      .        *x =  c * xi + numext::conj(s) * yi;
      .        *y = -s * xi + numext::conj(c) * yi;
      .        x += incrx;
      .        y += incry;
      .      }
      .    }
 66,116  }
      .  
      .  } // end namespace internal
      .  
      .  } // end namespace Eigen
      .  
      .  #endif // EIGEN_JACOBI_H

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 25 ----------------------------------------
        .    * \sa \ref MatrixBaseCommaInitRef "MatrixBase::operator<<", CommaInitializer::finished()
        .    */
        .  template<typename XprType>
        .  struct CommaInitializer
        .  {
        .    typedef typename XprType::Scalar Scalar;
        .    typedef typename XprType::Index Index;
        .  
   38,394    inline CommaInitializer(XprType& xpr, const Scalar& s)
   57,591      : m_xpr(xpr), m_row(0), m_col(1), m_currentBlockRows(1)
        .    {
   70,393      m_xpr.coeffRef(0,0) = s;

    1,144  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   12,798    }
        .  
        .    template<typename OtherDerived>
  511,434    inline CommaInitializer(XprType& xpr, const DenseBase<OtherDerived>& other)
1,242,054      : m_xpr(xpr), m_row(0), m_col(other.cols()), m_currentBlockRows(other.rows())


        .    {
1,899,620      m_xpr.block(0, 0, other.rows(), other.cols()) = other;
    2,881  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
  292,248    }
        .  
        .    /* Copy/Move constructor which transfers ownership. This is crucial in 
        .     * absence of return value optimization to avoid assertions during destruction. */
        .    // FIXME in C++11 mode this could be replaced by a proper RValue constructor
        .    inline CommaInitializer(const CommaInitializer& o)
        .    : m_xpr(o.m_xpr), m_row(o.m_row), m_col(o.m_col), m_currentBlockRows(o.m_currentBlockRows) {
        .      // Mark original object as finished. In absence of R-value references we need to const_cast:
        .      const_cast<CommaInitializer&>(o).m_row = m_xpr.rows();
        .      const_cast<CommaInitializer&>(o).m_col = m_xpr.cols();
        .      const_cast<CommaInitializer&>(o).m_currentBlockRows = 0;
        .    }
        .  
        .    /* inserts a scalar value in the target matrix */
  745,524    CommaInitializer& operator,(const Scalar& s)
        .    {
1,366,798      if (m_col==m_xpr.cols())

        .      {
  601,020        m_row+=m_currentBlockRows;
  171,720        m_col = 0;
  171,720        m_currentBlockRows = 1;
  772,744        eigen_assert(m_row<m_xpr.rows()

        .          && "Too many rows passed to comma initializer (operator<<)");
        .      }
1,118,286      eigen_assert(m_col<m_xpr.cols()

        .        && "Too many coefficients passed to comma initializer (operator<<)");
  497,016      eigen_assert(m_currentBlockRows==1);
2,163,510      m_xpr.coeffRef(m_row, m_col++) = s;

  124,254      return *this;
  497,016    }
        .  
        .    /* inserts a matrix expression in the target matrix */
        .    template<typename OtherDerived>
        .    CommaInitializer& operator,(const DenseBase<OtherDerived>& other)
        .    {
        .      if(other.cols()==0 || other.rows()==0)
        .        return *this;
        .      if (m_col==m_xpr.cols())
-- line 81 ----------------------------------------
-- line 94 ----------------------------------------
        .                                OtherDerived::ColsAtCompileTime != Dynamic ? OtherDerived::ColsAtCompileTime : 1>
        .                      (m_row, m_col) = other;
        .      else
        .        m_xpr.block(m_row, m_col, other.rows(), other.cols()) = other;
        .      m_col += other.cols();
        .      return *this;
        .    }
        .  
  397,305    inline ~CommaInitializer()
        .    {
1,748,142      eigen_assert((m_row+m_currentBlockRows) == m_xpr.rows()


        .           && m_col == m_xpr.cols()
        .           && "Too few coefficients passed to comma initializer (operator<<)");
  317,844    }
        .  
        .    /** \returns the built matrix once all its coefficients have been set.
        .      * Calling finished is 100% optional. Its purpose is to write expressions
        .      * like this:
        .      * \code
        .      * quaternion.fromRotationMatrix((Matrix3f() << axis0, axis1, axis2).finished());
        .      * \endcode
        .      */
  511,434    inline XprType& finished() { return m_xpr; }
        .  
        .    XprType& m_xpr;   // target expression
        .    Index m_row;              // current row id
        .    Index m_col;              // current col id
        .    Index m_currentBlockRows; // current block height
        .  };
        .  
        .  /** \anchor MatrixBaseCommaInitRef
-- line 124 ----------------------------------------
-- line 130 ----------------------------------------
        .    * Example: \include MatrixBase_set.cpp
        .    * Output: \verbinclude MatrixBase_set.out
        .    * 
        .    * \note According the c++ standard, the argument expressions of this comma initializer are evaluated in arbitrary order.
        .    *
        .    * \sa CommaInitializer::finished(), class CommaInitializer
        .    */
        .  template<typename Derived>
   38,394  inline CommaInitializer<Derived> DenseBase<Derived>::operator<< (const Scalar& s)
        .  {
   44,797    return CommaInitializer<Derived>(*static_cast<Derived*>(this), s);
    1,179  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   19,197  }
        .  
        .  /** \sa operator<<(const Scalar&) */
        .  template<typename Derived>
        .  template<typename OtherDerived>
        .  inline CommaInitializer<Derived>
  438,372  DenseBase<Derived>::operator<<(const DenseBase<OtherDerived>& other)
        .  {
  511,438    return CommaInitializer<Derived>(*static_cast<Derived *>(this), other);

    1,583  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  219,186  }
        .  
        .  } // end namespace Eigen
        .  
        .  #endif // EIGEN_COMMAINITIALIZER_H

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
         Ir 

-- line 80 ----------------------------------------
          .    inline _GLIBCXX_CONSTEXPR double
          .    abs(double __x)
          .    { return __builtin_fabs(__x); }
          .  #endif
          .  
          .  #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
          .    inline _GLIBCXX_CONSTEXPR float
          .    abs(float __x)
  9,603,192    { return __builtin_fabsf(__x); }
          .  
          .    inline _GLIBCXX_CONSTEXPR long double
          .    abs(long double __x)
          .    { return __builtin_fabsl(__x); }
          .  #endif
          .  
          .    template<typename _Tp>
          .      inline _GLIBCXX_CONSTEXPR
-- line 96 ----------------------------------------
-- line 177 ----------------------------------------
          .        return atan2(__type(__y), __type(__x));
          .      }
          .  
          .    using ::ceil;
          .  
          .  #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
          .    inline _GLIBCXX_CONSTEXPR float
          .    ceil(float __x)
         19    { return __builtin_ceilf(__x); }
      2,514  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          2  => /build/eglibc-oGUzwX/eglibc-2.19/math/../sysdeps/x86_64/fpu/multiarch/s_ceilf.S:__ceilf_sse41 (1x)
          .  
          .    inline _GLIBCXX_CONSTEXPR long double
          .    ceil(long double __x)
          .    { return __builtin_ceill(__x); }
          .  #endif
          .  
          .    template<typename _Tp>
          .      inline _GLIBCXX_CONSTEXPR
-- line 193 ----------------------------------------
-- line 253 ----------------------------------------
          .      exp(_Tp __x)
          .      { return __builtin_exp(__x); }
          .  
          .    using ::fabs;
          .  
          .  #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
          .    inline _GLIBCXX_CONSTEXPR float
          .    fabs(float __x)
153,996,564    { return __builtin_fabsf(__x); }
          .  
          .    inline _GLIBCXX_CONSTEXPR long double
          .    fabs(long double __x)
          .    { return __builtin_fabsl(__x); }
          .  #endif
          .  
          .    template<typename _Tp>
          .      inline _GLIBCXX_CONSTEXPR
-- line 269 ----------------------------------------
-- line 400 ----------------------------------------
          .    { return __builtin_modfl(__x, __iptr); }
          .  #endif
          .  
          .    using ::pow;
          .  
          .  #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
          .    inline _GLIBCXX_CONSTEXPR float
          .    pow(float __x, float __y)
         99    { return __builtin_powf(__x, __y); }
        170  => /build/eglibc-oGUzwX/eglibc-2.19/math/w_powf.c:powf (5x)
      2,581  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .  
          .    inline _GLIBCXX_CONSTEXPR long double
          .    pow(long double __x, long double __y)
          .    { return __builtin_powl(__x, __y); }
          .  
          .  #if __cplusplus < 201103L
          .    // _GLIBCXX_RESOLVE_LIB_DEFECTS
          .    // DR 550. What should the return type of pow(float,int) be?
-- line 416 ----------------------------------------
-- line 475 ----------------------------------------
          .      sinh(_Tp __x)
          .      { return __builtin_sinh(__x); }
          .  
          .    using ::sqrt;
          .  
          .  #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
          .    inline _GLIBCXX_CONSTEXPR float
          .    sqrt(float __x)
  1,894,230    { return __builtin_sqrtf(__x); }
          .  
          .    inline _GLIBCXX_CONSTEXPR long double
          .    sqrt(long double __x)
          .    { return __builtin_sqrtl(__x); }
          .  #endif
          .  
          .    template<typename _Tp>
          .      inline _GLIBCXX_CONSTEXPR
-- line 491 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/davidwatkins/post_processing/mesh_reconstruction/confidence_pcl/assign_confidence.cpp
--------------------------------------------------------------------------------
     Ir 

-- line 5 ----------------------------------------
      .  #include "full_confidence.h"
      .  #include "Confidencor.h"
      .  
      .  using namespace std;
      .  
      .  typedef unsigned char byte;
      .  
      .  
      8  pcl::PointCloud<pcl::InterestPoint>::Ptr assign_confidence(pcl::PointCloud<pcl::InterestPoint>::Ptr seed, pcl::PointCloud<pcl::PointXYZ>::Ptr cloud, Confidencor* f){
225,361      for(int i=0; i<cloud->points.size(); i++){


      .          pcl::InterestPoint pnt;
585,897          pnt.x=cloud->points[i].x; pnt.y=cloud->points[i].y; pnt.z=cloud->points[i].z;


 30,046          pnt.strength=-1;
135,207          seed->push_back(pnt);


      .      }
     27      f->conf_assigner(seed);
2,381,207  => /home/davidwatkins/post_processing/mesh_reconstruction/confidence_pcl/ConstConf.cpp:ConstConf::conf_assigner(boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >) (1x)

  2,844  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

      .  
      7      return seed;

     23  }
    209  => /home/davidwatkins/post_processing/mesh_reconstruction/confidence_pcl/assign_confidence.cpp:__static_initialization_and_destruction_0(int, int) (1x)

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 95 ----------------------------------------
        .  
        .  template<typename XprType, int BlockRows=Dynamic, int BlockCols=Dynamic, bool InnerPanel = false,
        .           bool HasDirectAccess = internal::has_direct_access<XprType>::ret> class BlockImpl_dense;
        .           
        .  } // end namespace internal
        .  
        .  template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel, typename StorageKind> class BlockImpl;
        .  
   85,024  template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel> class Block

    1,240  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .    : public BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, typename internal::traits<XprType>::StorageKind>
        .  {
        .      typedef BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, typename internal::traits<XprType>::StorageKind> Impl;
        .    public:
        .      //typedef typename Impl::Base Base;
        .      typedef Impl Base;
        .      EIGEN_GENERIC_PUBLIC_INTERFACE(Block)
        .      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Block)
        .    
        .      /** Column or Row constructor
        .        */
  515,852      inline Block(XprType& xpr, Index i) : Impl(xpr,i)

    1,251  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .      {
  317,444        eigen_assert( (i>=0) && (

        .            ((BlockRows==1) && (BlockCols==XprType::ColsAtCompileTime) && i<xpr.rows())
        .          ||((BlockRows==XprType::RowsAtCompileTime) && (BlockCols==1) && i<xpr.cols())));
   79,360      }
        .  
        .      /** Fixed-size constructor
        .        */
        .      inline Block(XprType& xpr, Index a_startRow, Index a_startCol)
        .        : Impl(xpr, a_startRow, a_startCol)
        .      {
        .        EIGEN_STATIC_ASSERT(RowsAtCompileTime!=Dynamic && ColsAtCompileTime!=Dynamic,THIS_METHOD_IS_ONLY_FOR_FIXED_SIZE)
        .        eigen_assert(a_startRow >= 0 && BlockRows >= 1 && a_startRow + BlockRows <= xpr.rows()
        .               && a_startCol >= 0 && BlockCols >= 1 && a_startCol + BlockCols <= xpr.cols());
        .      }
        .  
        .      /** Dynamic-size constructor
        .        */
  716,436      inline Block(XprType& xpr,
        .            Index a_startRow, Index a_startCol,
        .            Index blockRows, Index blockCols)
  875,656        : Impl(xpr, a_startRow, a_startCol, blockRows, blockCols)
    1,330  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .      {
   13,088        eigen_assert((RowsAtCompileTime==Dynamic || RowsAtCompileTime==blockRows)
        .            && (ColsAtCompileTime==Dynamic || ColsAtCompileTime==blockCols));
1,751,296        eigen_assert(a_startRow >= 0 && blockRows >= 0 && a_startRow  <= xpr.rows() - blockRows


        .            && a_startCol >= 0 && blockCols >= 0 && a_startCol <= xpr.cols() - blockCols);
  159,208      }
        .  };
        .           
        .  // The generic default implementation for dense block simplu forward to the internal::BlockImpl_dense
        .  // that must be specialized for direct and non-direct access...
        .  template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel>
   85,024  class BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Dense>

    1,344  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .    : public internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel>
        .  {
        .      typedef internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel> Impl;
        .      typedef typename XprType::Index Index;
        .    public:
        .      typedef Impl Base;
        .      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
  595,212      inline BlockImpl(XprType& xpr, Index i) : Impl(xpr,i) {}
    1,347  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .      inline BlockImpl(XprType& xpr, Index a_startRow, Index a_startCol) : Impl(xpr, a_startRow, a_startCol) {}
  716,436      inline BlockImpl(XprType& xpr, Index a_startRow, Index a_startCol, Index blockRows, Index blockCols)
1,034,864        : Impl(xpr, a_startRow, a_startCol, blockRows, blockCols) {}

    1,407  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  };
        .  
        .  namespace internal {
        .  
        .  /** \internal Internal implementation of dense Blocks in the general case. */
        .  template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel, bool HasDirectAccess> class BlockImpl_dense
        .    : public internal::dense_xpr_base<Block<XprType, BlockRows, BlockCols, InnerPanel> >::type
        .  {
-- line 168 ----------------------------------------
-- line 306 ----------------------------------------
        .      const internal::variable_if_dynamic<Index, XprType::RowsAtCompileTime == 1 ? 0 : Dynamic> m_startRow;
        .      const internal::variable_if_dynamic<Index, XprType::ColsAtCompileTime == 1 ? 0 : Dynamic> m_startCol;
        .      const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_blockRows;
        .      const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_blockCols;
        .  };
        .  
        .  /** \internal Internal implementation of dense Blocks in the direct access case.*/
        .  template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel>
  137,344  class BlockImpl_dense<XprType,BlockRows,BlockCols, InnerPanel,true>
    1,291  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .    : public MapBase<Block<XprType, BlockRows, BlockCols, InnerPanel> >
        .  {
        .      typedef Block<XprType, BlockRows, BlockCols, InnerPanel> BlockType;
        .    public:
        .  
        .      typedef MapBase<BlockType> Base;
        .      EIGEN_DENSE_PUBLIC_INTERFACE(BlockType)
        .      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl_dense)
        .  
        .      /** Column or Row constructor
        .        */
  277,760      inline BlockImpl_dense(XprType& xpr, Index i)
  238,088        : Base(internal::const_cast_ptr(&xpr.coeffRef(

        .                (BlockRows==1) && (BlockCols==XprType::ColsAtCompileTime) ? i : 0,
   13,080                (BlockRows==XprType::RowsAtCompileTime) && (BlockCols==1) ? i : 0)),

        .               BlockRows==1 ? 1 : xpr.rows(),
        .               BlockCols==1 ? 1 : xpr.cols()),
  833,416          m_xpr(xpr)    1,264  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .      {
  158,732        init();

    1,304  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  158,720      }
        .  
        .      /** Fixed-size constructor
        .        */
        .      inline BlockImpl_dense(XprType& xpr, Index startRow, Index startCol)
        .        : Base(internal::const_cast_ptr(&xpr.coeffRef(startRow,startCol))), m_xpr(xpr)
        .      {
        .        init();
        .      }
        .  
        .      /** Dynamic-size constructor
        .        */
  716,436      inline BlockImpl_dense(XprType& xpr,
        .            Index startRow, Index startCol,
        .            Index blockRows, Index blockCols)
  557,236        : Base(internal::const_cast_ptr(&xpr.coeffRef(startRow,startCol)), blockRows, blockCols),

1,034,868          m_xpr(xpr)

    1,319  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .      {
  318,428        init();

    1,367  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  159,208      }
        .  
        .      const typename internal::remove_all<typename XprType::Nested>::type& nestedExpression() const 
        .      { 
        .        return m_xpr; 
        .      }
        .        
        .      /** \sa MapBase::innerStride() */
1,326,320      inline Index innerStride() const
        .      {
        .        return internal::traits<BlockType>::HasSameStorageOrderAsXprType
        .               ? m_xpr.innerStride()
1,657,912               : m_xpr.outerStride();

  663,160      }
        .  
        .      /** \sa MapBase::outerStride() */
  706,608      inline Index outerStride() const
        .      {
  471,072        return m_outerStride;
  471,072      }
        .  
        .    #ifndef __SUNPRO_CC
        .    // FIXME sunstudio is not friendly with the above friend...
        .    // META-FIXME there is no 'friend' keyword around here. Is this obsolete?
        .    protected:
        .    #endif
        .  
        .      #ifndef EIGEN_PARSED_BY_DOXYGEN
-- line 381 ----------------------------------------
-- line 383 ----------------------------------------
        .      inline BlockImpl_dense(XprType& xpr, const Scalar* data, Index blockRows, Index blockCols)
        .        : Base(data, blockRows, blockCols), m_xpr(xpr)
        .      {
        .        init();
        .      }
        .      #endif
        .  
        .    protected:
  477,136      void init()
        .      {
  835,000        m_outerStride = internal::traits<BlockType>::HasSameStorageOrderAsXprType
    1,039  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .                      ? m_xpr.outerStride()
        .                      : m_xpr.innerStride();
  238,568      }
        .  
        .      typename XprType::Nested m_xpr;
        .      Index m_outerStride;
        .  };
        .  
        .  } // end namespace internal
        .  
        .  } // end namespace Eigen
-- line 404 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 57 ----------------------------------------
        .  /****************************************************************************
        .  * Implementation of real                                                 *
        .  ****************************************************************************/
        .  
        .  template<typename Scalar, bool IsComplex = NumTraits<Scalar>::IsComplex>
        .  struct real_default_impl
        .  {
        .    typedef typename NumTraits<Scalar>::Real RealScalar;
   46,968    static inline RealScalar run(const Scalar& x)
        .    {
   31,312      return x;
   62,624    }
        .  };
        .  
        .  template<typename Scalar>
        .  struct real_default_impl<Scalar,true>
        .  {
        .    typedef typename NumTraits<Scalar>::Real RealScalar;
        .    static inline RealScalar run(const Scalar& x)
        .    {
-- line 76 ----------------------------------------
-- line 91 ----------------------------------------
        .  /****************************************************************************
        .  * Implementation of imag                                                 *
        .  ****************************************************************************/
        .  
        .  template<typename Scalar, bool IsComplex = NumTraits<Scalar>::IsComplex>
        .  struct imag_default_impl
        .  {
        .    typedef typename NumTraits<Scalar>::Real RealScalar;
        9    static inline RealScalar run(const Scalar&)
        .    {
        3      return RealScalar(0);
       12    }
        .  };
        .  
        .  template<typename Scalar>
        .  struct imag_default_impl<Scalar,true>
        .  {
        .    typedef typename NumTraits<Scalar>::Real RealScalar;
        .    static inline RealScalar run(const Scalar& x)
        .    {
-- line 110 ----------------------------------------
-- line 187 ----------------------------------------
        .  
        .  /****************************************************************************
        .  * Implementation of conj                                                 *
        .  ****************************************************************************/
        .  
        .  template<typename Scalar, bool IsComplex = NumTraits<Scalar>::IsComplex>
        .  struct conj_impl
        .  {
  570,870    static inline Scalar run(const Scalar& x)
        .    {
  380,580      return x;
  761,160    }
        .  };
        .  
        .  template<typename Scalar>
        .  struct conj_impl<Scalar,true>
        .  {
        .    static inline Scalar run(const Scalar& x)
        .    {
        .      using std::conj;
-- line 206 ----------------------------------------
-- line 217 ----------------------------------------
        .  /****************************************************************************
        .  * Implementation of abs2                                                 *
        .  ****************************************************************************/
        .  
        .  template<typename Scalar>
        .  struct abs2_impl
        .  {
        .    typedef typename NumTraits<Scalar>::Real RealScalar;
  124,581    static inline RealScalar run(const Scalar& x)
        .    {
  290,689      return x*x;
  166,108    }
        .  };
        .  
        .  template<typename RealScalar>
        .  struct abs2_impl<std::complex<RealScalar> >
        .  {
        .    static inline RealScalar run(const std::complex<RealScalar>& x)
        .    {
        .      return real(x)*real(x) + imag(x)*imag(x);
-- line 236 ----------------------------------------
-- line 280 ----------------------------------------
        .  /****************************************************************************
        .  * Implementation of hypot                                                *
        .  ****************************************************************************/
        .  
        .  template<typename Scalar>
        .  struct hypot_impl
        .  {
        .    typedef typename NumTraits<Scalar>::Real RealScalar;
   59,720    static inline RealScalar run(const Scalar& x, const Scalar& y)
        .    {
        .      using std::max;
        .      using std::min;
        .      using std::abs;
        .      using std::sqrt;
  107,496      RealScalar _x = abs(x);

  107,496      RealScalar _y = abs(y);

   95,552      RealScalar p = (max)(_x, _y);

   71,664      if(p==RealScalar(0)) return RealScalar(0);
   95,556      RealScalar q = (min)(_x, _y);

      634  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   35,832      RealScalar qp = q/p;
  107,500      return p * sqrt(RealScalar(1) + qp*qp);

      538  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   47,776    }
        .  };
        .  
        .  template<typename Scalar>
        .  struct hypot_retval
        .  {
        .    typedef typename NumTraits<Scalar>::Real type;
        .  };
        .  
-- line 309 ----------------------------------------
-- line 549 ----------------------------------------
        .  
        .  /****************************************************************************
        .  * Generic math function                                                    *
        .  ****************************************************************************/
        .  
        .  namespace numext {
        .  
        .  template<typename Scalar>
   62,624  inline EIGEN_MATHFUNC_RETVAL(real, Scalar) real(const Scalar& x)
        .  {
   93,940    return EIGEN_MATHFUNC_IMPL(real, Scalar)::run(x);
      882  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   62,624  }  
        .  
        .  template<typename Scalar>
        .  inline typename internal::add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) >::type real_ref(const Scalar& x)
        .  {
        .    return internal::real_ref_impl<Scalar>::run(x);
        .  }
        .  
        .  template<typename Scalar>
        .  inline EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) real_ref(Scalar& x)
        .  {
        .    return EIGEN_MATHFUNC_IMPL(real_ref, Scalar)::run(x);
        .  }
        .  
        .  template<typename Scalar>
       12  inline EIGEN_MATHFUNC_RETVAL(imag, Scalar) imag(const Scalar& x)
        .  {
       22    return EIGEN_MATHFUNC_IMPL(imag, Scalar)::run(x);

      890  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       12  }
        .  
        .  template<typename Scalar>
        .  inline typename internal::add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) >::type imag_ref(const Scalar& x)
        .  {
        .    return internal::imag_ref_impl<Scalar>::run(x);
        .  }
        .  
        .  template<typename Scalar>
        .  inline EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) imag_ref(Scalar& x)
        .  {
        .    return EIGEN_MATHFUNC_IMPL(imag_ref, Scalar)::run(x);
        .  }
        .  
        .  template<typename Scalar>
  761,160  inline EIGEN_MATHFUNC_RETVAL(conj, Scalar) conj(const Scalar& x)
        .  {
1,141,744    return EIGEN_MATHFUNC_IMPL(conj, Scalar)::run(x);

      818  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  761,160  }
        .  
        .  template<typename Scalar>
  166,108  inline EIGEN_MATHFUNC_RETVAL(abs2, Scalar) abs2(const Scalar& x)
        .  {
  249,166    return EIGEN_MATHFUNC_IMPL(abs2, Scalar)::run(x);
      770  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  166,108  }
        .  
        .  template<typename Scalar>
        .  inline EIGEN_MATHFUNC_RETVAL(norm1, Scalar) norm1(const Scalar& x)
        .  {
        .    return EIGEN_MATHFUNC_IMPL(norm1, Scalar)::run(x);
        .  }
        .  
        .  template<typename Scalar>
   59,720  inline EIGEN_MATHFUNC_RETVAL(hypot, Scalar) hypot(const Scalar& x, const Scalar& y)
        .  {
   95,556    return EIGEN_MATHFUNC_IMPL(hypot, Scalar)::run(x, y);
      810  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   47,776  }
        .  
        .  template<typename Scalar>
        .  inline EIGEN_MATHFUNC_RETVAL(atanh2, Scalar) atanh2(const Scalar& x, const Scalar& y)
        .  {
        .    return EIGEN_MATHFUNC_IMPL(atanh2, Scalar)::run(x, y);
        .  }
        .  
        .  template<typename Scalar>
-- line 622 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
         Ir 

-- line 34 ----------------------------------------
          .  };
          .  
          .  template<> struct check_rows_cols_for_overflow<Dynamic> {
          .    template<typename Index>
          .    static EIGEN_ALWAYS_INLINE void run(Index rows, Index cols)
          .    {
          .      // http://hg.mozilla.org/mozilla-central/file/6c8a909977d3/xpcom/ds/CheckedInt.h#l242
          .      // we assume Index is signed
    130,869      Index max_index = (size_t(1) << (8 * sizeof(Index) - 1)) - 1; // assume Index is signed
          .      bool error = (rows == 0 || cols == 0) ? false
    159,951                 : (rows > max_index / cols);
     29,082      if (error)
     22,564        throw_std_bad_alloc();
          .    }
          .  };
          .  
          .  template <typename Derived,
          .            typename OtherDerived = Derived,
          .            bool IsVector = bool(Derived::IsVectorAtCompileTime) && bool(OtherDerived::IsVectorAtCompileTime)>
          .  struct conservative_resize_like_impl;
          .  
-- line 54 ----------------------------------------
-- line 80 ----------------------------------------
          .      : public ArrayBase<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> > {};
          .  
          .  } // namespace internal
          .  
          .  template<typename Derived>
          .  class PlainObjectBase : public internal::dense_xpr_base_dispatcher_for_doxygen<Derived>
          .  #else
          .  template<typename Derived>
    141,530  class PlainObjectBase : public internal::dense_xpr_base<Derived>::type

        850  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .  #endif
          .  {
          .    public:
          .      enum { Options = internal::traits<Derived>::Options };
          .      typedef typename internal::dense_xpr_base<Derived>::type Base;
          .  
          .      typedef typename internal::traits<Derived>::StorageKind StorageKind;
          .      typedef typename internal::traits<Derived>::Index Index;
-- line 96 ----------------------------------------
-- line 127 ----------------------------------------
          .  
          .    public:
          .      enum { NeedsToAlign = SizeAtCompileTime != Dynamic && (internal::traits<Derived>::Flags & AlignedBit) != 0 };
          .      EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF(NeedsToAlign)
          .  
          .      Base& base() { return *static_cast<Base*>(this); }
          .      const Base& base() const { return *static_cast<const Base*>(this); }
          .  
497,377,284      EIGEN_STRONG_INLINE Index rows() const { return m_storage.rows(); }

490,759,488      EIGEN_STRONG_INLINE Index cols() const { return m_storage.cols(); }
        850  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .  
    258,167      EIGEN_STRONG_INLINE const Scalar& coeff(Index rowId, Index colId) const
          .      {
          .        if(Flags & RowMajorBit)
          .          return m_storage.data()[colId + rowId * m_storage.cols()];
          .        else // column-major
    524,393          return m_storage.data()[rowId + colId * m_storage.rows()];


    147,524      }
          .  
  4,168,490      EIGEN_STRONG_INLINE const Scalar& coeff(Index index) const
          .      {
  5,835,906        return m_storage.data()[index];
        874  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  1,667,396      }
          .  
    361,403      EIGEN_STRONG_INLINE Scalar& coeffRef(Index rowId, Index colId)
          .      {
          .        if(Flags & RowMajorBit)
     22,410          return m_storage.data()[colId + rowId * m_storage.cols()];


          .        else // column-major
    727,329          return m_storage.data()[rowId + colId * m_storage.rows()];
        874  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


    206,516      }
          .  
491,740,300      EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)
          .      {
688,436,444        return m_storage.data()[index];

        866  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 41,091,106      }
          .  
     14,021      EIGEN_STRONG_INLINE const Scalar& coeffRef(Index rowId, Index colId) const
          .      {
          .        if(Flags & RowMajorBit)
          .          return m_storage.data()[colId + rowId * m_storage.cols()];
          .        else // column-major
     30,045          return m_storage.data()[rowId + colId * m_storage.rows()];


      8,012      }
          .  
          .      EIGEN_STRONG_INLINE const Scalar& coeffRef(Index index) const
          .      {
          .        return m_storage.data()[index];
          .      }
          .  
          .      /** \internal */
          .      template<int LoadMode>
-- line 178 ----------------------------------------
-- line 181 ----------------------------------------
          .        return internal::ploadt<PacketScalar, LoadMode>
          .                 (m_storage.data() + (Flags & RowMajorBit
          .                                     ? colId + rowId * m_storage.cols()
          .                                     : rowId + colId * m_storage.rows()));
          .      }
          .  
          .      /** \internal */
          .      template<int LoadMode>
     12,185      EIGEN_STRONG_INLINE PacketScalar packet(Index index) const
          .      {
     24,378        return internal::ploadt<PacketScalar, LoadMode>(m_storage.data() + index);
      1,988  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


      4,874      }
          .  
          .      /** \internal */
          .      template<int StoreMode>
          .      EIGEN_STRONG_INLINE void writePacket(Index rowId, Index colId, const PacketScalar& val)
          .      {
          .        internal::pstoret<Scalar, PacketScalar, StoreMode>
          .                (m_storage.data() + (Flags & RowMajorBit
          .                                     ? colId + rowId * m_storage.cols()
          .                                     : rowId + colId * m_storage.rows()), val);
          .      }
          .  
          .      /** \internal */
          .      template<int StoreMode>
     12,216      EIGEN_STRONG_INLINE void writePacket(Index index, const PacketScalar& val)
          .      {
     24,436        internal::pstoret<Scalar, PacketScalar, StoreMode>(m_storage.data() + index, val);
      1,189  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


      4,072      }
          .  
          .      /** \returns a const pointer to the data array of this matrix */
      5,024      EIGEN_STRONG_INLINE const Scalar *data() const
      7,536      { return m_storage.data(); }

          .  
          .      /** \returns a pointer to the data array of this matrix */
      8,012      EIGEN_STRONG_INLINE Scalar *data()
     12,018      { return m_storage.data(); }

          .  
          .      /** Resizes \c *this to a \a rows x \a cols matrix.
          .        *
          .        * This method is intended for dynamic-size matrices, although it is legal to call it on any
          .        * matrix as long as fixed dimensions are left unchanged. If you only want to change the number
          .        * of rows and/or of columns, you can use resize(NoChange_t, Index), resize(Index, NoChange_t).
          .        *
          .        * If the current number of coefficients of \c *this exactly matches the
-- line 225 ----------------------------------------
-- line 227 ----------------------------------------
          .        * the current values are left unchanged. In all other cases, including
          .        * shrinking, the data is reallocated and all previous values are lost.
          .        *
          .        * Example: \include Matrix_resize_int_int.cpp
          .        * Output: \verbinclude Matrix_resize_int_int.out
          .        *
          .        * \sa resize(Index) for vectors, resize(NoChange_t, Index), resize(Index, NoChange_t)
          .        */
  1,353,294      EIGEN_STRONG_INLINE void resize(Index nbRows, Index nbCols)
          .      {
  3,566,796        eigen_assert(   EIGEN_IMPLIES(RowsAtCompileTime!=Dynamic,nbRows==RowsAtCompileTime)
          .                     && EIGEN_IMPLIES(ColsAtCompileTime!=Dynamic,nbCols==ColsAtCompileTime)
          .                     && EIGEN_IMPLIES(RowsAtCompileTime==Dynamic && MaxRowsAtCompileTime!=Dynamic,nbRows<=MaxRowsAtCompileTime)
          .                     && EIGEN_IMPLIES(ColsAtCompileTime==Dynamic && MaxColsAtCompileTime!=Dynamic,nbCols<=MaxColsAtCompileTime)
          .                     && nbRows>=0 && nbCols>=0 && "Invalid sizes when resizing a matrix or array.");
          .        internal::check_rows_cols_for_overflow<MaxSizeAtCompileTime>::run(nbRows, nbCols);
          .        #ifdef EIGEN_INITIALIZE_COEFFS
          .          Index size = nbRows*nbCols;
          .          bool size_changed = size != this->size();
          .          m_storage.resize(size, nbRows, nbCols);
          .          if(size_changed) EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
          .        #else
          .          internal::check_rows_cols_for_overflow<MaxSizeAtCompileTime>::run(nbRows, nbCols);
  2,029,949          m_storage.resize(nbRows*nbCols, nbRows, nbCols);

        906  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .        #endif
    451,098      }
          .  
          .      /** Resizes \c *this to a vector of length \a size
          .        *
          .        * \only_for_vectors. This method does not work for
          .        * partially dynamic matrices when the static dimension is anything other
          .        * than 1. For example it will not work with Matrix<double, 2, Dynamic>.
          .        *
          .        * Example: \include Matrix_resize_int.cpp
          .        * Output: \verbinclude Matrix_resize_int.out
          .        *
          .        * \sa resize(Index,Index), resize(NoChange_t, Index), resize(Index, NoChange_t)
          .        */
     11,855      inline void resize(Index size)
          .      {
          .        EIGEN_STATIC_ASSERT_VECTOR_ONLY(PlainObjectBase)
      4,742        eigen_assert(((SizeAtCompileTime == Dynamic && (MaxSizeAtCompileTime==Dynamic || size<=MaxSizeAtCompileTime)) || SizeAtCompileTime == size) && size>=0);
          .        #ifdef EIGEN_INITIALIZE_COEFFS
          .          bool size_changed = size != this->size();
          .        #endif
          .        if(RowsAtCompileTime == 1)
      5,984          m_storage.resize(size, 1, size);
        898  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .        else
     11,376          m_storage.resize(size, size, 1);

        906  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .        #ifdef EIGEN_INITIALIZE_COEFFS
          .          if(size_changed) EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
          .        #endif
      4,742      }
          .  
          .      /** Resizes the matrix, changing only the number of columns. For the parameter of type NoChange_t, just pass the special value \c NoChange
          .        * as in the example below.
          .        *
          .        * Example: \include Matrix_resize_NoChange_int.cpp
          .        * Output: \verbinclude Matrix_resize_NoChange_int.out
          .        *
          .        * \sa resize(Index,Index)
-- line 287 ----------------------------------------
-- line 307 ----------------------------------------
          .      /** Resizes \c *this to have the same dimensions as \a other.
          .        * Takes care of doing all the checking that's needed.
          .        *
          .        * Note that copying a row-vector into a vector (and conversely) is allowed.
          .        * The resizing, if any, is then done in the appropriate way so that row-vectors
          .        * remain row-vectors and vectors remain vectors.
          .        */
          .      template<typename OtherDerived>
  1,297,878      EIGEN_STRONG_INLINE void resizeLike(const EigenBase<OtherDerived>& _other)
          .      {
  1,081,569        const OtherDerived& other = _other.derived();

  2,379,507        internal::check_rows_cols_for_overflow<MaxSizeAtCompileTime>::run(other.rows(), other.cols());


      2,668  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
  2,379,692        const Index othersize = other.rows()*other.cols();


          .        if(RowsAtCompileTime == 1)
          .        {
          .          eigen_assert(other.rows() == 1 || other.cols() == 1);
          .          resize(1, othersize);
          .        }
          .        else if(ColsAtCompileTime == 1)
          .        {
  2,575,488          eigen_assert(other.rows() == 1 || other.cols() == 1);


  1,502,376          resize(othersize, 1);

      1,050  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .        }
     27,024        else resize(other.rows(), other.cols());    865,252      }
          .  
          .      /** Resizes the matrix to \a rows x \a cols while leaving old values untouched.
          .        *
          .        * The method is intended for matrices of dynamic size. If you only want to change the number
          .        * of rows and/or of columns, you can use conservativeResize(NoChange_t, Index) or
          .        * conservativeResize(Index, NoChange_t).
          .        *
          .        * Matrices are resized relative to the top-left element. In case values need to be 
-- line 339 ----------------------------------------
-- line 403 ----------------------------------------
          .        */
          .      EIGEN_STRONG_INLINE Derived& operator=(const PlainObjectBase& other)
          .      {
          .        return _set(other);
          .      }
          .  
          .      /** \sa MatrixBase::lazyAssign() */
          .      template<typename OtherDerived>
  1,079,075      EIGEN_STRONG_INLINE Derived& lazyAssign(const DenseBase<OtherDerived>& other)
          .      {
  1,294,934        _resize_to_match(other);
      1,810  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  2,158,194        return Base::lazyAssign(other.derived());


      1,666  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    431,630      }
          .  
          .      template<typename OtherDerived>
          .      EIGEN_STRONG_INLINE Derived& operator=(const ReturnByValue<OtherDerived>& func)
          .      {
          .        resize(func.rows(), func.cols());
          .        return Base::operator=(func);
          .      }
          .  
  9,052,560      EIGEN_STRONG_INLINE PlainObjectBase() : m_storage()


      1,812  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
          .      {
          .  //       _check_template_params();
          .  //       EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
  1,508,752      }
          .  
          .  #ifndef EIGEN_PARSED_BY_DOXYGEN
          .      // FIXME is it still needed ?
          .      /** \internal */
          .      PlainObjectBase(internal::constructor_without_unaligned_array_assert)
          .        : m_storage(internal::constructor_without_unaligned_array_assert())
          .      {
          .  //       _check_template_params(); EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
-- line 436 ----------------------------------------
-- line 462 ----------------------------------------
          .      template<typename OtherDerived>
          .      EIGEN_STRONG_INLINE PlainObjectBase(const DenseBase<OtherDerived> &other)
          .        : m_storage()
          .      {
          .        _check_template_params();
          .        lazyAssign(other);
          .      }
          .  
  1,289,274      EIGEN_STRONG_INLINE PlainObjectBase(Index a_size, Index nbRows, Index nbCols)
  2,026,030        : m_storage(a_size, nbRows, nbCols)

      1,820  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

          .      {
          .  //       _check_template_params();
          .  //       EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED
    368,364      }
          .  
          .      /** \copydoc MatrixBase::operator=(const EigenBase<OtherDerived>&)
          .        */
          .      template<typename OtherDerived>
      2,490      EIGEN_STRONG_INLINE Derived& operator=(const EigenBase<OtherDerived> &other)
          .      {
      2,996        _resize_to_match(other);
      1,778  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      4,988        Base::operator=(other.derived());

      1,642  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      1,992        return this->derived();

        996      }
          .  
          .      /** \sa MatrixBase::operator=(const EigenBase<OtherDerived>&) */
          .      template<typename OtherDerived>
          .      EIGEN_STRONG_INLINE PlainObjectBase(const EigenBase<OtherDerived> &other)
          .        : m_storage(other.derived().rows() * other.derived().cols(), other.derived().rows(), other.derived().cols())
          .      {
          .        _check_template_params();
          .        internal::check_rows_cols_for_overflow<MaxSizeAtCompileTime>::run(other.derived().rows(), other.derived().cols());
-- line 493 ----------------------------------------
-- line 591 ----------------------------------------
          .      /** \internal Resizes *this in preparation for assigning \a other to it.
          .        * Takes care of doing all the checking that's needed.
          .        *
          .        * Note that copying a row-vector into a vector (and conversely) is allowed.
          .        * The resizing, if any, is then done in the appropriate way so that row-vectors
          .        * remain row-vectors and vectors remain vectors.
          .        */
          .      template<typename OtherDerived>
  1,081,565      EIGEN_STRONG_INLINE void _resize_to_match(const EigenBase<OtherDerived>& other)
          .      {
          .        #ifdef EIGEN_NO_AUTOMATIC_RESIZING
          .        eigen_assert((this->size()==0 || (IsVectorAtCompileTime ? (this->size() == other.size())
          .                   : (rows() == other.rows() && cols() == other.cols())))
          .          && "Size mismatch. Automatic resizing is disabled because EIGEN_NO_AUTOMATIC_RESIZING is defined");
          .        EIGEN_ONLY_USED_FOR_DEBUG(other);
          .        if(this->size()==0)
          .          resizeLike(other);
          .        #else
  1,297,930        resizeLike(other);
      1,754  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .        #endif
    432,626      }
          .  
          .      /**
          .        * \brief Copies the value of the expression \a other into \c *this with automatic resizing.
          .        *
          .        * *this might be resized to match the dimensions of \a other. If *this was a null matrix (not already initialized),
          .        * it will be initialized.
          .        *
          .        * Note that copying a row-vector into a vector (and conversely) is allowed.
-- line 619 ----------------------------------------
-- line 620 ----------------------------------------
          .        * The resizing, if any, is then done in the appropriate way so that row-vectors
          .        * remain row-vectors and vectors remain vectors.
          .        *
          .        * \sa operator=(const MatrixBase<OtherDerived>&), _set_noalias()
          .        *
          .        * \internal
          .        */
          .      template<typename OtherDerived>
    179,225      EIGEN_STRONG_INLINE Derived& _set(const DenseBase<OtherDerived>& other)
          .      {
    394,355        _set_selector(other.derived(), typename internal::conditional<static_cast<bool>(int(OtherDerived::Flags) & EvalBeforeAssigningBit), internal::true_type, internal::false_type>::type());

      1,378  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    143,380        return this->derived();

     71,690      }
          .  
          .      template<typename OtherDerived>
      2,198      EIGEN_STRONG_INLINE void _set_selector(const OtherDerived& other, const internal::true_type&) { _set_noalias(other.eval()); }
          .  
          .      template<typename OtherDerived>
    497,466      EIGEN_STRONG_INLINE void _set_selector(const OtherDerived& other, const internal::false_type&) { _set_noalias(other); }
      1,802  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .  
          .      /** \internal Like _set() but additionally makes the assumption that no aliasing effect can happen (which
          .        * is the case when creating a new matrix) so one can enforce lazy evaluation.
          .        *
          .        * \sa operator=(const MatrixBase<OtherDerived>&), _set()
          .        */
          .      template<typename OtherDerived>
  1,293,006      EIGEN_STRONG_INLINE Derived& _set_noalias(const DenseBase<OtherDerived>& other)
          .      {
          .        // I don't think we need this resize call since the lazyAssign will anyways resize
          .        // and lazyAssign will be called by the assign selector.
          .        //_resize_to_match(other);
          .        // the 'false' below means to enforce lazy evaluation. We don't use lazyAssign() because
          .        // it wouldn't allow to copy a row-vector into a column-vector.
  2,801,553        return internal::assign_selector<Derived,OtherDerived,false>::run(this->derived(), other.derived());      1,274  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    862,004      }
          .  
          .      template<typename T0, typename T1>
      3,941      EIGEN_STRONG_INLINE void _init2(Index nbRows, Index nbCols, typename internal::enable_if<Base::SizeAtCompileTime!=2,T0>::type* = 0)
          .      {
          .        EIGEN_STATIC_ASSERT(bool(NumTraits<T0>::IsInteger) &&
          .                            bool(NumTraits<T1>::IsInteger),
          .                            FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED)
      3,945        resize(nbRows,nbCols);

      1,126      }
          .      template<typename T0, typename T1>
          .      EIGEN_STRONG_INLINE void _init2(const Scalar& val0, const Scalar& val1, typename internal::enable_if<Base::SizeAtCompileTime==2,T0>::type* = 0)
          .      {
          .        EIGEN_STATIC_ASSERT_VECTOR_SPECIFIC_SIZE(PlainObjectBase, 2)
          .        m_storage.data()[0] = val0;
          .        m_storage.data()[1] = val1;
          .      }
          .  
-- line 671 ----------------------------------------
-- line 679 ----------------------------------------
          .      void _swap(DenseBase<OtherDerived> const & other)
          .      {
          .        enum { SwapPointers = internal::is_same<Derived, OtherDerived>::value && Base::SizeAtCompileTime==Dynamic };
          .        internal::matrix_swap_impl<Derived, OtherDerived, bool(SwapPointers)>::run(this->derived(), other.const_cast_derived());
          .      }
          .  
          .    public:
          .  #ifndef EIGEN_PARSED_BY_DOXYGEN
  1,913,172      static EIGEN_STRONG_INLINE void _check_template_params()
          .      {
          .        EIGEN_STATIC_ASSERT((EIGEN_IMPLIES(MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1, (Options&RowMajor)==RowMajor)
          .                          && EIGEN_IMPLIES(MaxColsAtCompileTime==1 && MaxRowsAtCompileTime!=1, (Options&RowMajor)==0)
          .                          && ((RowsAtCompileTime == Dynamic) || (RowsAtCompileTime >= 0))
          .                          && ((ColsAtCompileTime == Dynamic) || (ColsAtCompileTime >= 0))
          .                          && ((MaxRowsAtCompileTime == Dynamic) || (MaxRowsAtCompileTime >= 0))
          .                          && ((MaxColsAtCompileTime == Dynamic) || (MaxColsAtCompileTime >= 0))
          .                          && (MaxRowsAtCompileTime == RowsAtCompileTime || RowsAtCompileTime==Dynamic)
          .                          && (MaxColsAtCompileTime == ColsAtCompileTime || ColsAtCompileTime==Dynamic)
          .                          && (Options & (DontAlign|RowMajor)) == Options),
          .          INVALID_MATRIX_TEMPLATE_PARAMETERS)
  1,913,172      }
          .  #endif
          .  
          .  private:
          .      enum { ThisConstantIsPrivateInPlainObjectBase };
          .  };
          .  
          .  namespace internal {
          .  
-- line 707 ------------------------------------------------------------------------------------------------------------------------
-- Auto-annotated source: /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.cpp
--------------------------------------------------------------------------------
       Ir 

        .  
        .  #include "primeqp.h"
        .  
        .  using namespace std;
        .  
        .  //make H matrix
       13  SparseMatrixPtr getHMat(gridPtr tightBand, gridPtr indexMap){
       16      vector<int> indexes = findIndexes(tightBand);


84,427,425  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:findIndexes(boost::shared_ptr<grid>) (1x)
        .      //set ntight
        9      int ntight = indexes.size();
      893  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  
        .      //get subscript vector for indexes
  137,108      Eigen::Vector3i subs[ntight];
    1,126  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   78,317      for(int i=0; i<ntight; i++){
  626,508          subs[i] = tightBand->ind2sub(indexes[i]);
27,702,870  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::ind2sub(int) (19578x)    3,225  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
        .      }
        .  
        .      //create Hi
       35      vector<int> Hi (ntight*9, 0);

    2,021  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)        1      int index=0;
       13      for(int i=0; i<3; i++){
       39          for(int j=0; j<3; j++){
  704,853              for(int k=0; k<ntight; k++){
2,290,626                  Hi[index] = k+ntight*i;

  176,202                  index++;
        .              }
        .          }
        .      }
        .  
        .      //create Hj
       23      vector<int> Hj (ntight*9, 0);
        1      index=0;
        .      //add mid
   78,317      for(int i=0; i<ntight; i++){
1,409,616          Hj[index] = (*indexMap)[subs[i][0]][subs[i][1]][subs[i][2]];


  881,010  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (19578x)

9,162,504  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (19578x)
  430,716  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (19578x)
   19,578          index++;
        .      }
        .      //add left
   78,317      for(int i=0; i<ntight; i++){
1,429,194          Hj[index] = (*indexMap)[subs[i][0]-1][subs[i][1]][subs[i][2]];
9,162,504  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (19578x)
  430,716  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (19578x)

  881,010  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (19578x)


   19,578          index++;
        .      }
        .      //add right
   78,317      for(int i=0; i<ntight; i++){
1,429,194          Hj[index] = (*indexMap)[subs[i][0]+1][subs[i][1]][subs[i][2]];

  881,010  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (19578x)


  430,716  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (19578x)
9,162,504  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (19578x)
   19,578          index++;
        .      }
        .      //add mid
   78,317      for(int i=0; i<ntight; i++){
1,409,616          Hj[index] = (*indexMap)[subs[i][0]][subs[i][1]][subs[i][2]];


  881,010  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (19578x)

9,162,504  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (19578x)
  430,716  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (19578x)
   19,578          index++;
        .      }
        .      //add top
   78,317      for(int i=0; i<ntight; i++){
1,429,194          Hj[index] = (*indexMap)[subs[i][0]][subs[i][1]-1][subs[i][2]];
  430,716  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (19578x)
9,162,504  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (19578x)
  881,010  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (19578x)   19,578          index++;
        .      }
        .      //add bottom
   78,317      for(int i=0; i<ntight; i++){
1,429,194          Hj[index] = (*indexMap)[subs[i][0]][subs[i][1]+1][subs[i][2]];
9,162,504  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (19578x)
  430,716  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (19578x)  881,010  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (19578x)
   19,578          index++;
        .      }
        .      //add mid
   78,317      for(int i=0; i<ntight; i++){
1,409,616          Hj[index] = (*indexMap)[subs[i][0]][subs[i][1]][subs[i][2]];
9,162,504  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (19578x)
  430,716  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (19578x)

  881,010  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (19578x)


   19,578          index++;
        .      }
        .      //add front
   78,317      for(int i=0; i<ntight; i++){
1,429,194          Hj[index] = (*indexMap)[subs[i][0]][subs[i][1]][subs[i][2]-1];
9,162,504  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (19578x)
  430,716  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (19578x)

  881,010  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (19578x)


   19,578          index++;
        .      }
        .      //add back
   78,317      for(int i=0; i<ntight; i++){
1,429,194          Hj[index] = (*indexMap)[subs[i][0]][subs[i][1]][subs[i][2]+1];


  881,010  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (19578x)

  430,716  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (19578x)
9,162,504  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (19578x)
   19,578          index++;
        .      }
        .  
        .      //create Hs
       27      vector<int> Hs (ntight*9, 1);
      747  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        1      index=0;
       13      for(int i=0; i<3; i++){
  234,951          for(int j=0; j<ntight; j++){
  469,872              Hs[index]=-2;

   58,734              index++;
        .          }
  587,358          for(int j=0; j<ntight*2; j++){
  939,744              Hs[index]=1;

  117,468              index++;
        .          }
        .      }
        .  
        .  
        .      //create initial H
        .      //get max value of Hj
        1      int maxj = 0;
1,938,234      for(int i=0; i<Hj.size(); i++){

2,291,148          if (Hj[i]>maxj) maxj=Hj[i];

        .      }
        .      //create triplets from Hi,Hj,Hs
       16      vector<Eigen::Triplet<float> > tripletList;
    1,746  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


       14      tripletList.reserve(Hi.size());


      913  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
1,938,234      for(int i=0; i<Hi.size(); i++){

6,871,886          tripletList.push_back(Eigen::Triplet<float>(Hi[i],Hj[i],(float)Hs[i]));

    1,746  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


        .      }
        .  
       28      SparseMatrixPtr H (new Eigen::SparseMatrix<float>(3*ntight, maxj+1));
      119  => ???:operator new(unsigned long) (1x)
    1,826  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


       36      H->setFromTriplets(tripletList.begin(), tripletList.end());
    4,335  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)
        .  
       62      *H = Eigen::SparseMatrix<float>(H->transpose())*(*H);


    5,869  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (5x)

        7      return H;

        9  }
        .  
        .  //get lower bound vector
       12  vector<float> getlb(gridPtr margin, gridPtr volume, const vector<int> &indexes){
        .      //make a copy of margin
        .      //set values outside of volume to -1000
       44      gridPtr lbnd (new grid(margin->dims, margin->scale, margin->shift, margin->pad));

    3,149  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

  913,291  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, int) (1x)
    1,387  => ???:operator new(unsigned long) (1x)
      826      for(int i=0; i<lbnd->dims[0]; i++){


   27,594          for(int j=0; j<lbnd->dims[1]; j++){


1,124,442              for(int k=0; k<lbnd->dims[2]; k++){


2,557,170                  if((*volume)[i][j][k]==0.0){
34,193,016  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (73062x)
1,607,364  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (73062x)

3,287,790  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (73062x)
1,977,626                      (*lbnd)[i][j][k]=-1000.0;
1,500,268  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (68194x)
31,914,792  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (68194x)
3,068,730  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (68194x)

        .                  }
        .                  else{
  258,004                      (*lbnd)[i][j][k]=(*margin)[i][j][k];
4,556,448  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (9736x)
  214,192  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (9736x)

  438,120  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (9736x)
        .                  }
        .              }
        .          }
        .      }
        .  
        .      //create lb vector using linear indexes
       33      vector<float> lb (indexes.size(), 0);
    2,030  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
  256,976      for(int i=0; i<lb.size(); i++){
      745  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  607,372          lb[i] = (*lbnd)(indexes[i]);    2,669  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
53,517,760  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator()(int) (23360x)
        .      }
        .  
        6      return lb;

        9  }
        .  //get upper bound vector
       12  vector<float> getub(gridPtr margin, gridPtr volume, const vector<int> &indexes){
        .      //make a copy of negative margin
        .      //set values inside of volume to 1000
       36      gridPtr ubnd (new grid(margin->dims, margin->scale, margin->shift, margin->pad));

  913,666  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, int) (1x)
      113  => ???:operator new(unsigned long) (1x)

      826      for(int i=0; i<ubnd->dims[0]; i++){


   27,594          for(int j=0; j<ubnd->dims[1]; j++){


1,124,442              for(int k=0; k<ubnd->dims[2]; k++){


2,557,170                  if((*volume)[i][j][k]==1.0){
1,607,364  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (73062x)
34,193,016  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (73062x)
3,287,790  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (73062x)

  141,172                      (*ubnd)[i][j][k]=1000.0;
  219,060  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (4868x)

  107,096  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (4868x)
2,278,224  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (4868x)
        .                  }
        .                  else{
3,750,670                      (*ubnd)[i][j][k]=-(*margin)[i][j][k];
63,829,584  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (136388x)
3,000,536  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (136388x)

6,137,460  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (136388x)
        .                  }
        .              }
        .          }
        .      }
        .  
        .      //create ub vector using linear indexes
       21      vector<float> ub (indexes.size(), 0);
  256,972      for(int i=0; i<ub.size(); i++){

  607,360          ub[i] = (*ubnd)(indexes[i]);


53,517,760  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator()(int) (23360x)

        .      }
        .  
        6      return ub;

        9  }
        .  
        .  //prepare quadratic program arguments
       10  qp_argsPtr primeQP(gridPtr volume, gridPtr margin, bandsPtr bnds){
        .      //create indexes of band
       20      vector<int> indexes = findIndexes(bnds->band);
90,051,143  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:findIndexes(boost::shared_ptr<grid>) (1x)        .      //create index map
       25      gridPtr indexMap = getIndexMap(bnds->band, indexes);

110,243,864  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:getIndexMap(boost::shared_ptr<grid>, std::vector<int, std::allocator<int> > const&) (1x)


        .      //create H matrix
       39      SparseMatrixPtr H = getHMat(bnds->tight_band, indexMap);1,356,897,688  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.cpp:getHMat(boost::shared_ptr<grid>, boost::shared_ptr<grid>) (1x)
      850  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .      //H matrix has size nband x nband
        .      //create upper and lower bounds
       35      vector<float> lb_ = getlb(margin, volume, indexes);

      970  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
156,812,308  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.cpp:getlb(boost::shared_ptr<grid>, boost::shared_ptr<grid>, std::vector<int, std::allocator<int> > const&) (1x)


       35      vector<float> ub_ = getub(margin, volume, indexes);

193,098,307  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.cpp:getub(boost::shared_ptr<grid>, boost::shared_ptr<grid>, std::vector<int, std::allocator<int> > const&) (1x)
      970  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


        .      //lb_ and ub_ have length nband
        .  
        .      //create x vector
       31      vector<float> x_ (H->rows(),0);      809  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)  256,972      for(int i=0; i<x_.size(); i++){

        .          //set values within upper and lower bounds
  517,726          if(x_[i]<lb_[i]) x_[i]=lb_[i];

  758,261          if(x_[i]>ub_[i]) x_[i]=ub_[i];

        .      }
        .  
        .      //get invdg
       42      Eigen::SparseVector<float> diag = (H->diagonal()).sparseView();    3,627  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)


       28      vector<float> dg (diag.size(), 0);
    1,017  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

       28      vector<float> invdg_ (diag.size(), 0);

      697  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  233,626      for (Eigen::SparseVector<float>::InnerIterator it(diag); it; ++it)    2,795  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
        .      {
  420,488          dg[it.index()] = (float)it.value();


    1,914  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

  443,840          invdg_[it.index()] = 1.0/(float)it.value();        .      }
        .  
        .      //create 0-diagonal matrix
        8      vector<Eigen::Triplet<float> > diag_trips;


       13      diag_trips.reserve(H->rows());  303,692      for(int i=0; i<dg.size(); i++){

  397,120          if(dg[i]!=0.0){

  467,200              diag_trips.push_back(Eigen::Triplet<float>(i,i,dg[i]));        .          }
        .      }
       34      SparseMatrixPtr d (new Eigen::SparseMatrix<float>(H->rows(), H->cols()));
      362  => ???:operator new(unsigned long) (1x)


       20      d->setFromTriplets(diag_trips.begin(), diag_trips.end());
       33      *H = ((*H)-(*d));

    3,242  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


       18      H->prune(0,0);
      865  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


        .  
        .      //create output struct
       41      qp_argsPtr out (new qp_args());
    1,482  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
      719  => ???:operator new(unsigned long) (1x)

    4,163  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.h:qp_args::qp_args() (1x)
       17      out->R = H;


    1,818  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
       14      out->invdg = invdg_;

      737  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

       10      out->lb = lb_;


       10      out->ub = ub_;


       10      out->x = x_;


        5      out->iter = 500;

        .  
       10      cout<<"quadratic program ready"<<endl;
      341  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
      398  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
        6      return out;

        7  }
        .  
        .  //************************************************************************************
        .  //get feature index vector from feature map and index map
        .  //sorted low to high
   43,952  bool lowtohigh(int i, int j){
   32,964      return (i<j);
   21,976  }
        7  vector<int> getFeatureIndexes(gridPtr featureMap, gridPtr indexMap){
        8      vector<int> out;
      841  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      834      for(int i=0; i<featureMap->dims[0]; i++){


    2,518  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
   27,594          for(int j=0; j<featureMap->dims[1]; j++){


1,124,442              for(int k=0; k<featureMap->dims[2]; k++){


2,557,186                  if((*featureMap)[i][j][k]==1.0){

    4,506  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)
3,287,790  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (73062x)
34,193,016  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (73062x)
1,607,364  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (73062x)
   35,160                      out.push_back((int)(*indexMap)[i][j][k]);
   46,530  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (1034x)
      983  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


   22,748  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (1034x)
  483,912  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (1034x)
        .                  }
        .              }
        .          }
        .      }
       26      sort(out.begin(), out.end(), lowtohigh);    2,893  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
        1      return out;
       23  }
      213  => /home/davidwatkins/post_processing/mesh_reconstruction/optimize/primeqp.cpp:__static_initialization_and_destruction_0(int, int) (1x)

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 134 ----------------------------------------
        .  template<typename Derived1, typename Derived2, int Index, int Stop>
        .  struct assign_DefaultTraversal_CompleteUnrolling
        .  {
        .    enum {
        .      outer = Index / Derived1::InnerSizeAtCompileTime,
        .      inner = Index % Derived1::InnerSizeAtCompileTime
        .    };
        .  
    6,345    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
   10,156      dst.copyCoeffByOuterInner(outer, inner, src);

    1,960  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    7,650      assign_DefaultTraversal_CompleteUnrolling<Derived1, Derived2, Index+1, Stop>::run(dst, src);

    1,936  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    2,538    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Stop>
        .  struct assign_DefaultTraversal_CompleteUnrolling<Derived1, Derived2, Stop, Stop>
        .  {
      936    static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &) {}
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Index, int Stop>
        .  struct assign_DefaultTraversal_InnerUnrolling
        .  {
        .    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src, typename Derived1::Index outer)
        .    {
        .      dst.copyCoeffByOuterInner(outer, Index, src);
-- line 160 ----------------------------------------
-- line 170 ----------------------------------------
        .  
        .  /***********************
        .  *** Linear traversal ***
        .  ***********************/
        .  
        .  template<typename Derived1, typename Derived2, int Index, int Stop>
        .  struct assign_LinearTraversal_CompleteUnrolling
        .  {
  417,240    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
  500,708      dst.copyCoeff(Index, src);
    1,823  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  500,748      assign_LinearTraversal_CompleteUnrolling<Derived1, Derived2, Index+1, Stop>::run(dst, src);
    1,986  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  166,896    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Stop>
        .  struct assign_LinearTraversal_CompleteUnrolling<Derived1, Derived2, Stop, Stop>
        .  {
  166,896    static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &) {}
        .  };
        .  
        .  /**************************
        .  *** Inner vectorization ***
        .  **************************/
        .  
        .  template<typename Derived1, typename Derived2, int Index, int Stop>
        .  struct assign_innervec_CompleteUnrolling
        .  {
        .    enum {
        .      outer = Index / Derived1::InnerSizeAtCompileTime,
        .      inner = Index % Derived1::InnerSizeAtCompileTime,
        .      JointAlignment = assign_traits<Derived1,Derived2>::JointAlignment
        .    };
        .  
       85    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
      143      dst.template copyPacketByOuterInner<Derived2, Aligned, JointAlignment>(outer, inner, src);

      109      assign_innervec_CompleteUnrolling<Derived1, Derived2,

        .        Index+packet_traits<typename Derived1::Scalar>::size, Stop>::run(dst, src);
       34    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Stop>
        .  struct assign_innervec_CompleteUnrolling<Derived1, Derived2, Stop, Stop>
        .  {
      102    static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &) {}
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Index, int Stop>
        .  struct assign_innervec_InnerUnrolling
        .  {
        .    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src, typename Derived1::Index outer)
        .    {
        .      dst.template copyPacketByOuterInner<Derived2, Aligned, Aligned>(outer, Index, src);
-- line 223 ----------------------------------------
-- line 251 ----------------------------------------
        .  {
        .    static inline void run(Derived1 &, const Derived2 &) { }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, DefaultTraversal, NoUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
  365,310    static inline void run(Derived1 &dst, const Derived2 &src)
        .    {
  365,314      const Index innerSize = dst.innerSize();
    1,351  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  365,314      const Index outerSize = dst.outerSize();
    1,359  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  657,558      for(Index outer = 0; outer < outerSize; ++outer)
1,242,054        for(Index inner = 0; inner < innerSize; ++inner)
1,534,306          dst.copyCoeffByOuterInner(outer, inner, src);

    1,951  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  146,124    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, DefaultTraversal, CompleteUnrolling, Version>
        .  {
      705    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
      850      assign_DefaultTraversal_CompleteUnrolling<Derived1, Derived2, 0, Derived1::SizeAtCompileTime>

    1,998  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .        ::run(dst, src);
      282    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, DefaultTraversal, InnerUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
        .    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
-- line 284 ----------------------------------------
-- line 303 ----------------------------------------
        .      for(Index i = 0; i < size; ++i)
        .        dst.copyCoeff(i, src);
        .    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, LinearTraversal, CompleteUnrolling, Version>
        .  {
  139,080    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
  166,916      assign_LinearTraversal_CompleteUnrolling<Derived1, Derived2, 0, Derived1::SizeAtCompileTime>
    2,005  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .        ::run(dst, src);
   55,632    }
        .  };
        .  
        .  /**************************
        .  *** Inner vectorization ***
        .  **************************/
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, InnerVectorizedTraversal, NoUnrolling, Version>
-- line 323 ----------------------------------------
-- line 332 ----------------------------------------
        .        for(Index inner = 0; inner < innerSize; inner+=packetSize)
        .          dst.template copyPacketByOuterInner<Derived2, Aligned, Aligned>(outer, inner, src);
        .    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, InnerVectorizedTraversal, CompleteUnrolling, Version>
        .  {
       10    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
       16      assign_innervec_CompleteUnrolling<Derived1, Derived2, 0, Derived1::SizeAtCompileTime>
    1,511  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .        ::run(dst, src);
        4    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, InnerVectorizedTraversal, InnerUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
        .    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
-- line 352 ----------------------------------------
-- line 360 ----------------------------------------
        .  /***************************
        .  *** Linear vectorization ***
        .  ***************************/
        .  
        .  template <bool IsAligned = false>
        .  struct unaligned_assign_impl
        .  {
        .    template <typename Derived, typename OtherDerived>
       32    static EIGEN_STRONG_INLINE void run(const Derived&, OtherDerived&, typename Derived::Index, typename Derived::Index) {}
        .  };
        .  
        .  template <>
        .  struct unaligned_assign_impl<false>
        .  {
        .    // MSVC must not inline this functions. If it does, it fails to optimize the
        .    // packet access path.
        .  #ifdef _MSC_VER
        .    template <typename Derived, typename OtherDerived>
        .    static EIGEN_DONT_INLINE void run(const Derived& src, OtherDerived& dst, typename Derived::Index start, typename Derived::Index end)
        .  #else
        .    template <typename Derived, typename OtherDerived>
       98    static EIGEN_STRONG_INLINE void run(const Derived& src, OtherDerived& dst, typename Derived::Index start, typename Derived::Index end)
        .  #endif
        .    {
      100      for (typename Derived::Index index = start; index < end; ++index)
       36        dst.copyCoeff(index, src);

    2,105  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       28    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, LinearVectorizedTraversal, NoUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
       45    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
       53      const Index size = dst.size();

    1,313  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .      typedef packet_traits<typename Derived1::Scalar> PacketTraits;
        .      enum {
        .        packetSize = PacketTraits::size,
        .        dstAlignment = PacketTraits::AlignedOnScalar ? Aligned : int(assign_traits<Derived1,Derived2>::DstIsAligned) ,
        .        srcAlignment = assign_traits<Derived1,Derived2>::JointAlignment
        .      };
        .      const Index alignedStart = assign_traits<Derived1,Derived2>::DstIsAligned ? 0
       58                               : internal::first_aligned(&dst.coeffRef(0), size);
    1,353  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


       88      const Index alignedEnd = alignedStart + ((size-alignedStart)/packetSize)*packetSize;
        .  
       76      unaligned_assign_impl<assign_traits<Derived1,Derived2>::DstIsAligned!=0>::run(src,dst,0,alignedStart);
    2,113  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  
  281,034      for(Index index = alignedStart; index < alignedEnd; index += packetSize)
        .      {
  491,730        dst.template copyPacket<Derived2, dstAlignment, srcAlignment>(index, src);
    2,185  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .      }
        .  
       67      unaligned_assign_impl<>::run(src,dst,alignedEnd,size);

       18    }
        .  };
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, LinearVectorizedTraversal, CompleteUnrolling, Version>
        .  {
        .    typedef typename Derived1::Index Index;
       75    static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)
        .    {
        .      enum { size = Derived1::SizeAtCompileTime,
        .             packetSize = packet_traits<typename Derived1::Scalar>::size,
        .             alignedSize = (size/packetSize)*packetSize };
        .  
       93      assign_innervec_CompleteUnrolling<Derived1, Derived2, 0, alignedSize>::run(dst, src);

       93      assign_DefaultTraversal_CompleteUnrolling<Derived1, Derived2, alignedSize, size>::run(dst, src);

       30    }
        .  };
        .  
        .  /**************************
        .  *** Slice vectorization ***
        .  ***************************/
        .  
        .  template<typename Derived1, typename Derived2, int Version>
        .  struct assign_impl<Derived1, Derived2, SliceVectorizedTraversal, NoUnrolling, Version>
-- line 437 ----------------------------------------
-- line 483 ----------------------------------------
        .  } // end namespace internal
        .  
        .  /***************************************************************************
        .  * Part 4 : implementation of DenseBase methods
        .  ***************************************************************************/
        .  
        .  template<typename Derived>
        .  template<typename OtherDerived>
  586,650  EIGEN_STRONG_INLINE Derived& DenseBase<Derived>
        .    ::lazyAssign(const DenseBase<OtherDerived>& other)
        .  {
        .    enum{
        .      SameType = internal::is_same<typename Derived::Scalar,typename OtherDerived::Scalar>::value
        .    };
        .  
        .    EIGEN_STATIC_ASSERT_LVALUE(Derived)
        .    EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE(Derived,OtherDerived)
        .    EIGEN_STATIC_ASSERT(SameType,YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY)
        .  
        .  #ifdef EIGEN_DEBUG_ASSIGN
        .    internal::assign_traits<Derived, OtherDerived>::debug();
        .  #endif
2,151,102    eigen_assert(rows() == other.rows() && cols() == other.cols());
  391,139    internal::assign_impl<Derived, OtherDerived, int(SameType) ? int(internal::assign_traits<Derived, OtherDerived>::Traversal)

  879,961                                                         : int(InvalidTraversal)>::run(derived(),other.derived());


        .  #ifndef EIGEN_NO_DEBUG
  977,780    checkTransposeAliasing(other.derived());


        .  #endif
  391,091    return derived();

  391,100  }
        .  
        .  namespace internal {
        .  
        .  template<typename Derived, typename OtherDerived,
        .           bool EvalBeforeAssigning = (int(internal::traits<OtherDerived>::Flags) & EvalBeforeAssigningBit) != 0,
        .           bool NeedToTranspose = ((int(Derived::RowsAtCompileTime) == 1 && int(OtherDerived::ColsAtCompileTime) == 1)
        .                                |   // FIXME | instead of || to please GCC 4.4.0 stupid warning "suggest parentheses around &&".
        .                                    // revert to || as soon as not needed anymore.
        .                                    (int(Derived::ColsAtCompileTime) == 1 && int(OtherDerived::RowsAtCompileTime) == 1))
        .                                && int(Derived::SizeAtCompileTime) != 1>
        .  struct assign_selector;
        .  
        .  template<typename Derived, typename OtherDerived>
        .  struct assign_selector<Derived,OtherDerived,false,false> {
1,689,303    static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.derived()); }


        .    template<typename ActualDerived, typename ActualOtherDerived>
   45,784    static EIGEN_STRONG_INLINE Derived& evalTo(ActualDerived& dst, const ActualOtherDerived& other) { other.evalTo(dst); return dst; }
    1,571  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  };
        .  template<typename Derived, typename OtherDerived>
        .  struct assign_selector<Derived,OtherDerived,true,false> {
        .    static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.eval()); }
        .  };
        .  template<typename Derived, typename OtherDerived>
        .  struct assign_selector<Derived,OtherDerived,false,true> {
        .    static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.transpose()); }
-- line 537 ----------------------------------------
-- line 561 ----------------------------------------
        .  template<typename Derived>
        .  EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const MatrixBase& other)
        .  {
        .    return internal::assign_selector<Derived,Derived>::run(derived(), other.derived());
        .  }
        .  
        .  template<typename Derived>
        .  template <typename OtherDerived>
  458,022  EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const DenseBase<OtherDerived>& other)
        .  {
  992,409    return internal::assign_selector<Derived,OtherDerived>::run(derived(), other.derived());

    3,129  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


  305,348  }
        .  
        .  template<typename Derived>
        .  template <typename OtherDerived>
   19,620  EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const EigenBase<OtherDerived>& other)
        .  {
   42,514    return internal::assign_selector<Derived,OtherDerived,false>::evalTo(derived(), other.derived());


    1,656  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   13,080  }
        .  
        .  template<typename Derived>
        .  template<typename OtherDerived>
        .  EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)
        .  {
        .    return internal::assign_selector<Derived,OtherDerived,false>::evalTo(derived(), other.derived());
        .  }
        .  
-- line 587 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 31 ----------------------------------------
        .  #endif
        .  
        .  namespace boost { namespace unordered { namespace detail {
        .  
        .      ////////////////////////////////////////////////////////////////////////////
        .      // convert double to std::size_t
        .  
        .      inline std::size_t double_to_size(double f)
       72      {
      144          return f >= static_cast<double>(
       40              (std::numeric_limits<std::size_t>::max)()) ?
      829  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .              (std::numeric_limits<std::size_t>::max)() :
      162              static_cast<std::size_t>(f);
       36      }
        .  
        .      // The space used to store values in a node.
        .  
        .      template <typename ValueType>
   17,040      struct value_base
        .      {
        .          typedef ValueType value_type;
        .  
        .          typename boost::aligned_storage<
        .              sizeof(value_type),
        .              boost::alignment_of<value_type>::value>::type data_;
        .  
        .          void* address() {
        .              return this;
        .          }
        .  
  245,448          value_type& value() {
   81,816              return *(ValueType*) this;
  163,632          }
        .  
   20,448          value_type* value_ptr() {
    6,816              return (ValueType*) this;
   13,632          }
        .  
        .      private:
        .  
        .          value_base& operator=(value_base const&);
        .      };
        .  
        .      template <typename NodeAlloc>
        .      struct copy_nodes
-- line 75 ----------------------------------------
-- line 207 ----------------------------------------
        .              return allocators_.first();
        .          }
        .  
        .          node_allocator const& node_alloc() const
        .          {
        .              return allocators_.second();
        .          }
        .  
   32,812          bucket_allocator& bucket_alloc()
        .          {
   41,019              return allocators_.first();
    1,274  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   16,406          }
        .  
   54,528          node_allocator& node_alloc()
        .          {
   68,164              return allocators_.second();
    1,298  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   27,264          }
        .  
        .          std::size_t max_bucket_count() const
        .          {
        .              // -1 to account for the start bucket.
        .              return policy::prev_bucket_count(
        .                  bucket_allocator_traits::max_size(bucket_alloc()) - 1);
        .          }
        .  
  378,445          bucket_pointer get_bucket(std::size_t bucket_index) const
        .          {
  302,756              BOOST_ASSERT(buckets_);
  378,445              return buckets_ + static_cast<std::ptrdiff_t>(bucket_index);
  151,378          }
        .  
    6,868          link_pointer get_previous_start() const
        .          {
   17,174              return get_bucket(bucket_count_)->first_from_start();

      922  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    3,434          }
        .  
  323,840          link_pointer get_previous_start(std::size_t bucket_index) const
        .          {
  453,376              return get_bucket(bucket_index)->next_;

  129,536          }
        .  
        .          iterator begin() const
        .          {
        .              return size_ ? iterator(get_previous_start()->next_) : iterator();
        .          }
        .  
  323,850          iterator begin(std::size_t bucket_index) const
        .          {
  259,094              if (!size_) return iterator();

  453,380              link_pointer prev = get_previous_start(bucket_index);
    1,354  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  698,794              return prev ? iterator(prev->next_) : iterator();


  129,540          }
        .          
  503,145          std::size_t hash_to_bucket(std::size_t hash) const
        .          {
  704,407              return policy::to_bucket(bucket_count_, hash);

      906  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  201,258          }
        .  
        .          float load_factor() const
        .          {
        .              BOOST_ASSERT(bucket_count_ != 0);
        .              return static_cast<float>(size_)
        .                  / static_cast<float>(bucket_count_);
        .          }
        .  
-- line 271 ----------------------------------------
-- line 293 ----------------------------------------
        .      
        .              // size < mlf_ * count
        .              return boost::unordered::detail::double_to_size(ceil(
        .                      static_cast<double>(mlf_) *
        .                      static_cast<double>(max_bucket_count())
        .                  )) - 1;
        .          }
        .  
       36          void recalculate_max_load()
        .          {
        .              using namespace std;
        .      
        .              // From 6.3.1/13:
        .              // Only resize when size >= mlf_ * count
       99              max_load_ = buckets_ ? boost::unordered::detail::double_to_size(ceil(

        .                      static_cast<double>(mlf_) *
        .                      static_cast<double>(bucket_count_)
      139                  )) : 0;
    2,515  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       18  => /build/eglibc-oGUzwX/eglibc-2.19/math/../sysdeps/x86_64/fpu/multiarch/s_ceil.S:__ceil_sse41 (9x)
        .  
       18          }
        .  
        .          void max_load_factor(float z)
        .          {
        .              BOOST_ASSERT(z > 0);
        .              mlf_ = (std::max)(z, minimum_max_load_factor);
        .              recalculate_max_load();
        .          }
        .  
       45          std::size_t min_buckets_for_size(std::size_t size) const
        .          {
       36              BOOST_ASSERT(mlf_ >= minimum_max_load_factor);
        .      
        .              using namespace std;
        .      
        .              // From 6.3.1/13:
        .              // size < mlf_ * count
        .              // => count > size / mlf_
        .              //
        .              // Or from rehash post-condition:
        .              // count > size / mlf_
        .  
        .              return policy::new_bucket_count(
        .                  boost::unordered::detail::double_to_size(floor(
        .                      static_cast<double>(size) /
      206                      static_cast<double>(mlf_))) + 1);

       18  => /build/eglibc-oGUzwX/eglibc-2.19/math/../sysdeps/x86_64/fpu/multiarch/s_floor.S:__floor_sse41 (9x)

    3,313  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
       18          }
        .  
        .          ////////////////////////////////////////////////////////////////////////
        .          // Constructors
        .  
        9          table(std::size_t num_buckets,
        .                  hasher const& hf,
        .                  key_equal const& eq,
        .                  node_allocator const& a) :
        .              functions(hf, eq),
        .              allocators_(a,a),
        8              bucket_count_(policy::new_bucket_count(num_buckets)),

      962  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .              size_(0),
        .              mlf_(1.0f),
        .              max_load_(0),
       35              buckets_()

    2,444  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

        4          {}
        .  
        .          table(table const& x, node_allocator const& a) :
        .              functions(x),
        .              allocators_(a,a),
        .              bucket_count_(x.min_buckets_for_size(x.size_)),
        .              size_(0),
        .              mlf_(x.mlf_),
        .              max_load_(0),
-- line 362 ----------------------------------------
-- line 413 ----------------------------------------
        .                  node_holder<node_allocator> nodes(x);
        .                  table_impl::fill_buckets(nodes.begin(), *this, move);
        .              }
        .          }
        .  
        .          ////////////////////////////////////////////////////////////////////////
        .          // Create buckets
        .  
       54          void create_buckets(std::size_t new_count)
        .          {
        .              boost::unordered::detail::array_constructor<bucket_allocator>
       98                  constructor(bucket_alloc());


    2,388  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        .      
        .              // Creates an extra bucket to act as the start node.
      125              constructor.construct(bucket(), new_count + 1);


    1,980  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        .  
       36              if (buckets_)
        .              {
        .                  // Copy the nodes to the new buckets, including the dummy
        .                  // node if there is one.
       76                  (constructor.get() +
    1,058  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .                      static_cast<std::ptrdiff_t>(new_count))->next_ =
       48                          (buckets_ + static_cast<std::ptrdiff_t>(
        .                              bucket_count_))->next_;
       44                  destroy_buckets();
    1,322  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .              }
        .              else if (bucket::extra_node)
        .              {
        .                  node_constructor a(node_alloc());
        .                  a.construct();
        .  
        .                  (constructor.get() +
        .                      static_cast<std::ptrdiff_t>(new_count))->next_ =
        .                          a.release();
        .              }
        .  
       27              bucket_count_ = new_count;
       58              buckets_ = constructor.release();
    1,090  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

       89              recalculate_max_load();

    2,396  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

       36          }
        .  
        .          ////////////////////////////////////////////////////////////////////////
        .          // Swap and Move
        .  
        .          void swap_allocators(table& other, false_type)
        .          {
        .              // According to 23.2.1.8, if propagate_on_container_swap is
        .              // false the behaviour is undefined unless the allocators
-- line 460 ----------------------------------------
-- line 499 ----------------------------------------
        .              other.buckets_ = bucket_pointer();
        .              other.size_ = 0;
        .              other.max_load_ = 0;
        .          }
        .  
        .          ////////////////////////////////////////////////////////////////////////
        .          // Delete/destruct
        .  
        5          ~table()
        .          {
        8              delete_buckets();
    1,330  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

       22          }
    2,236  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


        .  
   20,448          void delete_node(link_pointer prev)
        .          {
   30,672              node_pointer n = static_cast<node_pointer>(prev->next_);
   13,632              prev->next_ = n->next_;
        .  
   27,268              boost::unordered::detail::destroy_value_impl(node_alloc(),


    1,194  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   17,040                  n->value_ptr());

   27,268              node_allocator_traits::destroy(node_alloc(),
    1,738  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


   17,040                      boost::addressof(*n));

   34,084              node_allocator_traits::deallocate(node_alloc(), n, 1);


    1,258  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   17,040              --size_;
   13,632          }
        .  
        6          std::size_t delete_nodes(link_pointer prev, link_pointer end)
        .          {
        4              BOOST_ASSERT(prev->next_ != end);
        .  
        1              std::size_t count = 0;
        .  
   13,632              do {
   20,452                  delete_node(prev);
    1,434  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    3,408                  ++count;
        .              } while (prev->next_ != end);
        .  
        1              return count;
        2          }
        .  
        4          void delete_buckets()
        .          {
        4              if(buckets_) {
       19                  if (size_) delete_nodes(get_previous_start(), link_pointer());
    1,458  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


        .  
        .                  if (bucket::extra_node) {
        .                      node_pointer n = static_cast<node_pointer>(
        .                              get_bucket(bucket_count_)->next_);
        .                      node_allocator_traits::destroy(node_alloc(),
        .                              boost::addressof(*n));
        .                      node_allocator_traits::deallocate(node_alloc(), n, 1);
        .                  }
        .  
        4                  destroy_buckets();

        2                  buckets_ = bucket_pointer();
        2                  max_load_ = 0;
        .              }
        .  
        4              BOOST_ASSERT(!size_);
        2          }
        .  
        .          void clear()
        .          {
        .              if (!size_) return;
        .  
        .              delete_nodes(get_previous_start(), link_pointer());
        .              clear_buckets();
        .  
-- line 566 ----------------------------------------
-- line 571 ----------------------------------------
        .          {
        .              bucket_pointer end = get_bucket(bucket_count_);
        .              for(bucket_pointer it = buckets_; it != end; ++it)
        .              {
        .                  it->next_ = node_pointer();
        .              }
        .          }
        .  
       54          void destroy_buckets()
        .          {
       81              bucket_pointer end = get_bucket(bucket_count_ + 1);

   32,803              for(bucket_pointer it = buckets_; it != end; ++it)
        .              {
   65,484                  bucket_allocator_traits::destroy(bucket_alloc(),

    1,650  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

   40,925                      boost::addressof(*it));

        .              }
        .  
       85              bucket_allocator_traits::deallocate(bucket_alloc(),
    1,170  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


       45                  buckets_, bucket_count_ + 1);
       45          }
        .  
        .          ////////////////////////////////////////////////////////////////////////
        .          // Fix buckets after delete
        .          //
        .  
        .          std::size_t fix_bucket(std::size_t bucket_index, link_pointer prev)
        .          {
        .              link_pointer end = prev->next_;
-- line 598 ----------------------------------------
-- line 741 ----------------------------------------
        .              mlf_ = x.mlf_;
        .              max_load_ = x.max_load_;
        .              move_buckets_from(x);
        .              new_func_this.commit();
        .          }
        .  
        .          // Accessors
        .  
  289,770          key_type const& get_key(value_type const& x) const
        .          {
  231,820              return extractor::extract(x);

    1,026  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  115,908          }
        .  
  323,850          std::size_t hash(key_type const& k) const
        .          {
  582,938              return policy::apply_hash(this->hash_function(), k);
    2,236  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


  129,540          }
        .  
        .          // Find Node
        .  
        .          template <typename Key, typename Hash, typename Pred>
        .          iterator generic_find_node(
        .                  Key const& k,
        .                  Hash const& hf,
        .                  Pred const& eq) const
        .          {
        .              return static_cast<table_impl const*>(this)->
        .                  find_node_impl(policy::apply_hash(hf, k), k, eq);
        .          }
        .  
   20,448          iterator find_node(
        .                  std::size_t key_hash,
        .                  key_type const& k) const
        .          {
        .              return static_cast<table_impl const*>(this)->
   37,488                  find_node_impl(key_hash, k, this->key_eq());


    6,816          }
        .  
  368,172          iterator find_node(key_type const& k) const
        .          {
        .              return static_cast<table_impl const*>(this)->
1,104,528                  find_node_impl(hash(k), k, this->key_eq());

    4,230  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)


  245,448          }
        .  
        .          iterator find_matching_node(iterator n) const
        .          {
        .              // TODO: Does this apply to C++11?
        .              //
        .              // For some stupid reason, I decided to support equality comparison
        .              // when different hash functions are used. So I can't use the hash
        .              // value from the node here.
-- line 791 ----------------------------------------
-- line 800 ----------------------------------------
        .          void reserve(std::size_t);
        .      };
        .  
        .      ////////////////////////////////////////////////////////////////////////////
        .      // Reserve & Rehash
        .  
        .      // basic exception safety
        .      template <typename Types>
   17,040      inline void table<Types>::reserve_for_insert(std::size_t size)
        .      {
   13,632          if (!buckets_) {
       10              create_buckets((std::max)(bucket_count_,
    1,322  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

       19                  min_buckets_for_size(size)));


    1,370  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .          }
        .          // According to the standard this should be 'size >= max_load_',
        .          // but I think this is better, defect report filed.
   17,035          else if(size > max_load_) {
        .              std::size_t num_buckets
        .                  = min_buckets_for_size((std::max)(size,
      160                      size_ + (size_ >> 1)));


        .  
       32              if (num_buckets != bucket_count_)
       52                  static_cast<table_impl*>(this)->rehash_impl(num_buckets);

    1,338  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .          }
    6,816      }
        .  
        .      // if hash function throws, basic exception safety
        .      // strong otherwise.
        .  
        .      template <typename Types>
        .      inline void table<Types>::rehash(std::size_t min_buckets)
        .      {
        .          using namespace std;
-- line 832 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
     Ir 

-- line 74 ----------------------------------------
      .      
      .      typedef internal::CompressedStorage<Scalar,Index> Storage;
      .      enum { IsColVector = internal::traits<SparseVector>::IsColVector };
      .      
      .      enum {
      .        Options = _Options
      .      };
      .      
     14      EIGEN_STRONG_INLINE Index rows() const { return IsColVector ? m_size : 1; }
     12      EIGEN_STRONG_INLINE Index cols() const { return IsColVector ? 1 : m_size; }
      .      EIGEN_STRONG_INLINE Index innerSize() const { return m_size; }
      .      EIGEN_STRONG_INLINE Index outerSize() const { return 1; }
      .  
      .      EIGEN_STRONG_INLINE const Scalar* valuePtr() const { return &m_data.value(0); }
      .      EIGEN_STRONG_INLINE Scalar* valuePtr() { return &m_data.value(0); }
      .  
      .      EIGEN_STRONG_INLINE const Index* innerIndexPtr() const { return &m_data.index(0); }
      .      EIGEN_STRONG_INLINE Index* innerIndexPtr() { return &m_data.index(0); }
-- line 91 ----------------------------------------
-- line 157 ----------------------------------------
      .        eigen_assert(IsColVector ? (col==0 && row>=0 && row<m_size) : (row==0 && col>=0 && col<m_size));
      .        
      .        Index inner = IsColVector ? row : col;
      .        Index outer = IsColVector ? col : row;
      .        EIGEN_ONLY_USED_FOR_DEBUG(outer);
      .        eigen_assert(outer==0);
      .        return insert(inner);
      .      }
140,160      Scalar& insert(Index i)
      .      {
140,160        eigen_assert(i>=0 && i<m_size);
      .        
 23,360        Index startId = 0;
163,520        Index p = Index(m_data.size()) - 1;

      .        // TODO smart realloc
233,600        m_data.resize(p+2,1);

      .  
420,469        while ( (p >= startId) && (m_data.index(p) > i) )

      .        {
      .          m_data.index(p+1) = m_data.index(p);
      .          m_data.value(p+1) = m_data.value(p);
      .          --p;
      .        }
256,960        m_data.index(p+1) = i;

280,320        m_data.value(p+1) = 0;

210,240        return m_data.value(p+1);

 93,440      }
      .  
      .      /**
      .        */
      .      inline void reserve(Index reserveSize) { m_data.reserve(reserveSize); }
      .  
      .  
      .      inline void finalize() {}
      .  
-- line 191 ----------------------------------------
-- line 195 ----------------------------------------
      .      }
      .  
      .      void resize(Index rows, Index cols)
      .      {
      .        eigen_assert(rows==1 || cols==1);
      .        resize(IsColVector ? rows : cols);
      .      }
      .  
      5      void resize(Index newSize)
      .      {
      3        m_size = newSize;
      5        m_data.clear();

      2      }
      .  
      .      void resizeNonZeros(Index size) { m_data.resize(size); }
      .  
      .      inline SparseVector() : m_size(0) { check_template_parameters(); resize(0); }
      .  
     34      inline SparseVector(Index size) : m_size(0) { check_template_parameters(); resize(size); }

    833  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)      .  
      .      inline SparseVector(Index rows, Index cols) : m_size(0) { check_template_parameters(); resize(rows,cols); }
      .  
      .      template<typename OtherDerived>
      6      inline SparseVector(const SparseMatrixBase<OtherDerived>& other)
     15        : m_size(0)
    993  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


      .      {
      6        check_template_parameters();
    985  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     18        *this = other.derived();

  2,925  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

      5      }
      .  
      .      inline SparseVector(const SparseVector& other)
      .        : SparseBase(other), m_size(0)
      .      {
      .        check_template_parameters();
      .        *this = other.derived();
      .      }
      .  
      .      /** Swaps the values of \c *this and \a other.
      .        * Overloaded for performance: this version performs a \em shallow swap by swaping pointers and attributes only.
      .        * \sa SparseMatrixBase::swap()
      .        */
      5      inline void swap(SparseVector& other)
      .      {
      8        std::swap(m_size, other.m_size);

      8        m_data.swap(other.m_data);

      2      }
      .  
      .      inline SparseVector& operator=(const SparseVector& other)
      .      {
      .        if (other.isRValue())
      .        {
      .          swap(other.const_cast_derived());
      .        }
      .        else
-- line 248 ----------------------------------------
-- line 249 ----------------------------------------
      .        {
      .          resize(other.size());
      .          m_data = other.m_data;
      .        }
      .        return *this;
      .      }
      .  
      .      template<typename OtherDerived>
      6      inline SparseVector& operator=(const SparseMatrixBase<OtherDerived>& other)
      .      {
     18        SparseVector tmp(other.size());

  2,106  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

     14        internal::sparse_vector_assign_selector<SparseVector,OtherDerived>::run(tmp,other.derived());


  1,804  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     10        this->swap(tmp);

    833  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     11        return *this;
    820  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

      4      }
      .  
      .      #ifndef EIGEN_PARSED_BY_DOXYGEN
      .      template<typename Lhs, typename Rhs>
      .      inline SparseVector& operator=(const SparseSparseProduct<Lhs,Rhs>& product)
      .      {
      .        return Base::operator=(product);
      .      }
      .      #endif
-- line 271 ----------------------------------------
-- line 274 ----------------------------------------
      .      {
      .        for (Index i=0; i<m.nonZeros(); ++i)
      .          s << "(" << m.m_data.value(i) << "," << m.m_data.index(i) << ") ";
      .        s << std::endl;
      .        return s;
      .      }
      .  
      .      /** Destructor */
     22      inline ~SparseVector() {}

      .  
      .      /** Overloaded for performance */
      .      Scalar sum() const;
      .  
      .    public:
      .  
      .      /** \internal \deprecated use setZero() and reserve() */
      .      EIGEN_DEPRECATED void startFill(Index reserve)
-- line 290 ----------------------------------------
-- line 330 ----------------------------------------
      .      EIGEN_DEPRECATED const Storage& _data() const { return m_data; }
      .      
      .  #   ifdef EIGEN_SPARSEVECTOR_PLUGIN
      .  #     include EIGEN_SPARSEVECTOR_PLUGIN
      .  #   endif
      .  
      .  protected:
      .    
      4      static void check_template_parameters()
      .      {
      .        EIGEN_STATIC_ASSERT(NumTraits<Index>::IsSigned,THE_INDEX_TYPE_MUST_BE_A_SIGNED_TYPE);
      .        EIGEN_STATIC_ASSERT((_Options&(ColMajor|RowMajor))==Options,INVALID_MATRIX_TEMPLATE_PARAMETERS);
      4      }
      .      
      .      Storage m_data;
      .      Index m_size;
      .  };
      .  
      .  template<typename Scalar, int _Options, typename _Index>
      .  class SparseVector<Scalar,_Options,_Index>::InnerIterator
      .  {
      .    public:
      6      InnerIterator(const SparseVector& vec, Index outer=0)
     14        : m_data(vec.m_data), m_id(0), m_end(static_cast<Index>(m_data.size()))

      .      {
      4        EIGEN_UNUSED_VARIABLE(outer);

      3        eigen_assert(outer==0);
      2      }
      .  
      .      InnerIterator(const internal::CompressedStorage<Scalar,Index>& data)
      .        : m_data(data), m_id(0), m_end(static_cast<Index>(m_data.size()))
      .      {}
      .  
256,960      inline InnerIterator& operator++() { m_id++; return *this; }
      .  
840,960      inline Scalar value() const { return m_data.value(m_id); }

      .      inline Scalar& valueRef() { return const_cast<Scalar&>(m_data.value(m_id)); }
      .  
747,520      inline Index index() const { return m_data.index(m_id); }

      .      inline Index row() const { return IsColVector ? index() : 0; }
      .      inline Index col() const { return IsColVector ? 0 : index(); }
      .  
256,971      inline operator bool() const { return (m_id < m_end); }
      .  
      .    protected:
      .      const internal::CompressedStorage<Scalar,Index>& m_data;
      .      Index m_id;
      .      const Index m_end;
      .  };
      .  
      .  template<typename Scalar, int _Options, typename _Index>
-- line 380 ----------------------------------------
-- line 408 ----------------------------------------
      .      Index m_id;
      .      const Index m_start;
      .  };
      .  
      .  namespace internal {
      .  
      .  template< typename Dest, typename Src>
      .  struct sparse_vector_assign_selector<Dest,Src,SVA_Inner> {
      6    static void run(Dest& dst, const Src& src) {
      .      eigen_internal_assert(src.innerSize()==src.size());
233,622      for(typename Src::InnerIterator it(src, 0); it; ++it)


  2,490  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

420,488        dst.insert(it.index()) = it.value();


  2,066  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

      4    }
      .  };
      .  
      .  template< typename Dest, typename Src>
      .  struct sparse_vector_assign_selector<Dest,Src,SVA_Outer> {
      .    static void run(Dest& dst, const Src& src) {
      .      eigen_internal_assert(src.outerSize()==src.size());
      .      for(typename Dest::Index i=0; i<src.size(); ++i)
      .      {
-- line 428 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp
--------------------------------------------------------------------------------
         Ir 

-- line 6 ----------------------------------------
          .  #include <stdlib.h>
          .  
          .  #include "grid.h"
          .  
          .  using namespace std;
          .  
          .  typedef boost::shared_ptr< pcl::VoxelGrid<pcl::InterestPoint> > VoxelGridPtr;
          .  
 96,439,255  grid::y_z::z::z(float* z_voxels_in, int dimz_in){
 57,863,553      z_voxels=z_voxels_in;
 57,863,553      dims_z=dimz_in;
 38,575,702  }
          .  
115,727,106  float& grid::y_z::z::operator[](int index){
115,727,106      if(index<0 || index>=dims_z){
          .          cerr<<"z index of grid out of range [0:"<<dims_z<<"): "<<index<<endl;
          .          exit(1);
          .      }
115,727,106      return z_voxels[index];
 77,151,404  }
          .  
115,727,106  grid::y_z::y_z(float** yz_voxels_in, int dimy_in, int dimz_in){
 57,863,553      yz_voxels=yz_voxels_in;
 57,863,553      dims_y = dimy_in;
 57,863,553      dims_z = dimz_in;
 38,575,702  }
          .  
115,727,106  grid::y_z::z grid::y_z::operator[](int index){
115,727,106      if(index<0 || index>=dims_y){
          .          cerr<<"y index of grid out of range [0:"<<dims_y<<"): "<<index<<endl;
          .          exit(1);
          .      }
308,605,620      return z(yz_voxels[index], dims_z);
250,742,063  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::z(float*, int) (19287851x)
      1,105  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 77,151,404  }
          .  
         95  void grid::allocGrid(){
        346      voxels = new float**[dims[0]];
      2,129  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      6,074  => ???:operator new[](unsigned long) (19x)

     12,559      for(int i=0; i<dims[0]; i++){

     23,598          voxels[i] = new float*[dims[1]];

    199,984  => ???:operator new[](unsigned long) (1026x)
    419,634          for(int j=0; j<dims[1]; j++){

    948,024              voxels[i][j] = new float[dims[2]];
  6,604,720  => ???:operator new[](unsigned long) (33858x)

          .          }
          .      }
         76  }
         76  void grid::deallocGrid(){
     12,559      for(int i=0; i<dims[0]; i++){

    419,634          for(int j=0; j<dims[1]; j++){

    981,886              delete [] voxels[i][j];
      2,120  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  4,808,102  => ???:operator delete[](void*) (33858x)
          .          }
     19,494          delete [] voxels[i];
    165,583  => ???:operator delete[](void*) (1026x)
          .      }
        171      delete [] voxels;
      2,740  => ???:operator delete[](void*) (19x)
         38  }
          .  
        253  grid::grid(const Eigen::Vector3i &dims_in, const Eigen::Vector3f &scale_in, const Eigen::Vector3f &shift_in, const int pad_in){


         77      dims=dims_in;

         81      scale = scale_in;

      1,178  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         77      shift = shift_in;

         33      pad=pad_in;
         44      allocGrid();
 10,154,078  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::allocGrid() (11x)
         22  }
          .  
        147  grid::grid(grid& other){


         56      dims=other.dims;

         56      scale=other.scale;

         56      shift=other.shift;

         28      pad=other.pad;
         28      allocGrid();
  6,552,792  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::allocGrid() (7x)
      4,627      for(int i=0; i<dims[0]; i++){

    154,602          for(int j=0; j<dims[1]; j++){

  6,299,370              for(int k=0; k<dims[2]; k++){

 20,457,360                  voxels[i][j][k]=other[i][j][k];
 23,014,530  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (511434x)
 11,251,548  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (511434x)
239,351,112  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (511434x)
          .              }
          .          }
          .      }
         28  }
          .  
          .  //create grid from point cloud
         31  grid::grid(pcl::PointCloud<pcl::InterestPoint>::Ptr grid_cloud, VoxelGridPtr vox){

      2,252  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

         18      Eigen::Vector3i min_box = vox->getMinBoxCoordinates();

      3,148  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

         14      Eigen::Vector3i num_divisions=vox->getNrDivisions();

      1,376  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         11      dims=num_divisions;

      1,178  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          4      Eigen::Vector3f high_vals;

         28      high_vals[0]=-10000.0; high_vals[1]=-10000.0; high_vals[2]=-10000.0;

      1,523  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .      //pad the grid with empty voxels on each side
          2      pad= 6;
         27      shift[0]=10000.0; shift[1]=10000.0; shift[2]=10000.0;

         40      dims[0]+=pad*2; dims[1]+=pad*2; dims[2]+=pad*2;
      1,523  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          8      allocGrid();
      1,089  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    931,025  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::allocGrid() (1x)
        661      for(int i=0; i<dims[0]; i++){

     22,086          for(int j=0; j<dims[1]; j++){

    899,910              for(int k=0; k<dims[2]; k++){

    292,248                  Eigen::Vector3i pnt;

  4,164,534                  pnt[0]=i+min_box[0]-pad; pnt[1]=j+min_box[1]-pad; pnt[2]=k+min_box[2]-pad;

    730,624                  int index = vox->getCentroidIndexAt(pnt);


      2,115  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    146,124                  if(index!=-1){
    201,884                      if(grid_cloud->points[index].x<shift[0]) shift[0]=grid_cloud->points[index].x;      3,520  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
    201,816                      if(grid_cloud->points[index].y<shift[1]) shift[1]=grid_cloud->points[index].y;    202,096                      if(grid_cloud->points[index].z<shift[2]) shift[2]=grid_cloud->points[index].z;    202,114                      if(grid_cloud->points[index].x>high_vals[0]) high_vals[0]=grid_cloud->points[index].x;    202,000                      if(grid_cloud->points[index].y>high_vals[1]) high_vals[1]=grid_cloud->points[index].y;    201,867                      if(grid_cloud->points[index].z>high_vals[2]) high_vals[2]=grid_cloud->points[index].z;    252,120                      voxels[i][j][k] = grid_cloud->points[index].strength;


          .                  }
  1,163,844                  else voxels[i][j][k]=-1.0;
          .  
  2,780,874                  if(i<pad||i>=dims[0]-pad||j<pad||j>=dims[1]-pad||k<pad||k>=dims[2]-pad){

    854,712                      voxels[i][j][k]=-1.0;
          .                  }
          .              }
          .          }
          .      }
         35      scale[0]=(high_vals[0]-shift[0])/((float)num_divisions[0]);


         35      scale[1]=(high_vals[1]-shift[1])/((float)num_divisions[1]);


         35      scale[2]=(high_vals[2]-shift[2])/((float)num_divisions[2]);


          5  }
          .  
         76  grid::~grid(){
         80      deallocGrid();
 11,190,960  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::deallocGrid() (19x)
      1,113  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         38  }
          .  
          .  //copy assignment
          .  grid& grid::operator=(const grid& other){
          .      if(this!=&other){
          .          this->pad=other.pad;
          .          if(this->dims[0]!=other.dims[0]||this->dims[1]!=other.dims[1]||this->dims[2]!=other.dims[2]){
          .              deallocGrid();
          .              this->dims = other.dims;
-- line 133 ----------------------------------------
-- line 145 ----------------------------------------
          .                      voxels[i][j][k]=other.voxels[i][j][k];
          .                  }
          .              }
          .          }
          .      }
          .      return *this;
          .  }
          .  
115,727,106  grid::y_z grid::operator[](int index){
270,029,914      if(index<0 || index>=dims[0]){

          .          cerr<<"x index of grid out of range [0:"<<dims[0]<<"): "<<index<<endl;
          .          exit(1);
          .      }
540,059,832      return y_z(voxels[index], dims[1], dims[2]);
327,893,467  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::y_z(float**, int, int) (19287851x)
      1,105  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 77,151,404  }
          .  
          .  //linear index = z*num_x*num_y + y*num_x + x;
          .  //convert linear index to vector subscript
  3,319,376  Eigen::Vector3i grid::ind2sub(int linear_index){
  1,659,688      Eigen::Vector3i subs;

 11,202,894      subs[2] = linear_index/(dims[0]*dims[1]);

  8,298,440      linear_index = linear_index%(dims[0]*dims[1]);

  7,053,674      subs[1] = linear_index/dims[0];

  7,468,596      subs[0] = linear_index%dims[0];

    414,922      return subs;
  2,489,532  }
          .  //convert vector subscript to linear index
  1,305,430  int grid::sub2ind(const Eigen::Vector3i &subs){
  8,205,564      return subs[2]*dims[0]*dims[1]+subs[1]*dims[0]+subs[0];
      1,675  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


    932,450  }
          .  //get value using linear indexing
    720,420  float& grid::operator()(int index){
  3,602,100      if(index<0 || index>=dims[0]*dims[1]*dims[2]){

          .          cerr<<"linear index out of range [0:"<<dims[0]*dims[1]*dims[2]<<"): "<<index<<endl;
          .          exit(1);
          .      }
    840,494      Eigen::Vector3i subs=ind2sub(index);
169,899,050  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::ind2sub(int) (120070x)
      1,073  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  3,722,170      return voxels[subs[0]][subs[1]][subs[2]];

    480,280  }
          .  
          .  grid grid::operator+(const grid& rhs){
          .      if(rhs.dims[0]!=dims[0] || rhs.dims[1]!=dims[1] || rhs.dims[2]!=dims[2]
          .              || rhs.scale[0]!=scale[0] || rhs.scale[1]!=scale[1] || rhs.scale[2]!=scale[2]
          .              || rhs.shift[0]!=shift[0] || rhs.shift[1]!=shift[1] || rhs.shift[2]!=shift[2]
          .              || rhs.pad!=pad){
          .          cerr<<"can't add grids with different dimensions";
          .      }
-- line 191 ----------------------------------------
-- line 196 ----------------------------------------
          .                  out.voxels[i][j][k] = voxels[i][j][k]+rhs.voxels[i][j][k];
          .              }
          .          }
          .      }
          .      return out;
          .  }
          .  
          .  //get point in cloud corresponding to center of voxel pnt
     23,856  Eigen::Vector3f grid::getCloudPoint(const Eigen::Vector3f &pnt){
     13,632      Eigen::Vector3f p;

    119,284      p[0]=((pnt[0]-(float)pad)*scale[0])+shift[0];

      1,538  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    119,280      p[1]=((pnt[1]-(float)pad)*scale[1])+shift[1];


    119,280      p[2]=((pnt[2]-(float)pad)*scale[2])+shift[2];


      3,408      return p;
     17,040  }
          .  
          .  //run this on the conf_grid to fill in any gaps between observed and completed clouds
          6  void grid::fillGrid(int res_factor){
          3      int max_width = res_factor+1;
        661      for(int i=0; i<dims[0]; i++){

     22,086          for(int j=0; j<dims[1]; j++){

      1,782              int num_gap=0;
      1,782              bool first_hit=false;
      1,782              bool first_gap=false;
      1,782              bool end_hit=false;
    899,910              for(int k=0; k<dims[2]; k++){

    292,248                  if(!end_hit){
          .                      //check if hit first occupied voxel
    292,048                      if(!first_hit){
  1,339,443                          if(voxels[i][j][k]!=-1.0){
      1,524                              first_hit=true;
          .                          }
          .                      }
          .                      //first occupied voxel has been hit
          .                      else{
          .                          //check if first gap has been hit
     68,680                          if(!first_gap){
    115,914                              if(voxels[i][j][k]==-1.0){
        762                                  first_gap=true;
      1,524                                  num_gap++;
          .                              }
          .                          }
          .                          //first gap has been hit
          .                          else{
          .                              //check if voxel is unoccupied
    283,084                              if(voxels[i][j][k]==-1.0){
     24,608                                  num_gap++;
          .                              }
          .                              //next
          .                              else{
          4                                  end_hit=true;
          .                                  //check if within max width
         12                                  if(num_gap<max_width){
          .                                      //fill in previous voxels
         35                                      for(int n=num_gap; n>0; n--){
          .                                          //compute confidence for new voxel from gaussian
         30                                          int dist = num_gap-n+1;
         45                                          float exp = -dist*dist/(4*res_factor);
         49                                          float conf = pow(2.71828f,exp);

        819  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        105                                          voxels[i][j][k-n]=conf;
          .                                      }
          .                                  }
          .                              }
          .                          }
          .                      }
          .                  }
          .              }//end of z column
          .          }
          .      }//end if iteration
          4  }
          .  
          .  //function for pcl visualization of grid
          .  void grid::visualize(){
          .      //convert imbedding function to point cloud for visualization
          .      //create point clouds from bands for visualization
          .      pcl::PointCloud<pcl::PointXYZRGB>::Ptr pcl_grid (new pcl::PointCloud<pcl::PointXYZRGB>());
          .      for(int i=0; i<dims[0]; i++){
          .          for(int j=0; j<dims[1]; j++){
-- line 273 ----------------------------------------
-- line 306 ----------------------------------------
          .      while (!viewer->wasStopped ())
          .      {
          .          viewer->spinOnce (100);
          .          boost::this_thread::sleep (boost::posix_time::microseconds (100000));
          .      }
          .  }
          .  
          .  //get create grid with confidences
         10  gridPtr createGrid(pcl::PointCloud<pcl::InterestPoint>::Ptr grid_cloud, VoxelGridPtr vox, int res_factor){
         64      gridPtr gp(new grid(grid_cloud, vox));


395,908,568  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(boost::shared_ptr<pcl::PointCloud<pcl::InterestPoint> >, boost::shared_ptr<pcl::VoxelGrid<pcl::InterestPoint> >) (1x)

        113  => ???:operator new(unsigned long) (1x)
     10,602  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (7x)


          .  
          .      //fill in any holes between observed and completed clouds
         17      gp->fillGrid(res_factor);

      2,111  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
 13,559,337  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::fillGrid(int) (1x)
          1      return gp;
          7  }
          .  
          .  //create binary volume grid from confidence grid
         10  gridPtr getBinaryVolume(gridPtr grid_cloud){
         40      gridPtr g(new grid(grid_cloud->dims, grid_cloud->scale, grid_cloud->shift, grid_cloud->pad));
      1,714  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    975,485  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, int) (1x)
        209  => ???:operator new(unsigned long) (1x)

        826      for(int i=0; i<g->dims[0]; i++){


     27,594          for(int j=0; j<g->dims[1]; j++){


  1,124,442              for(int k=0; k<g->dims[2]; k++){


  2,406,110                  if((*grid_cloud)[i][j][k]>=0) (*g)[i][j][k]=1.0;
  3,507,959  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (77930x)

      4,139  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)
  1,714,460  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (77930x)
 36,472,349  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (77930x)
  1,909,432                  else (*g)[i][j][k]=0.0;
  1,500,268  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (68194x)
 31,914,792  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (68194x)
  3,068,730  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (68194x)

          .              }
          .          }
          .      }
          1      return g;
          9  }
          .  
          .  //copy grid
         49  gridPtr copyGrid(gridPtr in){
        130      gridPtr g(new grid(*in));
      2,121  => ???:operator new(unsigned long) (7x)
      1,173  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


378,548,171  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(grid&) (7x)
          7      return g;
         42  }
          .  
          .  //add 2 grids voxel by voxel
          .  gridPtr addGrids(gridPtr in1, gridPtr in2){
          .      gridPtr g(new grid(in1->dims, in1->scale, in1->shift, in1->pad));
          .      *g = ((*in1)+(*in2));
          .      return g;
          .  }
          .  
          .  //get linear indices of all non-zero voxels in grid
         18  vector<int> findIndexes(gridPtr band){
        156      vector<int> indexes_copy (band->dims[0]*band->dims[1]*band->dims[2], 0);


      2,288  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)          3      int num_ind = 0;
      2,478      for(int i=0; i<band->dims[0]; i++){


     82,782          for(int j=0; j<band->dims[1]; j++){


  3,373,326              for(int k=0; k<band->dims[2]; k++){


  7,671,510                  if((*band)[i][j][k]!=0.0){

  9,863,370  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (219186x)
102,579,048  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (219186x)
  4,822,092  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (219186x)
    265,192                      Eigen::Vector3i pnt;

  1,392,258                      pnt[0]=i; pnt[1]=j; pnt[2]=k;

  1,193,372                      indexes_copy[num_ind] = band->sub2ind(pnt);

      2,242  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

 56,618,492  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::sub2ind(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) (66298x)
     66,298                      num_ind++;
          .                  }
          .              }
          .          }
          .      }
          .      //resize indexes
         48      vector<int> indexes(num_ind, 0);    265,207      for(int i=0; i<num_ind; i++){
  1,127,066          indexes[i] = indexes_copy[i];

          .      }
         22      return indexes;
        747  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         15  }
          .  
          .  //create index map
         33  gridPtr getIndexMap(gridPtr band, const vector<int>& indexes){
        108      gridPtr map_(new grid(band->dims, band->scale, band->shift, band->pad));

        857  => ???:operator new(unsigned long) (3x)

  2,743,282  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, int) (3x)
          .      //set all values to -1
      2,478      for(int i=0; i<map_->dims[0]; i++){


     82,782          for(int j=0; j<map_->dims[1]; j++){


  3,373,326              for(int k=0; k<map_->dims[2]; k++){


  6,137,208                  (*map_)[i][j][k]=-1.0;

  9,863,370  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (219186x)
102,579,048  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (219186x)
  4,822,092  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (219186x)
          .              }
          .          }
          .      }
          .      //give i.d.'s to band location
    549,930      for(int i=0; i<indexes.size(); i++){

        893  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    899,828          (*map_)(indexes[i])=(float)i;

114,528,167  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator()(int) (49990x)

      1,873  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
          .      }
          3      return map_;
         45  }
     14,301  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:__static_initialization_and_destruction_0(int, int) (1x)

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 105 ----------------------------------------
        .  #if defined(_MSC_VER) && (_MSC_VER==1500)
        .  // Workaround MSVC 9 internal compiler error.
        .  // TODO: It has been detected with win64 builds (amd64), so let's check whether it also happens in 32bits+SSE mode
        .  // TODO: let's check whether there does not exist a better fix, like adding a pset0() function. (it crashed on pset1(0)).
        .  template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set_ps(from,from,from,from); }
        .  template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set_pd(from,from); }
        .  template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set_epi32(from,from,from,from); }
        .  #else
  413,408  template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set1_ps(from); }
        .  template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set1_pd(from); }
1,124,000  template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set1_epi32(from); }
        .  #endif
        .  
        .  template<> EIGEN_STRONG_INLINE Packet4f plset<float>(const float& a) { return _mm_add_ps(pset1<Packet4f>(a), _mm_set_ps(3,2,1,0)); }
        .  template<> EIGEN_STRONG_INLINE Packet2d plset<double>(const double& a) { return _mm_add_pd(pset1<Packet2d>(a),_mm_set_pd(1,0)); }
        .  template<> EIGEN_STRONG_INLINE Packet4i plset<int>(const int& a) { return _mm_add_epi32(pset1<Packet4i>(a),_mm_set_epi32(3,2,1,0)); }
        .  
        .  template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_add_ps(a,b); }
        .  template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_add_pd(a,b); }
        .  template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_add_epi32(a,b); }
        .  
        .  template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_sub_ps(a,b); }
        .  template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_sub_pd(a,b); }
  876,744  template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_sub_epi32(a,b); }
        .  
        .  template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a)
        .  {
        .    const Packet4f mask = _mm_castsi128_ps(_mm_setr_epi32(0x80000000,0x80000000,0x80000000,0x80000000));
        .    return _mm_xor_ps(a,mask);
        .  }
        .  template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a)
        .  {
-- line 136 ----------------------------------------
-- line 144 ----------------------------------------
        .  
        .  template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }
        .  template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }
        .  template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }
        .  
        .  template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_mul_ps(a,b); }
        .  template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_mul_pd(a,b); }
        .  template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b)
  365,310  {
        .  #ifdef EIGEN_VECTORIZE_SSE4_1
        .    return _mm_mullo_epi32(a,b);
        .  #else
        .    // this version is slightly faster than 4 scalar products
1,315,116    return vec4i_swizzle1(
        .              vec4i_swizzle2(
        .                _mm_mul_epu32(a,b),
        .                _mm_mul_epu32(vec4i_swizzle1(a,1,0,3,2),
        .                              vec4i_swizzle1(b,1,0,3,2)),
        .                0,2,0,2),
        .              0,2,1,3);
        .  #endif
  146,124  }
        .  
        .  template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_div_ps(a,b); }
        .  template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_div_pd(a,b); }
        .  template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& /*a*/, const Packet4i& /*b*/)
        .  { eigen_assert(false && "packet integer division are not supported by SSE");
        .    return pset1<Packet4i>(0);
        .  }
        .  
-- line 173 ----------------------------------------
-- line 213 ----------------------------------------
        .  template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_xor_si128(a,b); }
        .  
        .  template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_andnot_ps(a,b); }
        .  template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_andnot_pd(a,b); }
        .  template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_andnot_si128(a,b); }
        .  
        .  template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float*   from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_ps(from); }
        .  template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double*  from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_pd(from); }
1,534,302  template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_si128(reinterpret_cast<const Packet4i*>(from)); }
        .  
        .  #if defined(_MSC_VER)
        .    template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float*  from) {
        .      EIGEN_DEBUG_UNALIGNED_LOAD
        .      #if (_MSC_VER==1600)
        .      // NOTE Some version of MSVC10 generates bad code when using _mm_loadu_ps
        .      // (i.e., it does not generate an unaligned load!!
        .      // TODO On most architectures this version should also be faster than a single _mm_loadu_ps
-- line 229 ----------------------------------------
-- line 265 ----------------------------------------
        .  { return pset1<Packet2d>(from[0]); }
        .  template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)
        .  {
        .    Packet4i tmp;
        .    tmp = _mm_loadl_epi64(reinterpret_cast<const Packet4i*>(from));
        .    return vec4i_swizzle1(tmp, 0, 0, 1, 1);
        .  }
        .  
   58,828  template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_ps(to, from); }
        .  template<> EIGEN_STRONG_INLINE void pstore<double>(double* to, const Packet2d& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_pd(to, from); }
  772,750  template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_si128(reinterpret_cast<Packet4i*>(to), from); }
        .  
        .  template<> EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const Packet2d& from) {
        .    EIGEN_DEBUG_UNALIGNED_STORE
        .    _mm_storel_pd((to), from);
        .    _mm_storeh_pd((to+1), from);
        .  }
        .  template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(reinterpret_cast<double*>(to), _mm_castps_pd(from)); }
        .  template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(reinterpret_cast<double*>(to), _mm_castsi128_pd(from)); }
-- line 283 ----------------------------------------
-- line 308 ----------------------------------------
        .  #elif defined(_MSC_VER) && !defined(__INTEL_COMPILER)
        .  // The temporary variable fixes an internal compilation error in vs <= 2008 and a wrong-result bug in vs 2010
        .  template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float x = _mm_cvtss_f32(a); return x; }
        .  template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { double x = _mm_cvtsd_f64(a); return x; }
        .  template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int x = _mm_cvtsi128_si32(a); return x; }
        .  #else
        .  template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return _mm_cvtss_f32(a); }
        .  template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return _mm_cvtsd_f64(a); }
1,168,992  template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { return _mm_cvtsi128_si32(a); }
        .  #endif
        .  
        .  template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a)
        .  { return _mm_shuffle_ps(a,a,0x1B); }
        .  template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a)
        .  { return _mm_shuffle_pd(a,a,0x1); }
        .  template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a)
        .  { return _mm_shuffle_epi32(a,0x1B); }
-- line 324 ----------------------------------------
-- line 410 ----------------------------------------
        .  
        .  template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)
        .  {
        .    return _mm_add_pd(_mm_unpacklo_pd(vecs[0], vecs[1]), _mm_unpackhi_pd(vecs[0], vecs[1]));
        .  }
        .  #endif  // SSE3
        .  
        .  template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)
  365,310  {
  803,682    Packet4i tmp = _mm_add_epi32(a, _mm_unpackhi_epi64(a,a));
  949,810    return pfirst(tmp) + pfirst(_mm_shuffle_epi32(tmp, 1));

    1,113  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  292,248  }
        .  
        .  template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)
        .  {
        .    Packet4i tmp0, tmp1, tmp2;
        .    tmp0 = _mm_unpacklo_epi32(vecs[0], vecs[1]);
        .    tmp1 = _mm_unpackhi_epi32(vecs[0], vecs[1]);
        .    tmp2 = _mm_unpackhi_epi32(vecs[2], vecs[3]);
        .    tmp0 = _mm_add_epi32(tmp0, tmp1);
-- line 429 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 48 ----------------------------------------
        .    * Output: \verbinclude MatrixBase_block_int_int_int_int.out
        .    *
        .    * \note Even though the returned expression has dynamic size, in the case
        .    * when it is applied to a fixed-size matrix, it inherits a fixed maximal size,
        .    * which means that evaluating it does not cause a dynamic memory allocation.
        .    *
        .    * \sa class Block, block(Index,Index)
        .    */
  657,558  inline Block<Derived> block(Index startRow, Index startCol, Index blockRows, Index blockCols)
        .  {
1,095,934    return Block<Derived>(derived(), startRow, startCol, blockRows, blockCols);


    1,207  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  219,186  }
        .  
        .  /** This is the const version of block(Index,Index,Index,Index). */
        .  inline const Block<const Derived> block(Index startRow, Index startCol, Index blockRows, Index blockCols) const
        .  {
        .    return Block<const Derived>(derived(), startRow, startCol, blockRows, blockCols);
        .  }
        .  
        .  
-- line 67 ----------------------------------------
-- line 885 ----------------------------------------
        .    * \a n should equal \a N unless \a N is \a Dynamic.
        .    *
        .    * Example: \include MatrixBase_template_int_start.cpp
        .    * Output: \verbinclude MatrixBase_template_int_start.out
        .    *
        .    * \sa class Block
        .    */
        .  template<int N>
       12  inline typename FixedSegmentReturnType<N>::Type head(Index n = N)
        .  {
        .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
       28    return typename FixedSegmentReturnType<N>::Type(derived(), 0, n);
    1,167  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


        6  }
        .  
        .  /** This is the const version of head<int>().*/
        .  template<int N>
        .  inline typename ConstFixedSegmentReturnType<N>::Type head(Index n = N) const
        .  {
        .    EIGEN_STATIC_ASSERT_VECTOR_ONLY(Derived)
        .    return typename ConstFixedSegmentReturnType<N>::Type(derived(), 0, n);
        .  }
-- line 905 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 718 ----------------------------------------
         .        typedef typename __traits_type::value_type  	value_type;
         .        typedef typename __traits_type::difference_type 	difference_type;
         .        typedef typename __traits_type::reference 	reference;
         .        typedef typename __traits_type::pointer   	pointer;
         .  
         .        _GLIBCXX_CONSTEXPR __normal_iterator() : _M_current(_Iterator()) { }
         .  
         .        explicit
20,674,370        __normal_iterator(const _Iterator& __i) : _M_current(__i) { }
         .  
         .        // Allow iterator to const_iterator conversion
         .        template<typename _Iter>
         .          __normal_iterator(const __normal_iterator<_Iter,
         .  			  typename __enable_if<
         .        	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
         .  		      _Container>::__type>& __i)
         .          : _M_current(__i.base()) { }
         .  
         .        // Forward iterator requirements
         .        reference
 1,136,580        operator*() const
 1,515,440        { return *_M_current; }
         .  
         .        pointer
 4,789,542        operator->() const
 6,386,056        { return _M_current; }
         .  
         .        __normal_iterator&
 2,299,554        operator++()
         .        {
 3,832,590  	++_M_current;
   766,518  	return *this;
 1,533,036        }
         .  
         .        __normal_iterator
         .        operator++(int)
         .        { return __normal_iterator(_M_current++); }
         .  
         .        // Bidirectional iterator requirements
         .        __normal_iterator&
    22,806        operator--()
         .        {
    38,010  	--_M_current;
     7,602  	return *this;
    15,204        }
         .  
         .        __normal_iterator
         .        operator--(int)
         .        { return __normal_iterator(_M_current--); }
         .  
         .        // Random access iterator requirements
         .        reference
         .        operator[](const difference_type& __n) const
         .        { return _M_current[__n]; }
         .  
         .        __normal_iterator&
         .        operator+=(const difference_type& __n)
         .        { _M_current += __n; return *this; }
         .  
         .        __normal_iterator
     1,455        operator+(const difference_type& __n) const
     4,675        { return __normal_iterator(_M_current + __n); }

         .  
         .        __normal_iterator&
         .        operator-=(const difference_type& __n)
         .        { _M_current -= __n; return *this; }
         .  
         .        __normal_iterator
       470        operator-(const difference_type& __n) const
     1,598        { return __normal_iterator(_M_current - __n); }

         .  
         .        const _Iterator&
14,787,588        base() const
14,787,588        { return _M_current; }
         .      };
         .  
         .    // Note: In what follows, the left- and right-hand-side iterators are
         .    // allowed to vary in types (conceptually in cv-qualification) so that
         .    // comparison between cv-qualified and non-cv-qualified iterators be
         .    // valid.  However, the greedy and unfriendly operators in std::rel_ops
         .    // will make overload resolution ambiguous (when in scope) if we don't
         .    // provide overloads whose operands are of the same type.  Can someone
-- line 799 ----------------------------------------
-- line 803 ----------------------------------------
         .    template<typename _IteratorL, typename _IteratorR, typename _Container>
         .      inline bool
         .      operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
         .  	       const __normal_iterator<_IteratorR, _Container>& __rhs)
         .      { return __lhs.base() == __rhs.base(); }
         .  
         .    template<typename _Iterator, typename _Container>
         .      inline bool
    90,744      operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
         .  	       const __normal_iterator<_Iterator, _Container>& __rhs)
   211,738      { return __lhs.base() == __rhs.base(); }

         .  
         .    template<typename _IteratorL, typename _IteratorR, typename _Container>
         .      inline bool
         .      operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
         .  	       const __normal_iterator<_IteratorR, _Container>& __rhs)
         .      { return __lhs.base() != __rhs.base(); }
         .  
         .    template<typename _Iterator, typename _Container>
         .      inline bool
 6,774,432      operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
         .  	       const __normal_iterator<_Iterator, _Container>& __rhs)
18,065,150      { return __lhs.base() != __rhs.base(); }

         .  
         .    // Random access iterator requirements
         .    template<typename _IteratorL, typename _IteratorR, typename _Container>
         .      inline bool
         .      operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
         .  	      const __normal_iterator<_IteratorR, _Container>& __rhs)
         .      { return __lhs.base() < __rhs.base(); }
         .  
         .    template<typename _Iterator, typename _Container>
         .      inline bool
       750      operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
         .  	      const __normal_iterator<_Iterator, _Container>& __rhs)
     2,000      { return __lhs.base() < __rhs.base(); }

         .  
         .    template<typename _IteratorL, typename _IteratorR, typename _Container>
         .      inline bool
         .      operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
         .  	      const __normal_iterator<_IteratorR, _Container>& __rhs)
         .      { return __lhs.base() > __rhs.base(); }
         .  
         .    template<typename _Iterator, typename _Container>
-- line 846 ----------------------------------------
-- line 888 ----------------------------------------
         .      inline typename __normal_iterator<_IteratorL, _Container>::difference_type
         .      operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
         .  	      const __normal_iterator<_IteratorR, _Container>& __rhs)
         .  #endif
         .      { return __lhs.base() - __rhs.base(); }
         .  
         .    template<typename _Iterator, typename _Container>
         .      inline typename __normal_iterator<_Iterator, _Container>::difference_type
 3,961,668      operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
         .  	      const __normal_iterator<_Iterator, _Container>& __rhs)
12,272,862      { return __lhs.base() - __rhs.base(); }

         .  
         .    template<typename _Iterator, typename _Container>
         .      inline __normal_iterator<_Iterator, _Container>
         .      operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
         .  	      __n, const __normal_iterator<_Iterator, _Container>& __i)
         .      { return __normal_iterator<_Iterator, _Container>(__i.base() + __n); }
         .  
         .  _GLIBCXX_END_NAMESPACE_VERSION
-- line 906 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 77 ----------------------------------------
        .  struct redux_novec_unroller
        .  {
        .    enum {
        .      HalfLength = Length/2
        .    };
        .  
        .    typedef typename Derived::Scalar Scalar;
        .  
  130,800    static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func& func)
        .    {
  209,312      return func(redux_novec_unroller<Func, Derived, Start, HalfLength>::run(mat,func),
    1,899  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  497,076                  redux_novec_unroller<Func, Derived, Start+HalfLength, Length-HalfLength>::run(mat,func));


    1,899  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  104,640    }
        .  };
        .  
        .  template<typename Func, typename Derived, int Start>
        .  struct redux_novec_unroller<Func, Derived, Start, 1>
        .  {
        .    enum {
        .      outer = Start / Derived::InnerSizeAtCompileTime,
        .      inner = Start % Derived::InnerSizeAtCompileTime
        .    };
        .  
        .    typedef typename Derived::Scalar Scalar;
        .  
  147,150    static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func&)
        .    {
  235,444      return mat.coeffByOuterInner(outer, inner);

  117,720    }
        .  };
        .  
        .  // This is actually dead code and will never be called. It is required
        .  // to prevent false warnings regarding failed inlining though
        .  // for 0 length run() will never be called at all.
        .  template<typename Func, typename Derived, int Start>
        .  struct redux_novec_unroller<Func, Derived, Start, 0>
        .  {
-- line 113 ----------------------------------------
-- line 144 ----------------------------------------
        .      outer = index / int(Derived::InnerSizeAtCompileTime),
        .      inner = index % int(Derived::InnerSizeAtCompileTime),
        .      alignment = (Derived::Flags & AlignedBit) ? Aligned : Unaligned
        .    };
        .  
        .    typedef typename Derived::Scalar Scalar;
        .    typedef typename packet_traits<Scalar>::type PacketScalar;
        .  
  365,310    static EIGEN_STRONG_INLINE PacketScalar run(const Derived &mat, const Func&)
        .    {
  438,376      return mat.template packetByOuterInner<alignment>(outer, inner);
    2,311  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  146,124    }
        .  };
        .  
        .  /***************************************************************************
        .  * Part 3 : implementation of all cases
        .  ***************************************************************************/
        .  
        .  template<typename Func, typename Derived,
        .           int Traversal = redux_traits<Func, Derived>::Traversal,
-- line 163 ----------------------------------------
-- line 292 ----------------------------------------
        .  {
        .    typedef typename Derived::Scalar Scalar;
        .    typedef typename packet_traits<Scalar>::type PacketScalar;
        .    enum {
        .      PacketSize = packet_traits<Scalar>::size,
        .      Size = Derived::SizeAtCompileTime,
        .      VectorizedSize = (Size / PacketSize) * PacketSize
        .    };
  365,310    static EIGEN_STRONG_INLINE Scalar run(const Derived& mat, const Func& func)
        .    {
  876,752      eigen_assert(mat.rows()>0 && mat.cols()>0 && "you are using an empty matrix");
    3,678  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


1,022,876      Scalar res = func.predux(redux_vec_unroller<Func, Derived, 0, Size / PacketSize>::run(mat,func));


    3,866  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        .      if (VectorizedSize != Size)
        .        res = func(res,redux_novec_unroller<Func, Derived, VectorizedSize, Size-VectorizedSize>::run(mat,func));
   73,062      return res;
  146,124    }
        .  };
        .  
        .  } // end namespace internal
        .  
        .  /***************************************************************************
        .  * Part 4 : public API
        .  ***************************************************************************/
        .  
-- line 315 ----------------------------------------
-- line 319 ----------------------------------------
        .    * The template parameter \a BinaryOp is the type of the functor \a func which must be
        .    * an associative operator. Both current STL and TR1 functor styles are handled.
        .    *
        .    * \sa DenseBase::sum(), DenseBase::minCoeff(), DenseBase::maxCoeff(), MatrixBase::colwise(), MatrixBase::rowwise()
        .    */
        .  template<typename Derived>
        .  template<typename Func>
        .  EIGEN_STRONG_INLINE typename internal::result_of<Func(typename internal::traits<Derived>::Scalar)>::type
  381,660  DenseBase<Derived>::redux(const Func& func) const
        .  {
        .    typedef typename internal::remove_all<typename Derived::Nested>::type ThisNested;
        .    return internal::redux_impl<Func, ThisNested>
  693,544              ::run(derived(), func);


    4,278  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
  159,204  }
        .  
        .  /** \returns the minimum of all coefficients of \c *this.
        .    * \warning the result is undefined if \c *this contains NaN.
        .    */
        .  template<typename Derived>
        .  EIGEN_STRONG_INLINE typename internal::traits<Derived>::Scalar
        .  DenseBase<Derived>::minCoeff() const
        .  {
-- line 340 ----------------------------------------
-- line 341 ----------------------------------------
        .    return this->redux(Eigen::internal::scalar_min_op<Scalar>());
        .  }
        .  
        .  /** \returns the maximum of all coefficients of \c *this.
        .    * \warning the result is undefined if \c *this contains NaN.
        .    */
        .  template<typename Derived>
        .  EIGEN_STRONG_INLINE typename internal::traits<Derived>::Scalar
   13,080  DenseBase<Derived>::maxCoeff() const
        .  {
   39,248    return this->redux(Eigen::internal::scalar_max_op<Scalar>());
    3,001  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


   13,080  }
        .  
        .  /** \returns the sum of all coefficients of *this
        .    *
        .    * \sa trace(), prod(), mean()
        .    */
        .  template<typename Derived>
        .  EIGEN_STRONG_INLINE typename internal::traits<Derived>::Scalar
  292,248  DenseBase<Derived>::sum() const
        .  {
        .    if(SizeAtCompileTime==0 || (SizeAtCompileTime==Dynamic && size()==0))
        .      return Scalar(0);
  730,628    return this->redux(Eigen::internal::scalar_sum_op<Scalar>());
    3,575  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


  146,124  }
        .  
        .  /** \returns the mean of all coefficients of *this
        .  *
        .  * \sa trace(), prod(), sum()
        .  */
        .  template<typename Derived>
        .  EIGEN_STRONG_INLINE typename internal::traits<Derived>::Scalar
        .  DenseBase<Derived>::mean() const
-- line 373 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 645 ----------------------------------------
        .           bool IsInteger>
        .  struct scalar_fuzzy_default_impl {};
        .  
        .  template<typename Scalar>
        .  struct scalar_fuzzy_default_impl<Scalar, false, false>
        .  {
        .    typedef typename NumTraits<Scalar>::Real RealScalar;
        .    template<typename OtherScalar>
1,867,338    static inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y, const RealScalar& prec)
        .    {
        .      using std::abs;
5,602,018      return abs(x) <= abs(y) * prec;
      616  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  622,446    }
        .    static inline bool isApprox(const Scalar& x, const Scalar& y, const RealScalar& prec)
        .    {
        .      using std::min;
        .      using std::abs;
        .      return abs(x - y) <= (min)(abs(x), abs(y)) * prec;
        .    }
        .    static inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y, const RealScalar& prec)
        .    {
-- line 665 ----------------------------------------
-- line 701 ----------------------------------------
        .      return numext::abs2(x - y) <= (min)(numext::abs2(x), numext::abs2(y)) * prec * prec;
        .    }
        .  };
        .  
        .  template<typename Scalar>
        .  struct scalar_fuzzy_impl : scalar_fuzzy_default_impl<Scalar, NumTraits<Scalar>::IsComplex, NumTraits<Scalar>::IsInteger> {};
        .  
        .  template<typename Scalar, typename OtherScalar>
1,867,338  inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y,
   92,280                                const typename NumTraits<Scalar>::Real &precision = NumTraits<Scalar>::dummy_precision())
    1,205  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  {
2,178,565    return scalar_fuzzy_impl<Scalar>::template isMuchSmallerThan<OtherScalar>(x, y, precision);
    1,233  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  622,446  }
        .  
        .  template<typename Scalar>
        .  inline bool isApprox(const Scalar& x, const Scalar& y,
        .                       const typename NumTraits<Scalar>::Real &precision = NumTraits<Scalar>::dummy_precision())
        .  {
        .    return scalar_fuzzy_impl<Scalar>::isApprox(x, y, precision);
        .  }
        .  
-- line 721 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 207 ----------------------------------------
         .      static pointer
         .      allocate(_Alloc& __a, size_type __n)
         .      { return __a.allocate(__n); }
         .  
         .      static void deallocate(_Alloc& __a, pointer __p, size_type __n)
         .      { __a.deallocate(__p, __n); }
         .  
         .      template<typename _Tp>
10,252,578        static void construct(_Alloc& __a, pointer __p, const _Tp& __arg)
15,317,147        { __a.construct(__p, __arg); }

         .  
   877,455      static void destroy(_Alloc& __a, pointer __p)
 1,342,177      { __a.destroy(__p); }

         .  
 5,279,928      static size_type max_size(const _Alloc& __a)
 7,919,814      { return __a.max_size(); }

         .  
 2,237,676      static const _Alloc& _S_select_on_copy(const _Alloc& __a) { return __a; }
         .  
         .      static void _S_on_swap(_Alloc& __a, _Alloc& __b)
         .      {
         .        // _GLIBCXX_RESOLVE_LIB_DEFECTS
         .        // 431. Swapping containers with unequal allocators.
         .        std::__alloc_swap<_Alloc>::_S_do_it(__a, __b);
         .      }
         .  
-- line 232 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 17 ----------------------------------------
        .  // associative functors:
        .  
        .  /** \internal
        .    * \brief Template functor to compute the sum of two scalars
        .    *
        .    * \sa class CwiseBinaryOp, MatrixBase::operator+, class VectorwiseOp, MatrixBase::sum()
        .    */
        .  template<typename Scalar> struct scalar_sum_op {
   18,675    EIGEN_EMPTY_STRUCT_CTOR(scalar_sum_op)
   77,472    EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a + b; }
        .    template<typename Packet>
        .    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
        .    { return internal::padd(a,b); }
        .    template<typename Packet>
    6,180    EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const
   12,364    { return internal::predux(a); }

    1,058  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_sum_op<Scalar> > {
        .    enum {
        .      Cost = NumTraits<Scalar>::AddCost,
        .      PacketAccess = packet_traits<Scalar>::HasAdd
        .    };
        .  };
-- line 40 ----------------------------------------
-- line 45 ----------------------------------------
        .    * \sa class CwiseBinaryOp, Cwise::operator*(), class VectorwiseOp, MatrixBase::redux()
        .    */
        .  template<typename LhsScalar,typename RhsScalar> struct scalar_product_op {
        .    enum {
        .      // TODO vectorize mixed product
        .      Vectorizable = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasMul && packet_traits<RhsScalar>::HasMul
        .    };
        .    typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;
   22,620    EIGEN_EMPTY_STRUCT_CTOR(scalar_product_op)
  196,832    EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a * b; }
        .    template<typename Packet>
    3,564    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
    4,752    { return internal::pmul(a,b); }

        .    template<typename Packet>
        .    EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const
        .    { return internal::predux_mul(a); }
        .  };
        .  template<typename LhsScalar,typename RhsScalar>
        .  struct functor_traits<scalar_product_op<LhsScalar,RhsScalar> > {
        .    enum {
        .      Cost = (NumTraits<LhsScalar>::MulCost + NumTraits<RhsScalar>::MulCost)/2, // rough estimate!
-- line 65 ----------------------------------------
-- line 120 ----------------------------------------
        .  };
        .  
        .  /** \internal
        .    * \brief Template functor to compute the max of two scalars
        .    *
        .    * \sa class CwiseBinaryOp, MatrixBase::cwiseMax, class VectorwiseOp, MatrixBase::maxCoeff()
        .    */
        .  template<typename Scalar> struct scalar_max_op {
   19,165    EIGEN_EMPTY_STRUCT_CTOR(scalar_max_op)
  458,919    EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { using std::max; return (max)(a, b); }
      634  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .    template<typename Packet>
    3,510    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
    4,684    { return internal::pmax(a,b); }
      877  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .    template<typename Packet>
    1,570    EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const
    3,144    { return internal::predux_max(a); }
    1,114  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_max_op<Scalar> > {
        .    enum {
        .      Cost = NumTraits<Scalar>::AddCost,
        .      PacketAccess = packet_traits<Scalar>::HasMax
        .    };
        .  };
-- line 143 ----------------------------------------
-- line 181 ----------------------------------------
        .  // other binary functors:
        .  
        .  /** \internal
        .    * \brief Template functor to compute the difference of two scalars
        .    *
        .    * \sa class CwiseBinaryOp, MatrixBase::operator-
        .    */
        .  template<typename Scalar> struct scalar_difference_op {
   26,150    EIGEN_EMPTY_STRUCT_CTOR(scalar_difference_op)
4,418,864    EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a - b; }
        .    template<typename Packet>
      396    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const
      528    { return internal::psub(a,b); }

        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_difference_op<Scalar> > {
        .    enum {
        .      Cost = NumTraits<Scalar>::AddCost,
        .      PacketAccess = packet_traits<Scalar>::HasSub
        .    };
        .  };
-- line 201 ----------------------------------------
-- line 322 ----------------------------------------
        .  };
        .  
        .  /** \internal
        .    * \brief Template functor to compute the absolute value of a scalar
        .    *
        .    * \sa class CwiseUnaryOp, Cwise::abs
        .    */
        .  template<typename Scalar> struct scalar_abs_op {
   39,424    EIGEN_EMPTY_STRUCT_CTOR(scalar_abs_op)
        .    typedef typename NumTraits<Scalar>::Real result_type;
  506,043    EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { using std::abs; return abs(a); }
      538  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .    template<typename Packet>
    4,495    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const
    5,398    { return internal::pabs(a); }
      810  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_abs_op<Scalar> >
        .  {
        .    enum {
        .      Cost = NumTraits<Scalar>::AddCost,
        .      PacketAccess = packet_traits<Scalar>::HasAbs
        .    };
-- line 343 ----------------------------------------
-- line 344 ----------------------------------------
        .  };
        .  
        .  /** \internal
        .    * \brief Template functor to compute the squared absolute value of a scalar
        .    *
        .    * \sa class CwiseUnaryOp, Cwise::abs2
        .    */
        .  template<typename Scalar> struct scalar_abs2_op {
   37,350    EIGEN_EMPTY_STRUCT_CTOR(scalar_abs2_op)
        .    typedef typename NumTraits<Scalar>::Real result_type;
   54,094    EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { return numext::abs2(a); }

    1,386  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .    template<typename Packet>
    6,180    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const
    9,892    { return internal::pmul(a,a); }

      842  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_abs2_op<Scalar> >
        .  { enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasAbs2 }; };
        .  
        .  /** \internal
        .    * \brief Template functor to compute the conjugate of a complex value
        .    *
-- line 365 ----------------------------------------
-- line 499 ----------------------------------------
        .   *  - on the other hand GCC is able to moves the pset1() outside the loop :)
        .   *  - simpler code ;)
        .   * (ICC and gcc 4.4 seems to perform well in both cases, the issue is visible with y = a*x + b*y)
        .   */
        .  template<typename Scalar>
        .  struct scalar_multiple_op {
        .    typedef typename packet_traits<Scalar>::type Packet;
        .    // FIXME default copy constructors seems bugged with std::complex<>
  179,280    EIGEN_STRONG_INLINE scalar_multiple_op(const scalar_multiple_op& other) : m_other(other.m_other) { }
   59,760    EIGEN_STRONG_INLINE scalar_multiple_op(const Scalar& other) : m_other(other) { }
  274,320    EIGEN_STRONG_INLINE Scalar operator() (const Scalar& a) const { return a * m_other; }
      660    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const
    1,716    { return internal::pmul(a, pset1<Packet>(m_other)); }


        .    typename add_const_on_value_type<typename NumTraits<Scalar>::Nested>::type m_other;
        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_multiple_op<Scalar> >
        .  { enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };
        .  
        .  template<typename Scalar1, typename Scalar2>
        .  struct scalar_multiple2_op {
-- line 519 ----------------------------------------
-- line 534 ----------------------------------------
        .    * a scalar where the scalar type is not necessarily a floating point type.
        .    *
        .    * \sa class CwiseUnaryOp, MatrixBase::operator/
        .    */
        .  template<typename Scalar>
        .  struct scalar_quotient1_op {
        .    typedef typename packet_traits<Scalar>::type Packet;
        .    // FIXME default copy constructors seems bugged with std::complex<>
   43,280    EIGEN_STRONG_INLINE scalar_quotient1_op(const scalar_quotient1_op& other) : m_other(other.m_other) { }
   43,280    EIGEN_STRONG_INLINE scalar_quotient1_op(const Scalar& other) : m_other(other) {}
  333,600    EIGEN_STRONG_INLINE Scalar operator() (const Scalar& a) const { return a / m_other; }
    3,955    EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const
   10,291    { return internal::pdiv(a, pset1<Packet>(m_other)); }

    2,358  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

        .    typename add_const_on_value_type<typename NumTraits<Scalar>::Nested>::type m_other;
        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_quotient1_op<Scalar> >
        .  { enum { Cost = 2 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };
        .  
        .  // nullary functors
        .  
        .  template<typename Scalar>
        .  struct scalar_constant_op {
        .    typedef typename packet_traits<Scalar>::type Packet;
        .    EIGEN_STRONG_INLINE scalar_constant_op(const scalar_constant_op& other) : m_other(other.m_other) { }
        .    EIGEN_STRONG_INLINE scalar_constant_op(const Scalar& other) : m_other(other) { }
        .    template<typename Index>
  188,232    EIGEN_STRONG_INLINE const Scalar operator() (Index, Index = 0) const { return m_other; }
        .    template<typename Index>
        .    EIGEN_STRONG_INLINE const Packet packetOp(Index, Index = 0) const { return internal::pset1<Packet>(m_other); }
        .    const Scalar m_other;
        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_constant_op<Scalar> >
        .  // FIXME replace this packet test by a safe one
        .  { enum { Cost = 1, PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };
        .  
        .  template<typename Scalar> struct scalar_identity_op {
    5,720    EIGEN_EMPTY_STRUCT_CTOR(scalar_identity_op)
        .    template<typename Index>
   28,935    EIGEN_STRONG_INLINE const Scalar operator() (Index row, Index col) const { return row==col ? Scalar(1) : Scalar(0); }
        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_identity_op<Scalar> >
        .  { enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };
        .  
        .  template <typename Scalar, bool RandomAccess> struct linspaced_op_impl;
        .  
        .  // linear access for packet ops:
-- line 582 ----------------------------------------
-- line 864 ----------------------------------------
        .  };
        .  
        .  /** \internal
        .    * \brief Template functor to compute the inverse of a scalar
        .    * \sa class CwiseUnaryOp, Cwise::inverse()
        .    */
        .  template<typename Scalar>
        .  struct scalar_inverse_op {
    7,222    EIGEN_EMPTY_STRUCT_CTOR(scalar_inverse_op)
    8,792    inline Scalar operator() (const Scalar& a) const { return Scalar(1)/a; }
        .    template<typename Packet>
        .    inline const Packet packetOp(const Packet& a) const
        .    { return internal::pdiv(pset1<Packet>(Scalar(1)),a); }
        .  };
        .  template<typename Scalar>
        .  struct functor_traits<scalar_inverse_op<Scalar> >
        .  { enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };
        .  
-- line 881 ------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 52 ----------------------------------------
        .    inline const T& operator()(const T& x) { return x; }
        .    template<typename T>
        .    inline const T& pconj(const T& x) { return x; }
        .  };
        .  
        .  template<typename Scalar> struct conj_helper<Scalar,Scalar,false,false>
        .  {
        .    EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const { return internal::pmadd(x,y,c); }
1,022,872    EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const Scalar& y) const { return internal::pmul(x,y); }

      975  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        .  };
        .  
        .  template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, false,true>
        .  {
        .    typedef std::complex<RealScalar> Scalar;
        .    EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const
        .    { return c + pmul(x,y); }
        .  
-- line 68 ----------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 28 ----------------------------------------
        .  
        .  namespace boost
        .  {
        .  
        .  namespace detail
        .  {
        .  
        .  inline int atomic_exchange_and_add( int * pw, int dv )
  656,164  {
        .      // int r = *pw;
        .      // *pw += dv;
        .      // return r;
        .  
        .      int r;
        .  
        .      __asm__ __volatile__
        .      (
        .          "lock\n\t"
        .          "xadd %1, %0":
        .          "=m"( *pw ), "=r"( r ): // outputs (%0, %1)
        .          "m"( *pw ), "1"( dv ): // inputs (%2, %3 == %1)
        .          "memory", "cc" // clobbers
  820,205      );
        .  
  164,041      return r;
  328,082  }
        .  
        .  inline void atomic_increment( int * pw )
  491,844  {
        .      //atomic_exchange_and_add( pw, 1 );
        .  
        .      __asm__
        .      (
        .          "lock\n\t"
        .          "incl %0":
        .          "=m"( *pw ): // output (%0)
        .          "m"( *pw ): // input (%1)
        .          "cc" // clobbers
  491,844      );
  327,896  }
        .  
        .  inline int atomic_conditional_increment( int * pw )
        .  {
        .      // int rv = *pw;
        .      // if( rv != 0 ) ++*pw;
        .      // return rv;
        .  
        .      int rv, tmp;
-- line 75 ----------------------------------------
-- line 101 ----------------------------------------
        .      sp_counted_base( sp_counted_base const & );
        .      sp_counted_base & operator= ( sp_counted_base const & );
        .  
        .      int use_count_;        // #shared
        .      int weak_count_;       // #weak + (#shared != 0)
        .  
        .  public:
        .  
      315      sp_counted_base(): use_count_( 1 ), weak_count_( 1 )
        .      {
       70      }
        .  
      152      virtual ~sp_counted_base() // nothrow
       76      {
        .      }
        .  
        .      // dispose() is called when use_count_ drops to zero, to release
        .      // the resources managed by *this.
        .  
        .      virtual void dispose() = 0; // nothrow
        .  
        .      // destroy() is called when weak_count_ drops to zero.
        .  
      188      virtual void destroy() // nothrow
        .      {
      423          delete this;
      286  => ???:boost::detail::sp_counted_impl_pd<float*, boost::checked_array_deleter<float> >::~sp_counted_impl_pd() (3x)      196  => ???:boost::detail::sp_counted_impl_p<pcl::DefaultPointRepresentation<pcl::PointXYZ> >::~sp_counted_impl_p() (2x)

      286  => ???:boost::detail::sp_counted_impl_p<flann::Index<flann::L2_Simple<float> > >::~sp_counted_impl_p() (3x)
       98  => ???:boost::detail::sp_counted_impl_p<pcl::DefaultPointRepresentation<pcl::InterestPoint> >::~sp_counted_impl_p() (1x)
       94      }
        .  
        .      virtual void * get_deleter( sp_typeinfo const & ti ) = 0;
        .      virtual void * get_untyped_deleter() = 0;
        .  
  655,792      void add_ref_copy()
        .      {
  655,792          atomic_increment( &use_count_ );

  327,896      }
        .  
        .      bool add_ref_lock() // true on success
        .      {
        .          return atomic_conditional_increment( &use_count_ ) != 0;
        .      }
        .  
  655,984      void release() // nothrow
        .      {
1,475,964          if( atomic_exchange_and_add( &use_count_, -1 ) == 1 )

        .          {
      315              dispose();

      222  => ???:boost::detail::sp_counted_impl_p<pcl::DefaultPointRepresentation<pcl::PointXYZ> >::dispose() (2x)

    2,883  => ???:boost::detail::sp_counted_impl_pd<float*, boost::checked_array_deleter<float> >::dispose() (3x)      111  => ???:boost::detail::sp_counted_impl_p<pcl::DefaultPointRepresentation<pcl::InterestPoint> >::dispose() (1x)


   64,483  => ???:boost::detail::sp_counted_impl_p<flann::Index<flann::L2_Simple<float> > >::dispose() (3x)
      135              weak_release();

        .          }
  327,992      }
        .  
        .      void weak_add_ref() // nothrow
        .      {
        .          atomic_increment( &weak_count_ );
        .      }
        .  
      180      void weak_release() // nothrow
        .      {
      405          if( atomic_exchange_and_add( &weak_count_, -1 ) == 1 )

        .          {
      315              destroy();

        .          }
       90      }
        .  
        .      long use_count() const // nothrow
        .      {
        .          return static_cast<int const volatile &>( use_count_ );
        .      }
        .  };
        .  
        .  } // namespace detail
-- line 170 ------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------
     Ir 

-- line 57 ----------------------------------------
      .  template<typename MatrixType> class Transpose
      .    : public TransposeImpl<MatrixType,typename internal::traits<MatrixType>::StorageKind>
      .  {
      .    public:
      .  
      .      typedef typename TransposeImpl<MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;
      .      EIGEN_GENERIC_PUBLIC_INTERFACE(Transpose)
      .  
     18      inline Transpose(MatrixType& a_matrix) : m_matrix(a_matrix) {}

  1,049  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      .  
      .      EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Transpose)
      .  
513,953      inline Index rows() const { return m_matrix.cols(); }

     11      inline Index cols() const { return m_matrix.rows(); }

      .  
      .      /** \returns the nested expression */
      .      const typename internal::remove_all<typename MatrixType::Nested>::type&
327,040      nestedExpression() const { return m_matrix; }
      .  
      .      /** \returns the nested expression */
      .      typename internal::remove_all<typename MatrixType::Nested>::type&
      .      nestedExpression() { return m_matrix.const_cast_derived(); }
      .  
      .    protected:
      .      typename MatrixType::Nested m_matrix;
      .  };
-- line 82 ----------------------------------------
-- line 394 ----------------------------------------
      .               "or evaluate the rhs into a temporary using .eval()");
      .  
      .      }
      .  };
      .  
      .  template<typename Derived, typename OtherDerived>
      .  struct checkTransposeAliasing_impl<Derived, OtherDerived, false>
      .  {
404,180      static void run(const Derived&, const OtherDerived&)
      .      {
202,090      }
      .  };
      .  
      .  } // end namespace internal
      .  
      .  template<typename Derived>
      .  template<typename OtherDerived>
505,225  void DenseBase<Derived>::checkTransposeAliasing(const OtherDerived& other) const
      .  {
909,455      internal::checkTransposeAliasing_impl<Derived, OtherDerived>::run(derived(), other);


202,090  }
      .  #endif
      .  
      .  } // end namespace Eigen
      .  
      .  #endif // EIGEN_TRANSPOSE_H

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
       Ir 

-- line 11 ----------------------------------------
        .  // This file is a base class plugin containing common coefficient wise functions.
        .  
        .  /** \returns an expression of the difference of \c *this and \a other
        .    *
        .    * \note If you want to substract a given scalar from all coefficients, see Cwise::operator-().
        .    *
        .    * \sa class CwiseBinaryOp, operator-=()
        .    */
2,411,095  EIGEN_MAKE_CWISE_BINARY_OP(operator-,internal::scalar_difference_op)


    2,526  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

        .  
        .  /** \returns an expression of the sum of \c *this and \a other
        .    *
        .    * \note If you want to add a given scalar to all coefficients, see Cwise::operator+().
        .    *
        .    * \sa class CwiseBinaryOp, operator+=()
        .    */
        .  EIGEN_MAKE_CWISE_BINARY_OP(operator+,internal::scalar_sum_op)
-- line 27 ----------------------------------------
-- line 34 ----------------------------------------
        .    * Here is an example illustrating the use of custom functors:
        .    * \include class_CwiseBinaryOp.cpp
        .    * Output: \verbinclude class_CwiseBinaryOp.out
        .    *
        .    * \sa class CwiseBinaryOp, operator+(), operator-(), cwiseProduct()
        .    */
        .  template<typename CustomBinaryOp, typename OtherDerived>
        .  EIGEN_STRONG_INLINE const CwiseBinaryOp<CustomBinaryOp, const Derived, const OtherDerived>
  584,496  binaryExpr(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other, const CustomBinaryOp& func = CustomBinaryOp()) const
        .  {
1,242,058    return CwiseBinaryOp<CustomBinaryOp, const Derived, const OtherDerived>(derived(), other.derived(), func);


    1,903  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  365,310  }
        .  

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp
--------------------------------------------------------------------------------
         Ir 

          .  
          .  #include "dfields.h"
          .  
          .  using namespace std;
          .  
          .  //extract perimeter of binary volume
         10  gridPtr fastPerim(gridPtr volume_grid){
         36      gridPtr g(new grid(volume_grid->dims, volume_grid->scale, volume_grid->shift, volume_grid->pad));
        119  => ???:operator new(unsigned long) (1x)
    949,452  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, int) (1x)


        826      for(int i=0; i<g->dims[0]; i++){


     27,594          for(int j=0; j<g->dims[1]; j++){


  1,124,442              for(int k=0; k<g->dims[2]; k++){


  2,045,736                  (*g)[i][j][k]=1.0;
  1,607,364  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (73062x)
 34,193,016  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (73062x)
  3,287,790  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (73062x)

    219,186                  int neg_i=1;int neg_j=1;int neg_k=1;
    219,186                  int pos_i=1; int pos_j=1; int pos_k=1;
    148,830                  if(i==0)neg_i=0;
  1,076,988                  else if(i==g->dims[0]-1)pos_i=0;


    150,552                  if(j==0)neg_j=0;
  1,064,934                  else if(j==g->dims[1]-1)pos_j=0;


    149,688                  if(k==0)neg_k=0;
  1,070,982                  else if(k==g->dims[2]-1)pos_k=0;


          .                  //search neighboring voxels for different value
  2,102,562                  for(int i_=i-neg_i; i_<=i+pos_i; i_++){
  6,199,200                      for(int j_=j-neg_j; j_<=j+pos_j; j_++){
 18,267,040                          for(int k_=k-neg_k; k_<=k+pos_k; k_++){
114,553,120                              if((*volume_grid)[i][j][k]!=(*volume_grid)[i_][j_][k_]){
169,012,800  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (3755840x)

 82,628,480  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (3755840x)
1,757,733,120  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (3755840x)
  1,230,432                                  (*g)[i][j][k]=0.0;
  1,977,480  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (43944x)

    966,768  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (43944x)
 20,565,792  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (43944x)
          .                              }
          .                          }
          .                      }
          .                  }
          .                  //end of neighbor search
          .              }
          .          }
          .      }
          .  
          1      return g;
          9  }
          .  
          .  //implementation of Saito and Toriwaki distance field
          .  //squared euclidean distance to closest 0-value voxel
          6  gridPtr getsqdist(gridPtr volume_grid){
          .      //make copies
         20      gridPtr dist_grid = copyGrid(volume_grid);
      1,541  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 54,090,355  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:copyGrid(boost::shared_ptr<grid>) (1x)


         16      gridPtr dist_grid_copy = copyGrid(dist_grid);
 54,089,198  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:copyGrid(boost::shared_ptr<grid>) (1x)


          .      //first transformation
        826      for(int i=0; i<dist_grid->dims[0]; i++){


     27,594          for(int j=0; j<dist_grid->dims[1]; j++){


  1,124,442              for(int k=0; k<dist_grid->dims[2]; k++){


          .                  //get squared dist to closest 0 in row (i's)
    146,124                  float min = 100000;
 60,349,212                  for(int index=0; index<dist_grid->dims[0]; index++){


  7,890,696                      float dist = 100000;
138,087,180                      if((*dist_grid)[index][j][k]==0.0){
177,540,660  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (3945348x)

 86,797,656  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (3945348x)
1,846,422,864  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (3945348x)
  4,389,066                          dist = (index-i)*(index-i);
          .                      }
 11,836,044                      if(dist<min){
    429,204                          min=dist;
          .                      }
          .                  }
          .                  //set value of voxel to min q dist
  2,045,736                  (*dist_grid_copy)[i][j][k]=min;

  3,287,790  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (73062x)
 34,193,016  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (73062x)
  1,607,364  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (73062x)
          .              }
          .          }
          .      }//end of first transformation
          .  
         30      dist_grid=copyGrid(dist_grid_copy); 54,089,131  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:copyGrid(boost::shared_ptr<grid>) (1x)
        840  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
          .      //second transformation
        826      for(int i=0; i<dist_grid->dims[0]; i++){


     27,594          for(int j=0; j<dist_grid->dims[1]; j++){


  1,124,442              for(int k=0; k<dist_grid->dims[2]; k++){


     73,062                  int min = 100000;
 37,334,682                  for(int index=0; index<dist_grid->dims[1]; index++){


 94,030,794                      int dist = (*dist_grid)[i][index][k] + (index-j)*(index-j);
1,128,369,528  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (2411046x)
 53,043,012  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (2411046x)

108,497,070  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (2411046x)
  8,229,428                      if(dist<min) min=dist;
          .                  }
          .                  //set value of voxel to min q dist
  1,972,674                  (*dist_grid_copy)[i][j][k]=(float)min;

  3,287,790  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (73062x)
 34,193,016  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (73062x)
  1,607,364  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (73062x)
          .              }
          .          }
          .      }//end of second transformation
          .  
         26      dist_grid=copyGrid(dist_grid_copy);
 54,052,618  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:copyGrid(boost::shared_ptr<grid>) (1x)          .      //third transformation
        826      for(int i=0; i<dist_grid->dims[0]; i++){


     27,594          for(int j=0; j<dist_grid->dims[1]; j++){


  1,124,442              for(int k=0; k<dist_grid->dims[2]; k++){


     73,062                  int min = 100000;
 46,102,122                  for(int index=0; index<dist_grid->dims[2]; index++){


116,826,138                      int dist = (*dist_grid)[i][j][index] + (index-k)*(index-k);
1,401,913,656  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (2995542x)
 65,901,924  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (2995542x)

134,799,390  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (2995542x)
 11,327,394                      if(dist<min) min=dist;
          .                  }
          .                  //set value of voxel to min q dist
  1,972,674                  (*dist_grid_copy)[i][j][k]=(float)min;
 34,193,016  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (73062x)
  1,607,364  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (73062x)

  3,287,790  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (73062x)
          .              }
          .          }
          .      }//end of third transformation
          .  
          6      return dist_grid_copy;

          5  }
          .  
          .  //returns linear indexes of closest 0-value voxel
          .  gridPtr getsqdist_index(gridPtr volume_grid){
          .      //make copies
          .      gridPtr index_grid;
          .      gridPtr index_grid_copy = copyGrid(volume_grid);
          .      gridPtr dist_grid = copyGrid(volume_grid);
          .      gridPtr dist_grid_copy = copyGrid(dist_grid);
-- line 107 ----------------------------------------
-- line 174 ----------------------------------------
          .          }
          .      }//end of third transformation
          .  
          .      return index_grid_copy;
          .  
          .  }
          .  
          .  //get square root of grid
         10  gridPtr getsqrt(gridPtr g){
         36      gridPtr s(new grid(g->dims, g->scale, g->shift, g->pad));

    913,011  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, int) (1x)
        113  => ???:operator new(unsigned long) (1x)

        826      for(int i=0; i<s->dims[0]; i++){


     27,594          for(int j=0; j<s->dims[1]; j++){


  1,124,442              for(int k=0; k<s->dims[2]; k++){


  4,310,662                  (*s)[i][j][k]= (float) sqrt((double)(*g)[i][j][k]);
  3,214,728  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (146124x)
 68,386,032  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (146124x)
    365,310  => /build/eglibc-oGUzwX/eglibc-2.19/math/w_sqrt.c:sqrt (73062x)
  6,575,580  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (146124x)
      2,473  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .              }
          .          }
          .      }
          1      return s;
          9  }
          .  
          .  
          .  //*****************************************************************************************************
          .  //functions for computing normals of surface
          .  
          .  //get linear indices of neighboring voxels
     22,890  vector<int> getNeighbors(gridPtr g, const Eigen::Vector3i &pnt){
     13,080      vector<int> indexes;

    183,120      for(int i=pnt[0]-1; i<=pnt[0]+1; i++){

    549,360          for(int j=pnt[1]-1; j<=pnt[1]+1; j++){

  1,648,080              for(int k=pnt[2]-1; k<=pnt[2]+1; k++){

  2,736,990                  if((*g)[i][j][k]>0){
  3,973,050  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (88290x)

  1,942,380  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (88290x)
 41,319,720  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (88290x)
    265,272                      Eigen::Vector3i p;

  1,392,678                      p[0]=i; p[1]=j; p[2]=k;

  1,061,088                      indexes.push_back(g->sub2ind(p));


 56,635,572  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::sub2ind(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) (66318x)
          .                  }
          .              }
          .          }
          .      }
      3,270      return indexes;
     16,350  }
          .  
          .  //check if voxel is on surface
    696,900  bool isSurface(gridPtr g, const Eigen::Vector3i &pnt){
          .      //search neighboring voxels for different value
    975,664      int i=pnt[0];
      1,163  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    975,660      int j=pnt[1];

    975,660      int k=pnt[2];

  5,014,704      if((*g)[i][j][k]!=1.0) return false;
      4,506  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)

  6,272,100  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (139380x)
 65,229,840  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (139380x)
  3,066,360  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (139380x)
    913,143      for(int i_=i-1; i_<=i+1; i_++){
  2,226,510          for(int j_=j-1; j_<=j+1; j_++){
  6,330,344              for(int k_=k-1; k_<=k+1; k_++){
 29,229,550                  if((*g)[i_][j_][k_]==0.0){
 37,580,850  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (835130x)

 18,372,860  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (835130x)
390,840,840  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (835130x)
    107,748                      return true;
          .                  }
          .              }
          .          }
          .      }
     17,312      return false;
    278,760  }
          .  
          .  //get linear indices of neighboring voxels on the surface
     22,890  vector<int> getSurfaceNeighbors(gridPtr g, const Eigen::Vector3i &pnt){
     13,080      vector<int> indexes;

    183,120      for(int i=pnt[0]-1; i<=pnt[0]+1; i++){

    549,360          for(int j=pnt[1]-1; j<=pnt[1]+1; j++){

  1,648,080              for(int k=pnt[2]-1; k<=pnt[2]+1; k++){

  2,736,990                  if((*g)[i][j][k]>0){

  3,973,050  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (88290x)
 41,319,720  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (88290x)
  1,942,380  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (88290x)
    265,272                      Eigen::Vector3i p;

  1,392,678                      p[0]=i; p[1]=j; p[2]=k;

  1,260,042                      if(isSurface(g,p)){

524,132,820  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:isSurface(boost::shared_ptr<grid>, Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) (66318x)

    809,664                          indexes.push_back(g->sub2ind(p));
 43,215,816  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::sub2ind(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) (50604x)


          .                      }
          .                  }
          .              }
          .          }
          .      }
      3,270      return indexes;
     16,350  }
          .  
          .  //get centroid of a list of points
     45,780  Eigen::Vector3f getCentroid(gridPtr g, const vector<int> &pnts){
     26,164      Eigen::Vector3f centroid;
      1,126  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    156,964      centroid[0]=0.0; centroid[1]=0.0; centroid[2]=0.0;
      1,523  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

  1,364,622      for(int i=0; i<pnts.size(); i++){

  2,221,518          Eigen::Vector3i p = g->ind2sub(pnts[i]);

165,444,630  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::ind2sub(int) (116922x)

  5,612,256          centroid[0]+=(float)p[0]; centroid[1]+=(float)p[1]; centroid[2]+=(float)p[2];


          .      }
    163,500      centroid[0]=centroid[0]/(float)pnts.size();


    163,500      centroid[1]=centroid[1]/(float)pnts.size();


    163,500      centroid[2]=centroid[2]/(float)pnts.size();


      6,540      return centroid;
     32,700  }
          .  
          .  //get covariance matrix of surface point
     26,160  Eigen::Matrix3f getCovariance(gridPtr g, const Eigen::Vector3i &pnt){
     55,594      vector<int> indexes = getSurfaceNeighbors(g, pnt);


      1,281  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
720,080,001  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getSurfaceNeighbors(boost::shared_ptr<grid>, Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) (3270x)
     55,594      Eigen::Vector3f centroid = getCentroid(g, indexes);
      1,041  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
122,643,545  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getCentroid(boost::shared_ptr<grid>, std::vector<int, std::allocator<int> > const&) (3270x)


     13,084      Eigen::Matrix3f covariance;

        904  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    228,912      covariance<<0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
      3,294  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)    595,884      for(int i=0; i<indexes.size(); i++){

    202,416          Eigen::Vector3f vec;

  2,175,976          vec[0]=(float)(g->ind2sub(indexes[i]))[0] - centroid[0];

 71,604,660  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::ind2sub(int) (50604x)

        833  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)


  2,175,972          vec[1]=(float)(g->ind2sub(indexes[i]))[1] - centroid[1];
 71,604,660  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::ind2sub(int) (50604x)
  2,175,972          vec[2]=(float)(g->ind2sub(indexes[i]))[2] - centroid[2];
 71,604,660  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::ind2sub(int) (50604x)
    657,852          for(int row=0; row<3; row++){
  1,973,556              for(int col=0; col<3; col++){
 18,672,880                  covariance(row,col) = covariance(row,col)+vec[row]*vec[col];

      1,120  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

          .              }
          .          }
          .      }
     42,510      for(int row=0; row<3; row++){
    127,530          for(int col=0; col<3; col++){
    971,190              covariance(row,col) = covariance(row,col)/(float)indexes.size();


          .          }
          .      }
     19,624      return covariance;
        747  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     19,620  }
          .  
          .  //get normal vector from covariance matrix
     19,620  Eigen::Vector3f getNormalVector(const Eigen::Matrix3f &covariance){
     13,084      Eigen::SelfAdjointEigenSolver<Eigen::Matrix3f> es;
      1,152  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     22,894      es.compute(covariance);

      1,240  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
      6,540      float min=10000;
      3,270      int index=0;
     42,510      for(int i=0; i<3; i++){
    127,538          int eigenvalue=es.eigenvalues()[i];


      2,778  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
     39,240          if(eigenvalue<min){
      6,540              min=eigenvalue;
      6,540              index=i;
          .          }
          .      }
     62,142      Eigen::Vector3f vec = es.eigenvectors().col(index);


      3,808  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)

    170,040      float len = sqrt(vec[0]*vec[0]+vec[1]*vec[1]+vec[2]*vec[2]);


    137,340      vec[0]=vec[0]/len; vec[1]=vec[1]/len; vec[2]=vec[2]/len;

      3,270      return vec;
     16,350  }
          .  
          .  //orient normal vector with respect to local centroid
     22,890  void orientNormal(gridPtr g, Eigen::Vector3f &normal, const Eigen::Vector3i &pnt){
    124,264      Eigen::Vector3f centroid = getCentroid(g, getNeighbors(g, pnt));
159,207,366  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getCentroid(boost::shared_ptr<grid>, std::vector<int, std::allocator<int> > const&) (3270x)

      1,217  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
204,334,304  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getNeighbors(boost::shared_ptr<grid>, Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) (3270x)


    156,960      centroid[0]-=(float)pnt[0]; centroid[1]-=(float)pnt[1]; centroid[2]-=(float)pnt[2];


    156,960      float prod = normal[0]*centroid[0]+normal[1]*centroid[1]+normal[2]*centroid[2];

     13,080      if(prod>0.0){
     80,638          normal[0]=-normal[0]; normal[1]=-normal[1]; normal[2]=-normal[2];

          .      }
     14,597  }
          .  
          .  //get indexes of surface points of volume grid
         10  vector<int> getSurface(gridPtr volume){
          8      vector<int> indexes;
        841  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

         56      gridPtr surface(new grid(volume->dims, volume->scale, volume->shift, volume->pad));


    949,452  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, int) (1x)

      6,537  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)
        209  => ???:operator new(unsigned long) (1x)
        830      for(int i=0; i<surface->dims[0]; i++){

      1,523  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

     27,594          for(int j=0; j<surface->dims[1]; j++){


  1,124,442              for(int k=0; k<surface->dims[2]; k++){


    292,252                  Eigen::Vector3i pnt;

      1,126  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
  1,534,302                  pnt[0]=i; pnt[1]=j; pnt[2]=k;

  1,388,190                  if(isSurface(volume, pnt)){

112,288,849  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:isSurface(boost::shared_ptr<grid>, Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) (73062x)

      2,979  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
     52,328                      indexes.push_back(volume->sub2ind(pnt));
  2,794,259  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::sub2ind(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) (3270x)

      2,806  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

          .                  }
          .              }
          .          }
          .      }
          2      return indexes;
          9  }
          .  
          .  //get surface normals
          7  vector<Eigen::Vector3f> getSurfaceNormals(gridPtr volume, const vector<int> &surface){
          8      vector<Eigen::Vector3f> normals;

      1,064  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
     35,986      for(int i=0; i<surface.size(); i++){

        893  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    117,732          Eigen::Matrix3f covariance = getCovariance(volume, volume->ind2sub(surface[i]));
      3,306  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)
1,420,300,448  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getCovariance(boost::shared_ptr<grid>, Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) (3270x)
  4,627,050  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::ind2sub(int) (3270x)
     19,624          Eigen::Vector3f norm = getNormalVector(covariance);
      1,041  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
133,694,655  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:getNormalVector(Eigen::Matrix<float, 3, 3, 0, 3, 3> const&) (3270x)
     19,624          normals.push_back(norm);
      1,160  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    140,618          orientNormal(volume, normals[i], volume->ind2sub(surface[i]));


      2,529  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
372,291,474  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:orientNormal(boost::shared_ptr<grid>, Eigen::Matrix<float, 3, 1, 0, 3, 1>&, Eigen::Matrix<int, 3, 1, 0, 3, 1> const&) (3270x)

  4,627,050  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::ind2sub(int) (3270x)


          .      }
          1      return normals;
          5  }
          .  
          .  //returns index in vector of value, -1 if not contained
          .  int contains(vector<int> vec, int val){
          .      for(int i=0; i<vec.size(); i++){
          .          if(vec[i]==val) return i;
          .      }
          .      return -1;
          .  }
-- line 357 ----------------------------------------
-- line 439 ----------------------------------------
          .  
          .  //********************************************************************************************************************
          .  //feature detection using normals
          .  
          .  //input is binary volume pre-smoothing
          .  //binary grid: 1=feature, 0=no feature
          .  //features can be ignored during smoothing
          .  //reasonable threshold ~0.9
         13  gridPtr getFeatureMap(gridPtr volume, gridPtr surfaceMap, const vector<Eigen::Vector3f> &normals, float threshold){
         36      gridPtr featureMap (new grid(volume->dims, volume->scale, volume->shift, volume->pad));

    943,940  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::grid(Eigen::Matrix<int, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, int) (1x)
        464  => ???:operator new(unsigned long) (1x)

        826      for(int i=0; i<featureMap->dims[0]; i++){


     27,594          for(int j=0; j<featureMap->dims[1]; j++){


  1,124,442              for(int k=0; k<featureMap->dims[2]; k++){


  2,045,736                  (*featureMap)[i][j][k]=0.0;
  3,287,790  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (73062x)

  1,607,364  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (73062x)
 34,193,016  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (73062x)
          .              }
          .          }
          .      }
          .  
          .      int edgeTable[256]={
          .      0x0  , 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,
          .      0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,
          .      0x190, 0x99 , 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,
-- line 460 ----------------------------------------
-- line 481 ----------------------------------------
          .      0x36c, 0x265, 0x16f, 0x66 , 0x76a, 0x663, 0x569, 0x460,
          .      0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,
          .      0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa , 0x1a3, 0x2a9, 0x3a0,
          .      0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,
          .      0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33 , 0x339, 0x230,
          .      0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,
          .      0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99 , 0x190,
          .      0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,
        134      0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0   };
          .  
        865      for(int i=0; i<volume->dims[0]-1; i++){


     28,037          for(int j=0; j<volume->dims[1]-1; j++){


  1,114,272              for(int k=0; k<volume->dims[2]-1; k++){


          .                  //create gridcell
          .                  int gridcell[8];
  1,899,520                  for(int n=0; n<8; n++){
  9,497,600                      int i_ = ((n%4)==1 || (n%4)==2);
  5,969,920                      int j_ = (n%4)/2;
  3,256,320                      int k_ = n/4;
 19,537,920                      gridcell[n] = (int)(*volume)[i+i_][j+j_][k+k_];
253,992,960  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (542720x)
 11,939,840  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (542720x)

 24,422,400  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (542720x)
          .                  }
     67,840                  int cubeindex=0;
    266,492                  if (gridcell[0] < 1) cubeindex |= 1;
    266,492                  if (gridcell[1] < 1) cubeindex |= 2;
    266,492                  if (gridcell[2] < 1) cubeindex |= 4;
    266,492                  if (gridcell[3] < 1) cubeindex |= 8;
    266,492                  if (gridcell[4] < 1) cubeindex |= 16;
    266,492                  if (gridcell[5] < 1) cubeindex |= 32;
    266,492                  if (gridcell[6] < 1) cubeindex |= 64;
    266,492                  if (gridcell[7] < 1) cubeindex |= 128;
          .  
          .                  //check if cube is on the edge
    403,312                  if(edgeTable[cubeindex]==0) continue;
          .  
          .                  //check for feature in cube
          .                  //get opening angles of normals
      7,456                  float min=5.0;
     93,200                  for(int n=0; n<7; n++){
    469,728                      for(int m=n+1; m<8; m++){
  1,796,896                          int i_1 = ((n%4)==1 || (n%4)==2);
  1,148,224                          int j_1 = (n%4)/2;
    626,304                          int k_1 = n/4;
  1,856,544                          int i_2 = ((m%4)==1 || (m%4)==2);
  1,148,224                          int j_2 = (m%4)/2;
    626,304                          int k_2 = m/4;
  3,549,056                          int index1 = (*surfaceMap)[i+i_1][j+j_1][k+k_1];
 48,851,712  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (104384x)
  2,296,448  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (104384x)

  4,697,280  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (104384x)
  3,549,056                          int index2 = (*surfaceMap)[i+i_2][j+j_2][k+k_2];

  4,697,280  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (104384x)
 48,851,712  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (104384x)
  2,296,448  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (104384x)
    307,328                          if(index1==-1 || index2==-1) continue;
    359,545                          Eigen::Vector3f norm1 = normals[index1];

      1,441  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

    359,541                          Eigen::Vector3f norm2 = normals[index2];


  1,299,879                          float angle = norm1[0]*norm2[0]+norm1[1]*norm2[1]+norm1[2]*norm2[2];

    118,497                          if(angle<min) min=angle;
          .                      }
          .                  }
          .  
          .                  //check if within threshold for feature detection
     14,539                  if(min>=threshold) continue;
          .  
          .                  //set feature points to 1.0
      3,730                  for(int i_=0; i_<2; i_++){
      7,460                      for(int j_=0; j_<2; j_++){
     14,920                          for(int k_=0; k_<2; k_++){
    110,408                              if((*surfaceMap)[i+i_][j+j_][k+k_]>-1.0){
  1,396,512  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (2984x)
     65,648  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (2984x)

    134,280  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (2984x)
     68,102                                  (*featureMap)[i+i_][j+j_][k+k_]=1.0;

     90,135  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::operator[](int) (2003x)
    937,404  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::operator[](int) (2003x)
     44,066  => /home/davidwatkins/post_processing/mesh_reconstruction/grid/grid.cpp:grid::y_z::z::operator[](int) (2003x)
          .                              }
          .                          }
          .                      }
          .                  }
          .  
          .              }
          .          }
          .      }//end of iteration through grid
          .  
          2      return featureMap;
         27  }
     14,301  => /home/davidwatkins/post_processing/mesh_reconstruction/distance_fields/dfields.cpp:__static_initialization_and_destruction_0(int, int) (1x)
          .  

--------------------------------------------------------------------------------
-- Auto-annotated source: /home/davidwatkins/post_processing/mesh_reconstruction/binvoxToPCL/binvoxToPcl.cpp
--------------------------------------------------------------------------------
        Ir 

         .  
         .  #include "binvoxToPcl.h"
         .  
         .  using namespace std;
         .  
         .  typedef unsigned char byte;
         .  
         .  
 5,694,624  int get_index(const binvox &vox, int x, int y, int z){
 5,694,624      int wxh = vox.width*vox.height;
 9,491,040      int index = x*wxh + z*vox.width + y;
   949,104      return index;
 1,898,208  }
         .  
         .  int read_binvox(binvox* vox, string filespec)
        16  {
         .  
        56    ifstream *input = new ifstream(filespec.c_str(), ios::in | ios::binary);
     1,254  => ???:operator new(unsigned long) (2x)

     8,260  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)
     7,448  => ???:std::basic_ifstream<char, std::char_traits<char> >::basic_ifstream(char const*, std::_Ios_Openmode) (2x)
         4  => ???:std::string::c_str() const (2x)
         .  
         .    //
         .    // read header
         .    //
        12    string line;
         8  => ???:std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() (2x)
     2,172  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        16    *input >> line;  // #binvox
     1,916  => ???:std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (2x)
     3,183  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        22    if (line.compare("#binvox") != 0) {
       142  => ???:std::string::compare(char const*) const (2x)
     2,326  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .      cout << "Error: first line reads [" << line << "] instead of [#binvox]" << endl;
         .      delete input;
         .      return 0;
         .    }
        16    *input >> vox->version;
     2,346  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
       726  => ???:std::istream::operator>>(int&) (2x)
        32    cout << "reading binvox version " << vox->version << endl;
       716  => ???:std::ostream::operator<<(int) (2x)
       796  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (2x)
       682  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (2x)
         .  
         4    vox->depth = -1;
         2    int done = 0;
       184    while(input->good() && !done) {
        40  => ???:std::basic_ios<char, std::char_traits<char> >::good() const (10x)
     2,689  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        48      *input >> line;
     4,624  => ???:std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (8x)
        76      if (line.compare("data") == 0) done = 1;
       526  => ???:std::string::compare(char const*) const (8x)
        54      else if (line.compare("dim") == 0) {
       394  => ???:std::string::compare(char const*) const (6x)
        40        *input >> vox->depth >> vox->height >> vox->width;
     2,502  => ???:std::istream::operator>>(int&) (6x)
         .      }
        36      else if (line.compare("translate") == 0) {
       270  => ???:std::string::compare(char const*) const (4x)
        44        *input >> vox->tx >> vox->ty >> vox->tz;
     2,257  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
    19,966  => ???:std::istream::operator>>(float&) (6x)
         .      }
        18      else if (line.compare("scale") == 0) {
       138  => ???:std::string::compare(char const*) const (2x)
        16        *input >> vox->scale;
     5,294  => ???:std::istream::operator>>(float&) (2x)
         .      }
         .      else {
         .        cout << "  unrecognized keyword [" << line << "], skipping" << endl;
         .        char c;
         .        do {  // skip until end of line
         .          c = input->get();
         .        } while(input->good() && (c != '\n'));
         .  
         .      }
         .    }
         4    if (!done) {
         .      cout << "  error reading header" << endl;
         .      return 0;
         .    }
         8    if (vox->depth == -1) {
         .      cout << "  missing dimensions in header" << endl;
         .      return 0;
         .    }
         .  
        20    vox->size = vox->width * vox->height * vox->depth;
        20    vox->voxels = new byte[vox->size];
       968  => ???:operator new[](unsigned long) (2x)
     2,129  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         8    if (!vox->voxels) {
         .      cout << "  error allocating memory" << endl;
         .      return 0;
         .    }
         .  
         .    //
         .    // read voxel data
         .    //
         .    byte value;
         .    byte count;
         2    int index = 0;
         2    int end_index = 0;
         2    int nr_voxels = 0;
         .  
        26    input->unsetf(ios::skipws);  // need to read every byte now (!)

     1,024  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        16    *input >> value;  // read the linefeed char
     1,740  => ???:std::basic_istream<char, std::char_traits<char> >& std::operator>><std::char_traits<char> >(std::basic_istream<char, std::char_traits<char> >&, unsigned char&) (2x)
     2,847  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
    37,736    while((end_index < vox->size) && input->good()) {
     7,544  => ???:std::basic_ios<char, std::char_traits<char> >::good() const (1886x)
    20,746      *input >> value >> count;
   215,004  => ???:std::basic_istream<char, std::char_traits<char> >& std::operator>><std::char_traits<char> >(std::basic_istream<char, std::char_traits<char> >&, unsigned char&) (3772x)
         .  
    22,632      if (input->good()) {
     7,544  => ???:std::basic_ios<char, std::char_traits<char> >::good() const (1886x)
     9,430        end_index = index + count;
     7,544        if (end_index > vox->size) return 0;
 1,419,316        for(int i=index; i < end_index; i++) vox->voxels[i] = value;
         .  
     7,944        if (value) nr_voxels += count;
     3,772        index = end_index;
         .      }  // if file still ok
         .  
         .    }  // while
         .  
        12    input->close();
     1,468  => ???:std::basic_ifstream<char, std::char_traits<char> >::close() (2x)
     2,779  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        38    cout << "  read " << nr_voxels << " voxels" << endl;
     1,164  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (4x)
       682  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (2x)
       818  => ???:std::ostream::operator<<(int) (2x)
         .  
        18    return 1;
       222  => ???:std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() (2x)
     2,207  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
        12  }
         .  
        16  pcl::PointCloud<pcl::PointXYZ>::Ptr binvoxToPCL(string filespec, int res_factor){
         4      if(res_factor<1){
         .          cout<<"Resolution factor must be at least 1"<<endl<<endl;
         .          exit(1);
         .      }
         .      binvox vox;
        44      if (!read_binvox(&vox, filespec)){
       894  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 1,851,636  => /home/davidwatkins/post_processing/mesh_reconstruction/binvoxToPCL/binvoxToPcl.cpp:read_binvox(binvox*, std::string) (2x)
        38  => ???:std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() (2x)
        38  => ???:std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (2x)
         .          cout << "Error reading [" << filespec << "]" <<endl <<endl;
         .          exit(1);
         .      }
         .  
         .      //convert voxels to point cloud
        24      pcl::PointCloud<pcl::PointXYZ>::Ptr cloud (new pcl::PointCloud<pcl::PointXYZ> ());       402      for(int x=0; x<vox.depth-1; x++){
    15,678          for(int y=0; y<vox.width-1; y++){
   611,442              for(int z=0; z<vox.height-1; z++){
         .                  //get indexes of cube
   474,556                  vector<int> indexes;

       841  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
 1,186,380                  for(int i=0; i<=1; i++){
 2,372,760                      for(int j=0; j<=1; j++){
 4,745,520                          for(int k=0; k<=1; k++){
18,982,088                              indexes.push_back(get_index(vox, x+i, y+j, z+k));
23,727,600  => /home/davidwatkins/post_processing/mesh_reconstruction/binvoxToPCL/binvoxToPcl.cpp:get_index(binvox const&, int, int, int) (949104x)
     1,877  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

         .                          }
         .                      }
         .                  }
         .  
         .                  //create points evenly distributed inside of cube
 1,305,018                  for(int i=0; i<res_factor; i++){
 2,076,165                      for(int j=0; j<res_factor; j++){
 3,618,459                          for(int k=0; k<res_factor; k++){
 2,135,488                              Eigen::Vector3f pnt;
     1,126  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 5,872,585                              pnt[0] = (float)x+((float)i)/((float)res_factor);
     1,523  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

 5,872,581                              pnt[1] = (float)y+((float)j)/((float)res_factor);

 5,872,581                              pnt[2] = (float)z+((float)k)/((float)res_factor);

         .                              //check if pnt is closer to surface then outside
 1,067,742                              float val=0.0;
14,948,388                              for(int n=0; n<8; n++){
         .                                  //get distance to point (l1 norm)
25,625,808                                  int a=n/4;
46,980,648                                  int b=(n%4)/2;
51,251,616                                  int c=(n%4)%2;
72,606,460                                  float dist = fabs(pnt[0]-(float)(x+a));


       677  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
72,606,456                                  dist+= fabs(pnt[1]-(float)(y+b));


72,606,456                                  dist+= fabs(pnt[2]-(float)(z+c));


29,896,776                                  dist+= 0.00001;
72,606,460                                  float weight = (float)(2*vox.voxels[indexes[n]]-1);
       833  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)

21,354,840                                  val+=(weight/dist);
         .                              }
 2,135,484                              if(val>0.0){
    67,900                                  pcl::PointXYZ p;

       703  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
   458,298                                  p.x = (pnt[0]+0.5)*vox.scale/((float)vox.depth)+vox.tx;

   458,298                                  p.y = (pnt[1]+0.5)*vox.scale/((float)vox.width)+vox.ty;

   458,298                                  p.z = (pnt[2]+0.5)*vox.scale/((float)vox.height)+vox.tz;

   152,766                                  cloud->push_back(p);


         .                              }
         .                          }
         .                      }
         .                  }//finished generate points for cube x,y,z
         .  
   474,552              }

         .          }
         .      }//finished generating point cloud
         .  
         4      return cloud;
        12  }
         .  
         .  //function returns density by finding average distance between points in cloud
        12  float getDensity(pcl::PointCloud<pcl::PointXYZ>::Ptr cloud){
         .      //create new cloud missing every ten points
        36      pcl::PointCloud<pcl::PointXYZ>::Ptr new_cloud (new pcl::PointCloud<pcl::PointXYZ>());


     3,321  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)

   142,675      for(int i=0; i<cloud->points.size(); i++){

     3,193  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)

   152,144          if((i%10)>0){
   171,148              new_cloud->push_back(cloud->points[i]);

     2,635  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


         .          }
         .      }
         .  
         .  
         .      //create kd tree
        26      pcl::KdTreeFLANN<pcl::PointXYZ> kdtree;
     3,634  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
     3,168  => ???:pcl::KdTreeFLANN<pcl::PointXYZ, flann::L2_Simple<float> >::KdTreeFLANN(bool) (2x)

        72      kdtree.setInputCloud(new_cloud);
 8,138,962  => ???:pcl::KdTreeFLANN<pcl::PointXYZ, flann::L2_Simple<float> >::setInputCloud(boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> const> const&, boost::shared_ptr<std::vector<int, std::allocator<int> > const> const&) (2x)

     9,252  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (5x)         .  
         4      float distTotal = 0.0;
         2      int count = 0;
    14,312      for(int i=0; i<cloud->points.size(); i+=10){


         .          //perform nearest neighbor search
    15,244          vector<int> pointIdxNKNSearch(1);
     2,220  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (3x)    20,008          vector<float> pointNKNSquaredDistance(1);
     3,347  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)
    19,996          kdtree.nearestKSearch(cloud->points[i], 1, pointIdxNKNSearch, pointNKNSquaredDistance);

 5,261,420  => ???:pcl::KdTreeFLANN<pcl::PointXYZ, flann::L2_Simple<float> >::nearestKSearch(pcl::PointXYZ const&, int, std::vector<int, std::allocator<int> >&, std::vector<float, std::allocator<float> >&) const (952x)

     3,224  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .          //get distance
    14,288          distTotal += (float) sqrt((double)pointNKNSquaredDistance[0]);
     3,353  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
     4,760  => /build/eglibc-oGUzwX/eglibc-2.19/math/w_sqrt.c:sqrt (952x)

       952          count++;
     3,812      }

       747  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
         .  
        68      cout<<"Total Dist: "<< distTotal<<" Count: "<<count<<endl;
       682  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (2x)
     1,204  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (4x)
     4,109  => ???:std::ostream::operator<<(int) (2x)
    11,748  => ???:std::ostream::operator<<(float) (2x)
     9,628  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (4x)
         .  
        22      return (float)count/distTotal;

     1,302  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        14  }
         .  
         6  int getResolutionFactor(string filespec, pcl::PointCloud<pcl::PointXYZ>::Ptr otherCloud){
         .    //float otherDensity = 3.0*getDensity(otherCloud)/4.0;
        31      float otherDensity = 3.0*getDensity(otherCloud)/8.0;
     2,632  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)


14,694,950  => /home/davidwatkins/post_processing/mesh_reconstruction/binvoxToPCL/binvoxToPcl.cpp:getDensity(boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >) (1x)
        25      pcl::PointCloud<pcl::PointXYZ>::Ptr initCloud = binvoxToPCL(filespec);
663,484,564  => /home/davidwatkins/post_processing/mesh_reconstruction/binvoxToPCL/binvoxToPcl.cpp:binvoxToPCL(std::string, int) (1x)
        19  => ???:std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (1x)
     3,141  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (2x)
        19  => ???:std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() (1x)
        17      float density = getDensity(initCloud);
 3,535,740  => /home/davidwatkins/post_processing/mesh_reconstruction/binvoxToPCL/binvoxToPcl.cpp:getDensity(boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >) (1x)


        17      cout<<"Observed density: "<<otherDensity<<endl;
     3,192  => ???:std::ostream::operator<<(float) (1x)
       365  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
       341  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
        17      cout<<"Completed density: "<<density<<endl;
       374  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
       341  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
     3,201  => ???:std::ostream::operator<<(float) (1x)
         3      if(density>otherDensity){
         .          cout<<"Resolution Factor: 1"<<endl;
         .          return 1;
         .      }
         .      else{
        10          int res_factor = (int)ceil(otherDensity/density);

       781  => /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-trampoline.S:_dl_runtime_resolve (1x)
        15          cout<<"Resolution Factor: "<<res_factor<<endl;
       374  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
       341  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
       358  => ???:std::ostream::operator<<(int) (1x)
         1          return res_factor;
         6      }

         4  }
         .  
         .  //automatically adjust point cloud resolutions based on density ratio:
         .  pcl::PointCloud<pcl::PointXYZ>::Ptr binvoxToPCL_autores(string filespec, pcl::PointCloud<pcl::PointXYZ>::Ptr otherCloud){
         .      int res_factor = getResolutionFactor(filespec, otherCloud);
         .      return binvoxToPCL(filespec, res_factor);
        18  }
    14,297  => /home/davidwatkins/post_processing/mesh_reconstruction/binvoxToPCL/binvoxToPcl.cpp:__static_initialization_and_destruction_0(int, int) (1x)
         .  

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
        Ir 

-- line 71 ----------------------------------------
         .          { typedef new_allocator<_Tp1> other; };
         .  
         .  #if __cplusplus >= 201103L
         .        // _GLIBCXX_RESOLVE_LIB_DEFECTS
         .        // 2103. propagate_on_container_move_assignment
         .        typedef std::true_type propagate_on_container_move_assignment;
         .  #endif
         .  
 1,309,875        new_allocator() _GLIBCXX_USE_NOEXCEPT { }
         .  
 2,282,046        new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
         .  
         .        template<typename _Tp1>
         .          new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
         .  
 3,206,850        ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
         .  
         .        pointer
         .        address(reference __x) const _GLIBCXX_NOEXCEPT
         .        { return std::__addressof(__x); }
         .  
         .        const_pointer
         .        address(const_reference __x) const _GLIBCXX_NOEXCEPT
         .        { return std::__addressof(__x); }
         .  
         .        // NB: __n is permitted to be 0.  The C++ standard says nothing
         .        // about what the return value is when __n == 0.
         .        pointer
 5,069,820        allocate(size_type __n, const void* = 0)
         .        { 
 6,759,774  	if (__n > this->max_size())

         .  	  std::__throw_bad_alloc();
         .  
 5,135,577  	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       339  => ???:operator new(unsigned long) (3x)
 1,689,940        }
         .  
         .        // __p is not permitted to be a null pointer.
         .        void
 5,064,042        deallocate(pointer __p, size_type)
 5,064,054        { ::operator delete(__p); }
       326  => ???:operator delete(void*) (1x)
         .  
         .        size_type
 6,494,340        max_size() const _GLIBCXX_USE_NOEXCEPT
 6,494,340        { return size_t(-1) / sizeof(_Tp); }
         .  
         .  #if __cplusplus >= 201103L
         .        template<typename _Up, typename... _Args>
         .          void
         .          construct(_Up* __p, _Args&&... __args)
         .  	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
         .  
         .        template<typename _Up>
         .          void 
         .          destroy(_Up* __p) { __p->~_Up(); }
         .  #else
         .        // _GLIBCXX_RESOLVE_LIB_DEFECTS
         .        // 402. wrong new expression in [some_] allocator::construct
         .        void 
 9,612,234        construct(pointer __p, const _Tp& __val) 
18,192,825        { ::new((void *)__p) _Tp(__val); }

         .  
         .        void 
    72,138        destroy(pointer __p) { __p->~_Tp(); }
         .  #endif
         .      };
         .  
         .    template<typename _Tp>
         .      inline bool
         .      operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
         .      { return true; }
         .    
-- line 141 ------------------------------------------------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  /build/eglibc-oGUzwX/eglibc-2.19/elf/dl-misc.c
  /build/eglibc-oGUzwX/eglibc-2.19/stdio-common/printf_fp.c
  /build/eglibc-oGUzwX/eglibc-2.19/stdlib/../stdlib/strtol_l.c
  /build/eglibc-oGUzwX/eglibc-2.19/stdlib/cxa_finalize.c
  /build/eglibc-oGUzwX/eglibc-2.19/stdio-common/vfprintf.c
  /build/eglibc-oGUzwX/eglibc-2.19/stdlib/../sysdeps/x86_64/mul_1.S
  /build/eglibc-oGUzwX/eglibc-2.19/elf/dl-lookup.c
  /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S
  /build/eglibc-oGUzwX/eglibc-2.19/malloc/malloc.c
  /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/memset.S
  /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/../strcmp.S
  /build/eglibc-oGUzwX/eglibc-2.19/elf/do-rel.h
  /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/x86_64/dl-machine.h
  /build/eglibc-oGUzwX/eglibc-2.19/elf/../sysdeps/generic/dl-hash.h
  /build/eglibc-oGUzwX/eglibc-2.19/string/../sysdeps/x86_64/multiarch/memcpy-sse2-unaligned.S

--------------------------------------------------------------------------------
Ir 
--------------------------------------------------------------------------------
98  percentage of events annotated

